<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.5">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="host" elementType="Argument">
            <stringProp name="Argument.name">host</stringProp>
            <stringProp name="Argument.value">www.thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="scheme" elementType="Argument">
            <stringProp name="Argument.name">scheme</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">www.thinktimetechnology.atlassian.net</stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol">https</stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
        <stringProp name="delimiter">,</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="filename">C:/Users/KARTHI SHREE/Desktop/JMeter_Projects/CSV Files/users for atlassian.csv</stringProp>
        <boolProp name="ignoreFirstLine">false</boolProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="variableNames">user,pass</stringProp>
      </CSVDataSet>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">4</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1370726934000</longProp>
        <longProp name="ThreadGroup.end_time">1370726934000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">120</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <RecordingController guiclass="RecordController" testclass="RecordingController" testname="Recording Controller" enabled="false"/>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="01_Launch" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01_Launch-2" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="continue" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">continue</stringProp>
                  <stringProp name="Argument.value">${scheme}://thinktimetechnology.atlassian.net/wiki?cloudId=f21b70d0-8bad-458e-9a03-d1d9544e0e8c&amp;atlOrigin=eyJwIjoiYWRtaW4iLCJpIjoiZDBjNzZmMDk4NTMyNGJhYjg5YzU4N2E5NWU5OTE0NzAifQ==</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="locale" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">locale</stringProp>
                  <stringProp name="Argument.value">en_US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="cloudId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cloudId</stringProp>
                  <stringProp name="Argument.value">f21b70d0-8bad-458e-9a03-d1d9544e0e8c</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/getstarted/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01_Launch-7" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/flags/api/v1/frontend/featureFlagValues</stringProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">content-type,x-api-key,x-client-name,x-client-version</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01_Launch-8" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/me</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/getstarted/?continue=${scheme}%3A%2F%2Fthinktimetechnology.atlassian.net%2Fwiki%3FcloudId%3Df21b70d0-8bad-458e-9a03-d1d9544e0e8c%26atlOrigin%3DeyJwIjoiYWRtaW4iLCJpIjoiZDBjNzZmMDk4NTMyNGJhYjg5YzU4N2E5NWU5OTE0NzAifQ%3D%3D&amp;locale=en_US&amp;cloudId=f21b70d0-8bad-458e-9a03-d1d9544e0e8c</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01_Launch-9" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/me</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01_Launch-10" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;batch&quot;:[{&quot;context&quot;:{&quot;locale&quot;:&quot;en-US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.2.0&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:57:42.913Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:null,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;identity&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;source&quot;:&quot;userSegmentation&quot;,&quot;actionSubject&quot;:&quot;fxInitialization&quot;,&quot;action&quot;:&quot;error&quot;,&quot;attributes&quot;:{&quot;message&quot;:&quot;Error: fx3 client- LD initialization timed out&quot;,&quot;stack&quot;:&quot;Error: fx3 client- LD initialization timed out\n    at ${scheme}://thinktimetechnology.atlassian.net/getstarted/static/js/index.bf04d949.js:1:198808\n    at r (${scheme}://thinktimetechnology.atlassian.net/getstarted/static/js/index.bf04d949.js:1:532552)&quot;},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;7a221ed3-5899-4fdd-9888-d7fe0764d7df&quot;},&quot;event&quot;:&quot;fxInitialization error&quot;,&quot;messageId&quot;:&quot;ajs-5548c0c6-e70a-45e6-bc3a-9d978b533318&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:57:43.495Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en-US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.2.0&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:57:42.939Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:null,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;identity&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;source&quot;:&quot;@atlassiansox/feature-flag-web-client&quot;,&quot;actionSubject&quot;:&quot;feature&quot;,&quot;action&quot;:&quot;exposed&quot;,&quot;attributes&quot;:{&quot;flagKey&quot;:&quot;user-segmentation.use-migrated-account-setup&quot;,&quot;reason&quot;:&quot;ERROR&quot;,&quot;errorKind&quot;:&quot;CLIENT_NOT_READY&quot;,&quot;value&quot;:&quot;not-enrollled&quot;},&quot;tags&quot;:[&quot;measurement&quot;],&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;7a221ed3-5899-4fdd-9888-d7fe0764d7df&quot;},&quot;event&quot;:&quot;feature exposed&quot;,&quot;messageId&quot;:&quot;ajs-686233a3-1fb0-4bef-87f8-8c434e460f8e&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:57:43.495Z&quot;}],&quot;sentAt&quot;:&quot;2022-09-26T05:57:43.495Z&quot;,&quot;metadata&quot;:{&quot;eventCount&quot;:2,&quot;resilienceMechanism&quot;:&quot;indexeddb&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/gasv3/api/v1/batch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/getstarted/?continue=${scheme}%3A%2F%2Fthinktimetechnology.atlassian.net%2Fwiki%3FcloudId%3Df21b70d0-8bad-458e-9a03-d1d9544e0e8c%26atlOrigin%3DeyJwIjoiYWRtaW4iLCJpIjoiZDBjNzZmMDk4NTMyNGJhYjg5YzU4N2E5NWU5OTE0NzAifQ%3D%3D&amp;locale=en_US&amp;cloudId=f21b70d0-8bad-458e-9a03-d1d9544e0e8c</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01_Launch-13" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;apiKey&quot;:&quot;979e674d-0163-49a3-aa85-0f018183893a&quot;,&quot;identifier&quot;:{&quot;type&quot;:&quot;tenantId&quot;,&quot;value&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;},&quot;metadata&quot;:{&quot;client&quot;:{&quot;name&quot;:&quot;feature-flag-web-client&quot;,&quot;version&quot;:&quot;1.19.1&quot;},&quot;config&quot;:{&quot;pollingSeconds&quot;:300},&quot;state&quot;:{&quot;visibility&quot;:&quot;visible&quot;,&quot;storage&quot;:&quot;available&quot;,&quot;userContext&quot;:&quot;new&quot;,&quot;cause&quot;:&quot;initialization&quot;}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/flags/api/v1/frontend/featureFlagValues</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="X-Client-Version" elementType="Header">
                  <stringProp name="Header.name">X-Client-Version</stringProp>
                  <stringProp name="Header.value">1.19.1</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="X-Api-Key" elementType="Header">
                  <stringProp name="Header.name">X-Api-Key</stringProp>
                  <stringProp name="Header.value">979e674d-0163-49a3-aa85-0f018183893a</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="X-Client-Name" elementType="Header">
                  <stringProp name="Header.name">X-Client-Name</stringProp>
                  <stringProp name="Header.value">feature-flag-web-client</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01_Launch-11" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;message&quot;:&quot;Client-side Error&quot;,&quot;error&quot;:{&quot;message&quot;:&quot;Unable to retrieve user info (client error): Fetch client error, status = 401::Fetch client error, status = 401&quot;,&quot;name&quot;:&quot;Error&quot;,&quot;stack&quot;:&quot;Error: Unable to retrieve user info (client error): Fetch client error, status = 401::Fetch client error, status = 401\n    at ${scheme}://thinktimetechnology.atlassian.net/getstarted/static/js/index.bf04d949.js:1:1142512\n    at g (${scheme}://thinktimetechnology.atlassian.net/getstarted/static/js/index.bf04d949.js:1:704013)\n    at Generator._invoke (${scheme}://thinktimetechnology.atlassian.net/getstarted/static/js/index.bf04d949.js:1:703766)\n    at forEach.e.&lt;computed&gt; [as throw] (${scheme}://thinktimetechnology.atlassian.net/getstarted/static/js/index.bf04d949.js:1:704193)\n    at r (${scheme}://thinktimetechnology.atlassian.net/getstarted/static/js/index.bf04d949.js:1:30789)\n    at u (${scheme}://thinktimetechnology.atlassian.net/getstarted/static/js/index.bf04d949.js:1:31028)&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;url&quot;:&quot;${scheme}://thinktimetechnology.atlassian.net/getstarted/?continue=${scheme}%3A%2F%2Fthinktimetechnology.atlassian.net%2Fwiki%3FcloudId%3Df21b70d0-8bad-458e-9a03-d1d9544e0e8c%26atlOrigin%3DeyJwIjoiYWRtaW4iLCJpIjoiZDBjNzZmMDk4NTMyNGJhYjg5YzU4N2E5NWU5OTE0NzAifQ%3D%3D&amp;locale=en_US&amp;cloudId=f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;inIframe&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/user-seg-redirector/v1/redirect-event/warning</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/getstarted/?continue=${scheme}%3A%2F%2Fthinktimetechnology.atlassian.net%2Fwiki%3FcloudId%3Df21b70d0-8bad-458e-9a03-d1d9544e0e8c%26atlOrigin%3DeyJwIjoiYWRtaW4iLCJpIjoiZDBjNzZmMDk4NTMyNGJhYjg5YzU4N2E5NWU5OTE0NzAifQ%3D%3D&amp;locale=en_US&amp;cloudId=f21b70d0-8bad-458e-9a03-d1d9544e0e8c</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01_Launch-14" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="cloudId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cloudId</stringProp>
                  <stringProp name="Argument.value">f21b70d0-8bad-458e-9a03-d1d9544e0e8c</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="atlOrigin" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">atlOrigin</stringProp>
                  <stringProp name="Argument.value">eyJwIjoiYWRtaW4iLCJpIjoiZDBjNzZmMDk4NTMyNGJhYjg5YzU4N2E5NWU5OTE0NzAifQ==</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/wiki</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/getstarted/?continue=${scheme}%3A%2F%2Fthinktimetechnology.atlassian.net%2Fwiki%3FcloudId%3Df21b70d0-8bad-458e-9a03-d1d9544e0e8c%26atlOrigin%3DeyJwIjoiYWRtaW4iLCJpIjoiZDBjNzZmMDk4NTMyNGJhYjg5YzU4N2E5NWU5OTE0NzAifQ%3D%3D&amp;locale=en_US&amp;cloudId=f21b70d0-8bad-458e-9a03-d1d9544e0e8c</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01_Launch-15" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="application" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">application</stringProp>
                  <stringProp name="Argument.value">confluence</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="dest-url" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dest-url</stringProp>
                  <stringProp name="Argument.value">/wiki/?cloudId=f21b70d0-8bad-458e-9a03-d1d9544e0e8c&amp;atlOrigin=eyJwIjoiYWRtaW4iLCJpIjoiZDBjNzZmMDk4NTMyNGJhYjg5YzU4N2E5NWU5OTE0NzAifQ%3D%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/login</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/getstarted/?continue=${scheme}%3A%2F%2Fthinktimetechnology.atlassian.net%2Fwiki%3FcloudId%3Df21b70d0-8bad-458e-9a03-d1d9544e0e8c%26atlOrigin%3DeyJwIjoiYWRtaW4iLCJpIjoiZDBjNzZmMDk4NTMyNGJhYjg5YzU4N2E5NWU5OTE0NzAifQ%3D%3D&amp;locale=en_US&amp;cloudId=f21b70d0-8bad-458e-9a03-d1d9544e0e8c</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01_Launch-16" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="continue" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">continue</stringProp>
                  <stringProp name="Argument.value">${scheme}://id.atlassian.com/join/user-access?resource=ari%3Acloud%3Aconfluence%3A%3Asite%2Ff21b70d0-8bad-458e-9a03-d1d9544e0e8c&amp;continue=${scheme}%3A%2F%2Fthinktimetechnology.atlassian.net%2Fwiki%2F%3FcloudId%3Df21b70d0-8bad-458e-9a03-d1d9544e0e8c%26atlOrigin%3DeyJwIjoiYWRtaW4iLCJpIjoiZDBjNzZmMDk4NTMyNGJhYjg5YzU4N2E5NWU5OTE0NzAifQ%253D%253D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="application" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">application</stringProp>
                  <stringProp name="Argument.value">confluence</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">id.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/login</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="CSRF" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">csrf</stringProp>
              <stringProp name="RegexExtractor.regex">csrfToken&amp;quot;:&amp;quot;(.*?)&amp;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">no_csrf</stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01_Launch-27" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;message&quot;:&quot;i18n_fetch_language_error&quot;,&quot;level&quot;:&quot;error&quot;,&quot;event_id&quot;:&quot;e1045713994a4b9591e9ae122fc054ae&quot;,&quot;platform&quot;:&quot;javascript&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.browser&quot;,&quot;packages&quot;:[{&quot;name&quot;:&quot;npm:@sentry/browser&quot;,&quot;version&quot;:&quot;5.18.0&quot;}],&quot;version&quot;:&quot;5.18.0&quot;,&quot;integrations&quot;:[&quot;InboundFilters&quot;,&quot;FunctionToString&quot;,&quot;TryCatch&quot;,&quot;Breadcrumbs&quot;,&quot;GlobalHandlers&quot;,&quot;LinkedErrors&quot;,&quot;UserAgent&quot;]},&quot;timestamp&quot;:1664171873.6887999,&quot;environment&quot;:&quot;prod&quot;,&quot;release&quot;:&quot;5.0.366&quot;,&quot;extra&quot;:{&quot;isEmbedded&quot;:false,&quot;isMobileOidc&quot;:false,&quot;aid_signup.microsoft.auth.enabled&quot;:true,&quot;aid_signup.apple.auth.enabled&quot;:true,&quot;aid_signup.recaptcha_enterprise.enabled&quot;:true,&quot;aid_signup.disallow.bitbucket.username.login&quot;:true,&quot;sign-in-with-slack.enabled&quot;:true,&quot;aid-frontend.google.login.outage.advisory.enabled&quot;:false,&quot;aid-frontend.microsoft.login.outage.advisory.enabled&quot;:false,&quot;aid-frontend.apple.login.outage.advisory.enabled&quot;:false,&quot;aid-frontend.slack.login.outage.advisory.enabled&quot;:false,&quot;aid-frontend.enable-subbranding&quot;:false,&quot;aid-frontend.google.one.tap.enabled&quot;:true,&quot;aid-frontend.growth.login-page-optimisation&quot;:&quot;no-anonymous-id&quot;,&quot;aid-frontend.growth.login-page-optimisation-v2&quot;:&quot;control&quot;,&quot;aid-signup.defer-auth0-rules-for-apple.enabled&quot;:false,&quot;aid-signup.defer-auth0-rules-for-microsoft.enabled&quot;:false,&quot;aid-signup.defer-auth0-rules-for-slack.enabled&quot;:false,&quot;localeId&quot;:&quot;en&quot;,&quot;code&quot;:&quot;MODULE_NOT_FOUND&quot;},&quot;user&quot;:{&quot;id&quot;:&quot;[undefined]&quot;},&quot;breadcrumbs&quot;:[{&quot;timestamp&quot;:1664171873.6300998,&quot;category&quot;:&quot;operational&quot;,&quot;message&quot;:&quot;loadPage operational event occured at sli undefined on page unknown&quot;,&quot;data&quot;:{&quot;source&quot;:&quot;unknown&quot;,&quot;actionSubject&quot;:&quot;sli&quot;,&quot;action&quot;:&quot;loadPage&quot;,&quot;actionSubjectId&quot;:&quot;[undefined]&quot;,&quot;firstProductAccessed&quot;:&quot;confluence&quot;,&quot;originLibrary&quot;:&quot;origin-tracing.js@6.0.8&quot;,&quot;isMobileApp&quot;:false,&quot;ffsId&quot;:&quot;43ab9eef-8ea7-44c5-bf8e-9c5a7b45c5f4&quot;},&quot;level&quot;:&quot;info&quot;}],&quot;request&quot;:{&quot;url&quot;:&quot;${scheme}://id.atlassian.com/login?continue=${scheme}%3A%2F%2Fid.atlassian.com%2Fjoin%2Fuser-access%3Fresource%3Dari%253Acloud%253Aconfluence%253A%253Asite%252Ff21b70d0-8bad-458e-9a03-d1d9544e0e8c%26continue%3Dhttps%253A%252F%252Fthinktimetechnology.atlassian.net%252Fwiki%252F%253FcloudId%253Df21b70d0-8bad-458e-9a03-d1d9544e0e8c%2526atlOrigin%253DeyJwIjoiYWRtaW4iLCJpIjoiZDBjNzZmMDk4NTMyNGJhYjg5YzU4N2E5NWU5OTE0NzAifQ%25253D%25253D&amp;application=confluence&quot;,&quot;headers&quot;:{&quot;User-Agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/sentry-cloud/api/275199/store/?sentry_key=71e54c28be0d49f0bcd732ab30f35faa&amp;sentry_version=7</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01_Launch-28" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;type&quot;:&quot;metric&quot;,&quot;meta&quot;:{&quot;version&quot;:&quot;5.0.366&quot;,&quot;env&quot;:&quot;prod&quot;,&quot;os&quot;:&quot;windows&quot;,&quot;platform&quot;:&quot;desktop&quot;,&quot;browser&quot;:&quot;chrome&quot;},&quot;metalId&quot;:&quot;106040e7-7aa1-40d4-af50-1464ab63b642&quot;,&quot;data&quot;:[{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.resource_timing&quot;,&quot;tags&quot;:[&quot;page:login&quot;,&quot;type:script&quot;],&quot;value&quot;:1535.9000000003725,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.resource_timing&quot;,&quot;tags&quot;:[&quot;page:login&quot;,&quot;type:link&quot;],&quot;value&quot;:3851.100000000559,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.resource_timing&quot;,&quot;tags&quot;:[&quot;page:login&quot;,&quot;type:script&quot;],&quot;value&quot;:4016.199999999255,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.resource_timing&quot;,&quot;tags&quot;:[&quot;page:login&quot;,&quot;type:script&quot;],&quot;value&quot;:4005.7000000001863,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.resource_timing&quot;,&quot;tags&quot;:[&quot;page:login&quot;,&quot;type:script&quot;],&quot;value&quot;:4049.7999999998137,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.time_to_first_byte&quot;,&quot;tags&quot;:[&quot;page:login&quot;],&quot;value&quot;:2564.399999999441,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.first_paint&quot;,&quot;tags&quot;:[&quot;page:login&quot;],&quot;value&quot;:7155.699999999255,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.request_timing&quot;,&quot;tags&quot;:[&quot;page:login&quot;,&quot;type:fetch&quot;],&quot;value&quot;:449.79999999981374,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.resource_timing&quot;,&quot;tags&quot;:[&quot;page:login&quot;,&quot;type:script&quot;],&quot;value&quot;:575.7000000001863,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.resource_timing&quot;,&quot;tags&quot;:[&quot;page:login&quot;,&quot;type:script&quot;],&quot;value&quot;:601.5,&quot;sampleRate&quot;:1}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/metal/ingest</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01_Launch-29" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;type&quot;:&quot;metric&quot;,&quot;meta&quot;:{&quot;version&quot;:&quot;5.0.366&quot;,&quot;env&quot;:&quot;prod&quot;,&quot;os&quot;:&quot;windows&quot;,&quot;platform&quot;:&quot;desktop&quot;,&quot;browser&quot;:&quot;chrome&quot;},&quot;metalId&quot;:&quot;106040e7-7aa1-40d4-af50-1464ab63b642&quot;,&quot;data&quot;:[{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.resource_timing&quot;,&quot;tags&quot;:[&quot;page:login&quot;,&quot;type:script&quot;],&quot;value&quot;:573.0999999996275,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.resource_timing&quot;,&quot;tags&quot;:[&quot;page:login&quot;,&quot;type:script&quot;],&quot;value&quot;:585.7000000001863,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.resource_timing&quot;,&quot;tags&quot;:[&quot;page:login&quot;,&quot;type:script&quot;],&quot;value&quot;:666.5,&quot;sampleRate&quot;:1}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/metal/ingest</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01_Launch-31" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">aid-frontend.prod.atl-paas.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/atlassian-id/front-end/5.0.366/static/media/cobrand-id-confluence-right.8be424d3.svg</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01_Launch-30" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">aid-frontend.prod.atl-paas.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/atlassian-id/front-end/5.0.366/static/media/cobrand-id-confluence-left.35293ebf.svg</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01_Launch-38" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;batch&quot;:[{&quot;context&quot;:{&quot;locale&quot;:&quot;en&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.7.2&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:57:53.631Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:null,&quot;anonymousId&quot;:&quot;84b5d269-5029-4e4d-badf-5bc93a8e4258&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;identity&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;none&quot;,&quot;source&quot;:&quot;unknown&quot;,&quot;actionSubject&quot;:&quot;sli&quot;,&quot;action&quot;:&quot;loadPage&quot;,&quot;attributes&quot;:{&quot;firstProductAccessed&quot;:&quot;confluence&quot;,&quot;originLibrary&quot;:&quot;origin-tracing.js@6.0.8&quot;,&quot;isMobileApp&quot;:false,&quot;ffsId&quot;:&quot;43ab9eef-8ea7-44c5-bf8e-9c5a7b45c5f4&quot;},&quot;tags&quot;:[&quot;identity&quot;],&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;989c756d-a706-4422-9a07-11543c184f67&quot;,&quot;sessionId&quot;:&quot;1664171873630&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;33257a34-fc8d-42e7-8992-77425c351e74&quot;},&quot;event&quot;:&quot;sli loadPage&quot;,&quot;messageId&quot;:&quot;ajs-d373afea-0549-4a21-a6eb-5e092d51f118&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:57:55.573Z&quot;}],&quot;sentAt&quot;:&quot;2022-09-26T05:57:55.573Z&quot;,&quot;metadata&quot;:{&quot;eventCount&quot;:1,&quot;resilienceMechanism&quot;:&quot;indexeddb&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">id.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/gasv3/api/v1/batch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01_Launch-39" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;batch&quot;:[{&quot;context&quot;:{&quot;locale&quot;:&quot;en-IN&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.7.2&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:57:55.020Z&quot;,&quot;type&quot;:&quot;page&quot;,&quot;userId&quot;:null,&quot;anonymousId&quot;:&quot;84b5d269-5029-4e4d-badf-5bc93a8e4258&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;identity&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;none&quot;,&quot;title&quot;:&quot;&quot;,&quot;path&quot;:&quot;&quot;,&quot;url&quot;:&quot;&quot;,&quot;referrer&quot;:&quot;&quot;,&quot;search&quot;:&quot;&quot;,&quot;eventType&quot;:&quot;screen&quot;,&quot;attributes&quot;:{&quot;firstProductAccessed&quot;:&quot;confluence&quot;,&quot;originLibrary&quot;:&quot;origin-tracing.js@6.0.8&quot;,&quot;isMobileApp&quot;:false,&quot;isMicrosoftButtonEnabled&quot;:true,&quot;isAppleButtonEnabled&quot;:true,&quot;isSlackButtonEnabled&quot;:true,&quot;referer&quot;:&quot;${scheme}://thinktimetechnology.atlassian.net/&quot;,&quot;loginPageExperimentCohort&quot;:&quot;no-anonymous-id&quot;,&quot;loginPageExperimentCohortV2&quot;:&quot;control&quot;,&quot;noAccess&quot;:false,&quot;loginExperimentResolvedCohort&quot;:&quot;not-enrolled&quot;,&quot;loginExperimentResolvedCohortV2&quot;:&quot;control&quot;,&quot;ffsId&quot;:&quot;43ab9eef-8ea7-44c5-bf8e-9c5a7b45c5f4&quot;},&quot;tabId&quot;:&quot;989c756d-a706-4422-9a07-11543c184f67&quot;,&quot;sessionId&quot;:&quot;1664171873630&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;c3a5ff9f-00bb-4ff6-9919-931be420652f&quot;},&quot;name&quot;:&quot;loginScreen&quot;,&quot;messageId&quot;:&quot;ajs-0eb9732e-c51e-4093-940b-56c5cbb15030&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:57:56.095Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en-IN&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.7.2&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:57:55.468Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:null,&quot;anonymousId&quot;:&quot;84b5d269-5029-4e4d-badf-5bc93a8e4258&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;identity&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;none&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;readyForUser&quot;,&quot;attributes&quot;:{&quot;properties&quot;:{&quot;firstPaint&quot;:7156,&quot;firstContentfulPaint&quot;:7189},&quot;task&quot;:&quot;viewLoginPage&quot;,&quot;type&quot;:&quot;initialLoad&quot;,&quot;threshold&quot;:1000,&quot;apdex&quot;:0,&quot;startTime&quot;:1664171866809.9,&quot;stopTime&quot;:1664171875466.9,&quot;duration&quot;:8657,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;989c756d-a706-4422-9a07-11543c184f67&quot;,&quot;sessionId&quot;:&quot;1664171873630&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;c3a5ff9f-00bb-4ff6-9919-931be420652f&quot;},&quot;event&quot;:&quot;ui readyForUser&quot;,&quot;messageId&quot;:&quot;ajs-f90d38ad-9a16-4563-8f25-2ec753323ee0&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:57:56.095Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en-IN&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.7.2&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:57:55.471Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:null,&quot;anonymousId&quot;:&quot;84b5d269-5029-4e4d-badf-5bc93a8e4258&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;identity&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;none&quot;,&quot;source&quot;:&quot;loginScreen&quot;,&quot;actionSubject&quot;:&quot;sli&quot;,&quot;action&quot;:&quot;loadLoginPageSuccessful&quot;,&quot;attributes&quot;:{&quot;firstProductAccessed&quot;:&quot;confluence&quot;,&quot;originLibrary&quot;:&quot;origin-tracing.js@6.0.8&quot;,&quot;isMobileApp&quot;:false,&quot;ffsId&quot;:&quot;43ab9eef-8ea7-44c5-bf8e-9c5a7b45c5f4&quot;},&quot;tags&quot;:[&quot;identity&quot;],&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;989c756d-a706-4422-9a07-11543c184f67&quot;,&quot;sessionId&quot;:&quot;1664171873630&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;c3a5ff9f-00bb-4ff6-9919-931be420652f&quot;},&quot;event&quot;:&quot;sli loadLoginPageSuccessful&quot;,&quot;messageId&quot;:&quot;ajs-5ee73dec-22c4-4562-8da4-057d31753154&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:57:56.095Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en-IN&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.7.2&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:57:55.472Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:null,&quot;anonymousId&quot;:&quot;84b5d269-5029-4e4d-badf-5bc93a8e4258&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;identity&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;none&quot;,&quot;source&quot;:&quot;loginScreen&quot;,&quot;actionSubject&quot;:&quot;feature&quot;,&quot;action&quot;:&quot;exposed&quot;,&quot;attributes&quot;:{&quot;firstProductAccessed&quot;:&quot;confluence&quot;,&quot;originLibrary&quot;:&quot;origin-tracing.js@6.0.8&quot;,&quot;isMobileApp&quot;:false,&quot;flagKey&quot;:&quot;aid-frontend.growth.login-page-optimisation&quot;,&quot;reason&quot;:&quot;RULE_MATCH&quot;,&quot;ruleId&quot;:&quot;aid-frontend.growth.login-page-optimisation&quot;,&quot;value&quot;:&quot;no-anonymous-id&quot;,&quot;loginExperimentIsEnrolled&quot;:false,&quot;loginExperimentEnrollmentReason&quot;:{&quot;hasMobileScreenSize&quot;:false,&quot;hasContentTitle&quot;:false,&quot;product&quot;:&quot;confluence&quot;},&quot;loginExperimentResolvedCohort&quot;:&quot;not-enrolled&quot;,&quot;ffsId&quot;:&quot;43ab9eef-8ea7-44c5-bf8e-9c5a7b45c5f4&quot;},&quot;tags&quot;:[&quot;identity&quot;],&quot;eventType&quot;:&quot;track&quot;,&quot;tabId&quot;:&quot;989c756d-a706-4422-9a07-11543c184f67&quot;,&quot;sessionId&quot;:&quot;1664171873630&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;c3a5ff9f-00bb-4ff6-9919-931be420652f&quot;},&quot;event&quot;:&quot;feature exposed&quot;,&quot;messageId&quot;:&quot;ajs-9d0fe64f-e367-45a1-8217-a127a53370f6&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:57:56.095Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en-IN&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.7.2&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:57:55.473Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:null,&quot;anonymousId&quot;:&quot;84b5d269-5029-4e4d-badf-5bc93a8e4258&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;identity&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;none&quot;,&quot;source&quot;:&quot;loginScreen&quot;,&quot;actionSubject&quot;:&quot;feature&quot;,&quot;action&quot;:&quot;exposed&quot;,&quot;attributes&quot;:{&quot;firstProductAccessed&quot;:&quot;confluence&quot;,&quot;originLibrary&quot;:&quot;origin-tracing.js@6.0.8&quot;,&quot;isMobileApp&quot;:false,&quot;flagKey&quot;:&quot;aid-frontend.growth.login-page-optimisation-v2&quot;,&quot;reason&quot;:&quot;RULE_MATCH&quot;,&quot;ruleId&quot;:&quot;aid-frontend.growth.login-page-optimisation-v2&quot;,&quot;value&quot;:&quot;control&quot;,&quot;loginExperimentIsEnrolled&quot;:true,&quot;loginExperimentEnrollmentReason&quot;:{&quot;hasMobileScreenSize&quot;:false,&quot;hasContentTitle&quot;:false,&quot;product&quot;:&quot;confluence&quot;},&quot;loginExperimentResolvedCohortV2&quot;:&quot;control&quot;,&quot;ffsId&quot;:&quot;43ab9eef-8ea7-44c5-bf8e-9c5a7b45c5f4&quot;},&quot;tags&quot;:[&quot;identity&quot;],&quot;eventType&quot;:&quot;track&quot;,&quot;tabId&quot;:&quot;989c756d-a706-4422-9a07-11543c184f67&quot;,&quot;sessionId&quot;:&quot;1664171873630&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;c3a5ff9f-00bb-4ff6-9919-931be420652f&quot;},&quot;event&quot;:&quot;feature exposed&quot;,&quot;messageId&quot;:&quot;ajs-967bc4a8-ed76-44f5-8469-6837d73c57b1&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:57:56.095Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en-IN&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.7.2&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:57:55.480Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:null,&quot;anonymousId&quot;:&quot;84b5d269-5029-4e4d-badf-5bc93a8e4258&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;identity&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;none&quot;,&quot;source&quot;:&quot;loginScreen&quot;,&quot;actionSubject&quot;:&quot;feature&quot;,&quot;action&quot;:&quot;exposed&quot;,&quot;attributes&quot;:{&quot;firstProductAccessed&quot;:&quot;confluence&quot;,&quot;originLibrary&quot;:&quot;origin-tracing.js@6.0.8&quot;,&quot;isMobileApp&quot;:false,&quot;flagKey&quot;:&quot;aid_signup.microsoft.auth.enabled&quot;,&quot;reason&quot;:&quot;RULE_MATCH&quot;,&quot;ruleId&quot;:&quot;0E2C138D-053A-450C-914A-5E5C9D1539B9&quot;,&quot;value&quot;:true,&quot;ffsId&quot;:&quot;43ab9eef-8ea7-44c5-bf8e-9c5a7b45c5f4&quot;},&quot;tags&quot;:[&quot;identity&quot;],&quot;eventType&quot;:&quot;track&quot;,&quot;tabId&quot;:&quot;989c756d-a706-4422-9a07-11543c184f67&quot;,&quot;sessionId&quot;:&quot;1664171873630&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;c3a5ff9f-00bb-4ff6-9919-931be420652f&quot;},&quot;event&quot;:&quot;feature exposed&quot;,&quot;messageId&quot;:&quot;ajs-2e5626a0-c63e-45c9-b3fb-3feffba50f23&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:57:56.095Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en-IN&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.7.2&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:57:55.481Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:null,&quot;anonymousId&quot;:&quot;84b5d269-5029-4e4d-badf-5bc93a8e4258&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;identity&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;none&quot;,&quot;source&quot;:&quot;loginScreen&quot;,&quot;actionSubject&quot;:&quot;feature&quot;,&quot;action&quot;:&quot;exposed&quot;,&quot;attributes&quot;:{&quot;firstProductAccessed&quot;:&quot;confluence&quot;,&quot;originLibrary&quot;:&quot;origin-tracing.js@6.0.8&quot;,&quot;isMobileApp&quot;:false,&quot;flagKey&quot;:&quot;aid_signup.apple.auth.enabled&quot;,&quot;reason&quot;:&quot;RULE_MATCH&quot;,&quot;ruleId&quot;:&quot;93E21B0C-9CB7-468E-B341-C378CCE0B285&quot;,&quot;value&quot;:true,&quot;ffsId&quot;:&quot;43ab9eef-8ea7-44c5-bf8e-9c5a7b45c5f4&quot;},&quot;tags&quot;:[&quot;identity&quot;],&quot;eventType&quot;:&quot;track&quot;,&quot;tabId&quot;:&quot;989c756d-a706-4422-9a07-11543c184f67&quot;,&quot;sessionId&quot;:&quot;1664171873630&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;c3a5ff9f-00bb-4ff6-9919-931be420652f&quot;},&quot;event&quot;:&quot;feature exposed&quot;,&quot;messageId&quot;:&quot;ajs-162373b6-9221-4810-ae72-e02ca8b60c34&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:57:56.095Z&quot;}],&quot;sentAt&quot;:&quot;2022-09-26T05:57:56.095Z&quot;,&quot;metadata&quot;:{&quot;eventCount&quot;:9,&quot;resilienceMechanism&quot;:&quot;indexeddb&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">id.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/gasv3/api/v1/batch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01_Launch-39" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;batch&quot;:[{&quot;context&quot;:{&quot;locale&quot;:&quot;en-IN&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.7.2&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:57:55.020Z&quot;,&quot;type&quot;:&quot;page&quot;,&quot;userId&quot;:null,&quot;anonymousId&quot;:&quot;84b5d269-5029-4e4d-badf-5bc93a8e4258&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;identity&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;none&quot;,&quot;title&quot;:&quot;&quot;,&quot;path&quot;:&quot;&quot;,&quot;url&quot;:&quot;&quot;,&quot;referrer&quot;:&quot;&quot;,&quot;search&quot;:&quot;&quot;,&quot;eventType&quot;:&quot;screen&quot;,&quot;attributes&quot;:{&quot;firstProductAccessed&quot;:&quot;confluence&quot;,&quot;originLibrary&quot;:&quot;origin-tracing.js@6.0.8&quot;,&quot;isMobileApp&quot;:false,&quot;isMicrosoftButtonEnabled&quot;:true,&quot;isAppleButtonEnabled&quot;:true,&quot;isSlackButtonEnabled&quot;:true,&quot;referer&quot;:&quot;${scheme}://thinktimetechnology.atlassian.net/&quot;,&quot;loginPageExperimentCohort&quot;:&quot;no-anonymous-id&quot;,&quot;loginPageExperimentCohortV2&quot;:&quot;control&quot;,&quot;noAccess&quot;:false,&quot;loginExperimentResolvedCohort&quot;:&quot;not-enrolled&quot;,&quot;loginExperimentResolvedCohortV2&quot;:&quot;control&quot;,&quot;ffsId&quot;:&quot;43ab9eef-8ea7-44c5-bf8e-9c5a7b45c5f4&quot;},&quot;tabId&quot;:&quot;989c756d-a706-4422-9a07-11543c184f67&quot;,&quot;sessionId&quot;:&quot;1664171873630&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;c3a5ff9f-00bb-4ff6-9919-931be420652f&quot;},&quot;name&quot;:&quot;loginScreen&quot;,&quot;messageId&quot;:&quot;ajs-0eb9732e-c51e-4093-940b-56c5cbb15030&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:57:56.095Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en-IN&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.7.2&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:57:55.468Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:null,&quot;anonymousId&quot;:&quot;84b5d269-5029-4e4d-badf-5bc93a8e4258&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;identity&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;none&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;readyForUser&quot;,&quot;attributes&quot;:{&quot;properties&quot;:{&quot;firstPaint&quot;:7156,&quot;firstContentfulPaint&quot;:7189},&quot;task&quot;:&quot;viewLoginPage&quot;,&quot;type&quot;:&quot;initialLoad&quot;,&quot;threshold&quot;:1000,&quot;apdex&quot;:0,&quot;startTime&quot;:1664171866809.9,&quot;stopTime&quot;:1664171875466.9,&quot;duration&quot;:8657,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;989c756d-a706-4422-9a07-11543c184f67&quot;,&quot;sessionId&quot;:&quot;1664171873630&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;c3a5ff9f-00bb-4ff6-9919-931be420652f&quot;},&quot;event&quot;:&quot;ui readyForUser&quot;,&quot;messageId&quot;:&quot;ajs-f90d38ad-9a16-4563-8f25-2ec753323ee0&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:57:56.095Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en-IN&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.7.2&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:57:55.471Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:null,&quot;anonymousId&quot;:&quot;84b5d269-5029-4e4d-badf-5bc93a8e4258&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;identity&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;none&quot;,&quot;source&quot;:&quot;loginScreen&quot;,&quot;actionSubject&quot;:&quot;sli&quot;,&quot;action&quot;:&quot;loadLoginPageSuccessful&quot;,&quot;attributes&quot;:{&quot;firstProductAccessed&quot;:&quot;confluence&quot;,&quot;originLibrary&quot;:&quot;origin-tracing.js@6.0.8&quot;,&quot;isMobileApp&quot;:false,&quot;ffsId&quot;:&quot;43ab9eef-8ea7-44c5-bf8e-9c5a7b45c5f4&quot;},&quot;tags&quot;:[&quot;identity&quot;],&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;989c756d-a706-4422-9a07-11543c184f67&quot;,&quot;sessionId&quot;:&quot;1664171873630&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;c3a5ff9f-00bb-4ff6-9919-931be420652f&quot;},&quot;event&quot;:&quot;sli loadLoginPageSuccessful&quot;,&quot;messageId&quot;:&quot;ajs-5ee73dec-22c4-4562-8da4-057d31753154&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:57:56.095Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en-IN&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.7.2&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:57:55.472Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:null,&quot;anonymousId&quot;:&quot;84b5d269-5029-4e4d-badf-5bc93a8e4258&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;identity&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;none&quot;,&quot;source&quot;:&quot;loginScreen&quot;,&quot;actionSubject&quot;:&quot;feature&quot;,&quot;action&quot;:&quot;exposed&quot;,&quot;attributes&quot;:{&quot;firstProductAccessed&quot;:&quot;confluence&quot;,&quot;originLibrary&quot;:&quot;origin-tracing.js@6.0.8&quot;,&quot;isMobileApp&quot;:false,&quot;flagKey&quot;:&quot;aid-frontend.growth.login-page-optimisation&quot;,&quot;reason&quot;:&quot;RULE_MATCH&quot;,&quot;ruleId&quot;:&quot;aid-frontend.growth.login-page-optimisation&quot;,&quot;value&quot;:&quot;no-anonymous-id&quot;,&quot;loginExperimentIsEnrolled&quot;:false,&quot;loginExperimentEnrollmentReason&quot;:{&quot;hasMobileScreenSize&quot;:false,&quot;hasContentTitle&quot;:false,&quot;product&quot;:&quot;confluence&quot;},&quot;loginExperimentResolvedCohort&quot;:&quot;not-enrolled&quot;,&quot;ffsId&quot;:&quot;43ab9eef-8ea7-44c5-bf8e-9c5a7b45c5f4&quot;},&quot;tags&quot;:[&quot;identity&quot;],&quot;eventType&quot;:&quot;track&quot;,&quot;tabId&quot;:&quot;989c756d-a706-4422-9a07-11543c184f67&quot;,&quot;sessionId&quot;:&quot;1664171873630&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;c3a5ff9f-00bb-4ff6-9919-931be420652f&quot;},&quot;event&quot;:&quot;feature exposed&quot;,&quot;messageId&quot;:&quot;ajs-9d0fe64f-e367-45a1-8217-a127a53370f6&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:57:56.095Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en-IN&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.7.2&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:57:55.473Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:null,&quot;anonymousId&quot;:&quot;84b5d269-5029-4e4d-badf-5bc93a8e4258&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;identity&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;none&quot;,&quot;source&quot;:&quot;loginScreen&quot;,&quot;actionSubject&quot;:&quot;feature&quot;,&quot;action&quot;:&quot;exposed&quot;,&quot;attributes&quot;:{&quot;firstProductAccessed&quot;:&quot;confluence&quot;,&quot;originLibrary&quot;:&quot;origin-tracing.js@6.0.8&quot;,&quot;isMobileApp&quot;:false,&quot;flagKey&quot;:&quot;aid-frontend.growth.login-page-optimisation-v2&quot;,&quot;reason&quot;:&quot;RULE_MATCH&quot;,&quot;ruleId&quot;:&quot;aid-frontend.growth.login-page-optimisation-v2&quot;,&quot;value&quot;:&quot;control&quot;,&quot;loginExperimentIsEnrolled&quot;:true,&quot;loginExperimentEnrollmentReason&quot;:{&quot;hasMobileScreenSize&quot;:false,&quot;hasContentTitle&quot;:false,&quot;product&quot;:&quot;confluence&quot;},&quot;loginExperimentResolvedCohortV2&quot;:&quot;control&quot;,&quot;ffsId&quot;:&quot;43ab9eef-8ea7-44c5-bf8e-9c5a7b45c5f4&quot;},&quot;tags&quot;:[&quot;identity&quot;],&quot;eventType&quot;:&quot;track&quot;,&quot;tabId&quot;:&quot;989c756d-a706-4422-9a07-11543c184f67&quot;,&quot;sessionId&quot;:&quot;1664171873630&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;c3a5ff9f-00bb-4ff6-9919-931be420652f&quot;},&quot;event&quot;:&quot;feature exposed&quot;,&quot;messageId&quot;:&quot;ajs-967bc4a8-ed76-44f5-8469-6837d73c57b1&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:57:56.095Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en-IN&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.7.2&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:57:55.480Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:null,&quot;anonymousId&quot;:&quot;84b5d269-5029-4e4d-badf-5bc93a8e4258&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;identity&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;none&quot;,&quot;source&quot;:&quot;loginScreen&quot;,&quot;actionSubject&quot;:&quot;feature&quot;,&quot;action&quot;:&quot;exposed&quot;,&quot;attributes&quot;:{&quot;firstProductAccessed&quot;:&quot;confluence&quot;,&quot;originLibrary&quot;:&quot;origin-tracing.js@6.0.8&quot;,&quot;isMobileApp&quot;:false,&quot;flagKey&quot;:&quot;aid_signup.microsoft.auth.enabled&quot;,&quot;reason&quot;:&quot;RULE_MATCH&quot;,&quot;ruleId&quot;:&quot;0E2C138D-053A-450C-914A-5E5C9D1539B9&quot;,&quot;value&quot;:true,&quot;ffsId&quot;:&quot;43ab9eef-8ea7-44c5-bf8e-9c5a7b45c5f4&quot;},&quot;tags&quot;:[&quot;identity&quot;],&quot;eventType&quot;:&quot;track&quot;,&quot;tabId&quot;:&quot;989c756d-a706-4422-9a07-11543c184f67&quot;,&quot;sessionId&quot;:&quot;1664171873630&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;c3a5ff9f-00bb-4ff6-9919-931be420652f&quot;},&quot;event&quot;:&quot;feature exposed&quot;,&quot;messageId&quot;:&quot;ajs-2e5626a0-c63e-45c9-b3fb-3feffba50f23&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:57:56.095Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en-IN&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.7.2&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:57:55.481Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:null,&quot;anonymousId&quot;:&quot;84b5d269-5029-4e4d-badf-5bc93a8e4258&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;identity&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;none&quot;,&quot;source&quot;:&quot;loginScreen&quot;,&quot;actionSubject&quot;:&quot;feature&quot;,&quot;action&quot;:&quot;exposed&quot;,&quot;attributes&quot;:{&quot;firstProductAccessed&quot;:&quot;confluence&quot;,&quot;originLibrary&quot;:&quot;origin-tracing.js@6.0.8&quot;,&quot;isMobileApp&quot;:false,&quot;flagKey&quot;:&quot;aid_signup.apple.auth.enabled&quot;,&quot;reason&quot;:&quot;RULE_MATCH&quot;,&quot;ruleId&quot;:&quot;93E21B0C-9CB7-468E-B341-C378CCE0B285&quot;,&quot;value&quot;:true,&quot;ffsId&quot;:&quot;43ab9eef-8ea7-44c5-bf8e-9c5a7b45c5f4&quot;},&quot;tags&quot;:[&quot;identity&quot;],&quot;eventType&quot;:&quot;track&quot;,&quot;tabId&quot;:&quot;989c756d-a706-4422-9a07-11543c184f67&quot;,&quot;sessionId&quot;:&quot;1664171873630&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;c3a5ff9f-00bb-4ff6-9919-931be420652f&quot;},&quot;event&quot;:&quot;feature exposed&quot;,&quot;messageId&quot;:&quot;ajs-162373b6-9221-4810-ae72-e02ca8b60c34&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:57:56.095Z&quot;}],&quot;sentAt&quot;:&quot;2022-09-26T05:57:56.095Z&quot;,&quot;metadata&quot;:{&quot;eventCount&quot;:9,&quot;resilienceMechanism&quot;:&quot;indexeddb&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.domain">id.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/gasv3/api/v1/batch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01_Launch-35" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">aid-frontend.prod.atl-paas.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/atlassian-id/front-end/5.0.366/static/media/apple-logo.4f2453fb.svg</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01_Launch-33" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">aid-frontend.prod.atl-paas.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/atlassian-id/front-end/5.0.366/static/media/google-logo.e086107b.svg</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01_Launch-32" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">aid-frontend.prod.atl-paas.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/atlassian-id/front-end/5.0.366/static/media/microsoft-logo.42b61fa1.svg</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01_Launch-37" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;type&quot;:&quot;metric&quot;,&quot;meta&quot;:{&quot;version&quot;:&quot;5.0.366&quot;,&quot;env&quot;:&quot;prod&quot;,&quot;os&quot;:&quot;windows&quot;,&quot;platform&quot;:&quot;desktop&quot;,&quot;browser&quot;:&quot;chrome&quot;},&quot;metalId&quot;:&quot;106040e7-7aa1-40d4-af50-1464ab63b642&quot;,&quot;data&quot;:[{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.resource_timing&quot;,&quot;tags&quot;:[&quot;page:login&quot;,&quot;type:css&quot;],&quot;value&quot;:418.29999999981374,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.resource_timing&quot;,&quot;tags&quot;:[&quot;page:login&quot;,&quot;type:css&quot;],&quot;value&quot;:416.29999999981374,&quot;sampleRate&quot;:1}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/metal/ingest</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01_Launch-34" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">aid-frontend.prod.atl-paas.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/atlassian-id/front-end/5.0.366/static/media/slack-logo.0390f069.svg</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01_Launch-44" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;type&quot;:&quot;metric&quot;,&quot;meta&quot;:{&quot;version&quot;:&quot;5.0.366&quot;,&quot;env&quot;:&quot;prod&quot;,&quot;os&quot;:&quot;windows&quot;,&quot;platform&quot;:&quot;desktop&quot;,&quot;browser&quot;:&quot;chrome&quot;},&quot;metalId&quot;:&quot;106040e7-7aa1-40d4-af50-1464ab63b642&quot;,&quot;data&quot;:[{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.resource_timing&quot;,&quot;tags&quot;:[&quot;page:login&quot;,&quot;type:img&quot;],&quot;value&quot;:1935.5999999996275,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.resource_timing&quot;,&quot;tags&quot;:[&quot;page:login&quot;,&quot;type:img&quot;],&quot;value&quot;:1936.5,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.resource_timing&quot;,&quot;tags&quot;:[&quot;page:login&quot;,&quot;type:img&quot;],&quot;value&quot;:1935,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.resource_timing&quot;,&quot;tags&quot;:[&quot;page:login&quot;,&quot;type:img&quot;],&quot;value&quot;:1936.2999999998137,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.resource_timing&quot;,&quot;tags&quot;:[&quot;page:login&quot;,&quot;type:script&quot;],&quot;value&quot;:1944.5,&quot;sampleRate&quot;:1}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/metal/ingest</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="02_Login" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01_Launch-45" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;batch&quot;:[{&quot;context&quot;:{&quot;locale&quot;:&quot;en-IN&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.7.2&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:57:55.482Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:null,&quot;anonymousId&quot;:&quot;84b5d269-5029-4e4d-badf-5bc93a8e4258&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;identity&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;none&quot;,&quot;source&quot;:&quot;loginScreen&quot;,&quot;actionSubject&quot;:&quot;feature&quot;,&quot;action&quot;:&quot;exposed&quot;,&quot;attributes&quot;:{&quot;firstProductAccessed&quot;:&quot;confluence&quot;,&quot;originLibrary&quot;:&quot;origin-tracing.js@6.0.8&quot;,&quot;isMobileApp&quot;:false,&quot;flagKey&quot;:&quot;sign-in-with-slack.enabled&quot;,&quot;reason&quot;:&quot;RULE_MATCH&quot;,&quot;ruleId&quot;:&quot;65BE87D7-EE80-41EC-BBBB-68677B700347&quot;,&quot;value&quot;:true,&quot;ffsId&quot;:&quot;43ab9eef-8ea7-44c5-bf8e-9c5a7b45c5f4&quot;},&quot;tags&quot;:[&quot;identity&quot;],&quot;eventType&quot;:&quot;track&quot;,&quot;tabId&quot;:&quot;989c756d-a706-4422-9a07-11543c184f67&quot;,&quot;sessionId&quot;:&quot;1664171873630&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;c3a5ff9f-00bb-4ff6-9919-931be420652f&quot;},&quot;event&quot;:&quot;feature exposed&quot;,&quot;messageId&quot;:&quot;ajs-97719acc-d9e1-4378-9020-41caec343586&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:57:58.191Z&quot;}],&quot;sentAt&quot;:&quot;2022-09-26T05:57:58.191Z&quot;,&quot;metadata&quot;:{&quot;resilienceMechanism&quot;:&quot;indexeddb&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">id.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/gasv3/api/v1/batch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01_Launch-46" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;type&quot;:&quot;metric&quot;,&quot;meta&quot;:{&quot;version&quot;:&quot;5.0.366&quot;,&quot;env&quot;:&quot;prod&quot;,&quot;os&quot;:&quot;windows&quot;,&quot;platform&quot;:&quot;desktop&quot;,&quot;browser&quot;:&quot;chrome&quot;},&quot;metalId&quot;:&quot;106040e7-7aa1-40d4-af50-1464ab63b642&quot;,&quot;data&quot;:[{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.request_timing&quot;,&quot;tags&quot;:[&quot;page:login&quot;,&quot;type:xmlhttprequest&quot;],&quot;value&quot;:360.3999999994412,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.resource_timing&quot;,&quot;tags&quot;:[&quot;page:login&quot;,&quot;type:link&quot;],&quot;value&quot;:393.09999999962747,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.request_timing&quot;,&quot;tags&quot;:[&quot;page:login&quot;,&quot;type:other&quot;],&quot;value&quot;:453.40000000037253,&quot;sampleRate&quot;:1}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/metal/ingest</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-49" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;username&quot;:&quot;${user}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">id.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/rest/check-username?continue=${scheme}%3A%2F%2Fid.atlassian.com%2Fjoin%2Fuser-access%3Fresource%3Dari%253Acloud%253Aconfluence%253A%253Asite%252Ff21b70d0-8bad-458e-9a03-d1d9544e0e8c%26continue%3Dhttps%253A%252F%252Fthinktimetechnology.atlassian.net%252Fwiki%252F%253FcloudId%253Df21b70d0-8bad-458e-9a03-d1d9544e0e8c%2526atlOrigin%253DeyJwIjoiYWRtaW4iLCJpIjoiZDBjNzZmMDk4NTMyNGJhYjg5YzU4N2E5NWU5OTE0NzAifQ%25253D%25253D&amp;application=confluence</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-TOKEN" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-TOKEN</stringProp>
                  <stringProp name="Header.value">17fea0b9-c48e-4ae6-bb46-acefb1c68a10</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-48" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;type&quot;:&quot;metric&quot;,&quot;meta&quot;:{&quot;version&quot;:&quot;5.0.366&quot;,&quot;env&quot;:&quot;prod&quot;,&quot;os&quot;:&quot;windows&quot;,&quot;platform&quot;:&quot;desktop&quot;,&quot;browser&quot;:&quot;chrome&quot;},&quot;metalId&quot;:&quot;106040e7-7aa1-40d4-af50-1464ab63b642&quot;,&quot;data&quot;:[{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.first_input_delay&quot;,&quot;tags&quot;:[&quot;page:login&quot;],&quot;value&quot;:28.200000000186265,&quot;sampleRate&quot;:1}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/metal/ingest</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-50" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;email&quot;:&quot;${user}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">id.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/rest/marketing-consent/config</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-53" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;batch&quot;:[{&quot;context&quot;:{&quot;locale&quot;:&quot;en-IN&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.7.2&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:01.110Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:null,&quot;anonymousId&quot;:&quot;84b5d269-5029-4e4d-badf-5bc93a8e4258&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;identity&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;none&quot;,&quot;source&quot;:&quot;loginScreen&quot;,&quot;actionSubject&quot;:&quot;button&quot;,&quot;action&quot;:&quot;clicked&quot;,&quot;actionSubjectId&quot;:&quot;continueToLogin&quot;,&quot;attributes&quot;:{&quot;firstProductAccessed&quot;:&quot;confluence&quot;,&quot;originLibrary&quot;:&quot;origin-tracing.js@6.0.8&quot;,&quot;isMobileApp&quot;:false,&quot;loginPageExperimentCohort&quot;:&quot;no-anonymous-id&quot;,&quot;loginPageExperimentCohortV2&quot;:&quot;control&quot;,&quot;loginExperimentResolvedCohort&quot;:&quot;not-enrolled&quot;,&quot;loginExperimentResolvedCohortV2&quot;:&quot;control&quot;,&quot;ffsId&quot;:&quot;43ab9eef-8ea7-44c5-bf8e-9c5a7b45c5f4&quot;},&quot;tags&quot;:[&quot;identity&quot;],&quot;eventType&quot;:&quot;ui&quot;,&quot;tabId&quot;:&quot;989c756d-a706-4422-9a07-11543c184f67&quot;,&quot;sessionId&quot;:&quot;1664171873630&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;c3a5ff9f-00bb-4ff6-9919-931be420652f&quot;},&quot;event&quot;:&quot;button clicked&quot;,&quot;messageId&quot;:&quot;ajs-c7199a28-8716-4b31-9aeb-6306c87a802b&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:01.712Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en-IN&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.7.2&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:01.127Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:null,&quot;anonymousId&quot;:&quot;84b5d269-5029-4e4d-badf-5bc93a8e4258&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;identity&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;none&quot;,&quot;source&quot;:&quot;loginScreen&quot;,&quot;actionSubject&quot;:&quot;sli&quot;,&quot;action&quot;:&quot;checkUsernameStart&quot;,&quot;attributes&quot;:{&quot;firstProductAccessed&quot;:&quot;confluence&quot;,&quot;originLibrary&quot;:&quot;origin-tracing.js@6.0.8&quot;,&quot;isMobileApp&quot;:false,&quot;ffsId&quot;:&quot;43ab9eef-8ea7-44c5-bf8e-9c5a7b45c5f4&quot;},&quot;tags&quot;:[&quot;identity&quot;],&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;989c756d-a706-4422-9a07-11543c184f67&quot;,&quot;sessionId&quot;:&quot;1664171873630&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;c3a5ff9f-00bb-4ff6-9919-931be420652f&quot;},&quot;event&quot;:&quot;sli checkUsernameStart&quot;,&quot;messageId&quot;:&quot;ajs-35c8a442-36f4-402a-8fc5-3e428098a702&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:01.712Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en-IN&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.7.2&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:01.607Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:null,&quot;anonymousId&quot;:&quot;84b5d269-5029-4e4d-badf-5bc93a8e4258&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;identity&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;none&quot;,&quot;source&quot;:&quot;loginScreen&quot;,&quot;actionSubject&quot;:&quot;sli&quot;,&quot;action&quot;:&quot;checkUsernameSuccessful&quot;,&quot;attributes&quot;:{&quot;firstProductAccessed&quot;:&quot;confluence&quot;,&quot;originLibrary&quot;:&quot;origin-tracing.js@6.0.8&quot;,&quot;isMobileApp&quot;:false,&quot;ffsId&quot;:&quot;43ab9eef-8ea7-44c5-bf8e-9c5a7b45c5f4&quot;},&quot;tags&quot;:[&quot;identity&quot;],&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;989c756d-a706-4422-9a07-11543c184f67&quot;,&quot;sessionId&quot;:&quot;1664171873630&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;c3a5ff9f-00bb-4ff6-9919-931be420652f&quot;},&quot;event&quot;:&quot;sli checkUsernameSuccessful&quot;,&quot;messageId&quot;:&quot;ajs-17390d36-abc7-4bca-afbd-e654a8c87cc0&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:01.712Z&quot;}],&quot;sentAt&quot;:&quot;2022-09-26T05:58:01.712Z&quot;,&quot;metadata&quot;:{&quot;eventCount&quot;:3,&quot;resilienceMechanism&quot;:&quot;indexeddb&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">id.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/gasv3/api/v1/batch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-52" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;type&quot;:&quot;metric&quot;,&quot;meta&quot;:{&quot;version&quot;:&quot;5.0.366&quot;,&quot;env&quot;:&quot;prod&quot;,&quot;os&quot;:&quot;windows&quot;,&quot;platform&quot;:&quot;desktop&quot;,&quot;browser&quot;:&quot;chrome&quot;},&quot;metalId&quot;:&quot;106040e7-7aa1-40d4-af50-1464ab63b642&quot;,&quot;data&quot;:[{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.resource_timing&quot;,&quot;tags&quot;:[&quot;page:login&quot;,&quot;type:img&quot;],&quot;value&quot;:3010.5,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.request_timing&quot;,&quot;tags&quot;:[&quot;page:login&quot;,&quot;type:other&quot;],&quot;value&quot;:1.599999999627471,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.request_timing&quot;,&quot;tags&quot;:[&quot;page:login&quot;,&quot;type:fetch&quot;],&quot;value&quot;:446.09999999962747,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.request_timing&quot;,&quot;tags&quot;:[&quot;page:login&quot;,&quot;type:fetch&quot;],&quot;value&quot;:472.1000000005588,&quot;sampleRate&quot;:1}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/metal/ingest</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-54" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;batch&quot;:[{&quot;context&quot;:{&quot;locale&quot;:&quot;en-IN&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.7.2&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:02.303Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:null,&quot;anonymousId&quot;:&quot;84b5d269-5029-4e4d-badf-5bc93a8e4258&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;identity&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;none&quot;,&quot;source&quot;:&quot;loginScreen&quot;,&quot;actionSubject&quot;:&quot;button&quot;,&quot;action&quot;:&quot;clicked&quot;,&quot;actionSubjectId&quot;:&quot;login&quot;,&quot;attributes&quot;:{&quot;firstProductAccessed&quot;:&quot;confluence&quot;,&quot;originLibrary&quot;:&quot;origin-tracing.js@6.0.8&quot;,&quot;isMobileApp&quot;:false,&quot;loginPageExperimentCohort&quot;:&quot;no-anonymous-id&quot;,&quot;loginPageExperimentCohortV2&quot;:&quot;control&quot;,&quot;loginExperimentResolvedCohort&quot;:&quot;not-enrolled&quot;,&quot;loginExperimentResolvedCohortV2&quot;:&quot;control&quot;,&quot;ffsId&quot;:&quot;43ab9eef-8ea7-44c5-bf8e-9c5a7b45c5f4&quot;},&quot;tags&quot;:[&quot;identity&quot;],&quot;eventType&quot;:&quot;ui&quot;,&quot;tabId&quot;:&quot;989c756d-a706-4422-9a07-11543c184f67&quot;,&quot;sessionId&quot;:&quot;1664171873630&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;9c0ab9c1-a7d5-4c22-8a85-e0a73105e455&quot;},&quot;event&quot;:&quot;button clicked&quot;,&quot;messageId&quot;:&quot;ajs-c50af25a-df36-4206-8011-93b9d36bdf01&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:02.621Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en-IN&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.7.2&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:02.304Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:null,&quot;anonymousId&quot;:&quot;84b5d269-5029-4e4d-badf-5bc93a8e4258&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;identity&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;none&quot;,&quot;source&quot;:&quot;loginScreen&quot;,&quot;actionSubject&quot;:&quot;form&quot;,&quot;action&quot;:&quot;submitted&quot;,&quot;actionSubjectId&quot;:&quot;loginForm&quot;,&quot;attributes&quot;:{&quot;firstProductAccessed&quot;:&quot;confluence&quot;,&quot;originLibrary&quot;:&quot;origin-tracing.js@6.0.8&quot;,&quot;isMobileApp&quot;:false,&quot;marketingConsent&quot;:&quot;not_shown&quot;,&quot;ffsId&quot;:&quot;43ab9eef-8ea7-44c5-bf8e-9c5a7b45c5f4&quot;},&quot;tags&quot;:[&quot;identity&quot;],&quot;eventType&quot;:&quot;ui&quot;,&quot;tabId&quot;:&quot;989c756d-a706-4422-9a07-11543c184f67&quot;,&quot;sessionId&quot;:&quot;1664171873630&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;9c0ab9c1-a7d5-4c22-8a85-e0a73105e455&quot;},&quot;event&quot;:&quot;form submitted&quot;,&quot;messageId&quot;:&quot;ajs-37d301ff-1f59-4b7a-97d6-e5e6f264b94d&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:02.621Z&quot;}],&quot;sentAt&quot;:&quot;2022-09-26T05:58:02.621Z&quot;,&quot;metadata&quot;:{&quot;eventCount&quot;:2,&quot;resilienceMechanism&quot;:&quot;indexeddb&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">id.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/gasv3/api/v1/batch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-55" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;type&quot;:&quot;metric&quot;,&quot;meta&quot;:{&quot;version&quot;:&quot;5.0.366&quot;,&quot;env&quot;:&quot;prod&quot;,&quot;os&quot;:&quot;windows&quot;,&quot;platform&quot;:&quot;desktop&quot;,&quot;browser&quot;:&quot;chrome&quot;},&quot;metalId&quot;:&quot;106040e7-7aa1-40d4-af50-1464ab63b642&quot;,&quot;data&quot;:[{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.resource_timing&quot;,&quot;tags&quot;:[&quot;page:login&quot;,&quot;type:img&quot;],&quot;value&quot;:1045.7000000001863,&quot;sampleRate&quot;:1}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/metal/ingest</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-56" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">auth.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/co/authenticate?application=confluence&amp;continue=${scheme}%3A%2F%2Fid.atlassian.com%2Fjoin%2Fuser-access%3Fresource%3Dari%253Acloud%253Aconfluence%253A%253Asite%252Ff21b70d0-8bad-458e-9a03-d1d9544e0e8c%26continue%3Dhttps%253A%252F%252Fthinktimetechnology.atlassian.net%252Fwiki%252F%253FcloudId%253Df21b70d0-8bad-458e-9a03-d1d9544e0e8c%2526atlOrigin%253DeyJwIjoiYWRtaW4iLCJpIjoiZDBjNzZmMDk4NTMyNGJhYjg5YzU4N2E5NWU5OTE0NzAifQ%25253D%25253D&amp;email=sridhar.thinktimetech%40outlook.com&amp;errorCode</stringProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">content-type</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-57" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;username&quot;:&quot;${user}&quot;,&quot;password&quot;:&quot;${pass}&quot;,&quot;state&quot;:{&quot;csrfToken&quot;:&quot;${csrf}&quot;,&quot;anonymousId&quot;:&quot;84b5d269-5029-4e4d-badf-5bc93a8e4258&quot;},&quot;token&quot;:&quot;fXQEDCw_KQcxFxNKGTA-SE8NPw0EHgkPMAwOBys2EkxETjUyRYYoP6qiOqXM2hSo8a1rFPgfD1SQ37vwMSOm5zVNyN55ZrijF63w8DAqdt4oHaXNOm9M838q26z5j_H2Qruk-28kpoxXKcm-X1LPn1xJicYeGIbbZ0HIl19f1dN-fIbCAAaWyBB_z50GHJ3TSB6S2hBp1oNcTfGWUmPPhx8dlcQeG5DTGGPup31kitNcQc2WEG_DkFtHj9NzQNScXU2JwgAdiMMeGIjDEHvHlVFaz9wFG5HdAx7K-1IdkZEFGZHBSqOmZzhNwsNVSZCVU7Tusn5v6rYQAO-dRE3K3xBhyIdVRI6hGQjzu3QI4YFRWM6aU1uGxQIYhrdZWsOQRBviwgEI0IBvHfnDEFjVrAV3lt8QbJW3ARmPVyQZicIfGZ_EAASGxgoblskAGIayfYeu84UJY0Wy46YgMfUxb9coTfDHZpk8EjJZWVqrpfM8JeeAWUmJsFFExYZEXMfnO03I3nlmipZeBfOgcygM8zAoF_PghxdqMCim8zAopvMwKByUik_qv3BKpvMwKOazcGjms1x8yqdeTQFUaHDlsPikysEyK6bxMCih88_l&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">auth.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/co/authenticate?application=confluence&amp;continue=${scheme}%3A%2F%2Fid.atlassian.com%2Fjoin%2Fuser-access%3Fresource%3Dari%253Acloud%253Aconfluence%253A%253Asite%252Ff21b70d0-8bad-458e-9a03-d1d9544e0e8c%26continue%3Dhttps%253A%252F%252Fthinktimetechnology.atlassian.net%252Fwiki%252F%253FcloudId%253Df21b70d0-8bad-458e-9a03-d1d9544e0e8c%2526atlOrigin%253DeyJwIjoiYWRtaW4iLCJpIjoiZDBjNzZmMDk4NTMyNGJhYjg5YzU4N2E5NWU5OTE0NzAifQ%25253D%25253D&amp;email=sridhar.thinktimetech%40outlook.com&amp;errorCode</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Token" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">token</stringProp>
              <stringProp name="RegexExtractor.regex">token=(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">no_token</stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-58" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="application" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">application</stringProp>
                  <stringProp name="Argument.value">confluence</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="continue" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">continue</stringProp>
                  <stringProp name="Argument.value">${scheme}://id.atlassian.com/join/user-access?resource=ari%3Acloud%3Aconfluence%3A%3Asite%2Ff21b70d0-8bad-458e-9a03-d1d9544e0e8c&amp;continue=${scheme}%3A%2F%2Fthinktimetechnology.atlassian.net%2Fwiki%2F%3FcloudId%3Df21b70d0-8bad-458e-9a03-d1d9544e0e8c%26atlOrigin%3DeyJwIjoiYWRtaW4iLCJpIjoiZDBjNzZmMDk4NTMyNGJhYjg5YzU4N2E5NWU5OTE0NzAifQ%253D%253D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">token</stringProp>
                  <stringProp name="Argument.value">${token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">id.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/login/authorize</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-59" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="resource" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">resource</stringProp>
                  <stringProp name="Argument.value">ari:cloud:confluence::site/f21b70d0-8bad-458e-9a03-d1d9544e0e8c</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="continue" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">continue</stringProp>
                  <stringProp name="Argument.value">${scheme}://thinktimetechnology.atlassian.net/wiki/?cloudId=f21b70d0-8bad-458e-9a03-d1d9544e0e8c&amp;atlOrigin=eyJwIjoiYWRtaW4iLCJpIjoiZDBjNzZmMDk4NTMyNGJhYjg5YzU4N2E5NWU5OTE0NzAifQ%3D%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">id.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/join/user-access</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-67" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">id.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/me</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="ACC" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">acc</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;account_id&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">no_acc</stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-69" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/metal/ingest</stringProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">content-type</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-71" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/metal/ingest</stringProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">content-type</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-73" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;type&quot;:&quot;metric&quot;,&quot;meta&quot;:{&quot;version&quot;:&quot;1.0.0&quot;,&quot;env&quot;:&quot;prod&quot;,&quot;os&quot;:&quot;windows&quot;,&quot;platform&quot;:&quot;desktop&quot;,&quot;browser&quot;:&quot;chrome&quot;},&quot;metalId&quot;:&quot;a60bd3a0-e889-4620-a826-ee7d0b227e11&quot;,&quot;data&quot;:[{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.first_meaningful_paint&quot;,&quot;tags&quot;:[&quot;page:user-access&quot;,&quot;gsd_histogram:7500&quot;],&quot;value&quot;:10893.900000000373,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;fe.user.task.success&quot;,&quot;tags&quot;:[&quot;page:user-access&quot;,&quot;task:api&quot;,&quot;task_id:api-get-id-public-api-facade-me&quot;],&quot;value&quot;:1,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.user.task.time_to_complete&quot;,&quot;tags&quot;:[&quot;page:user-access&quot;,&quot;task:api&quot;,&quot;task_id:api-get-id-public-api-facade-me&quot;],&quot;value&quot;:438.70000000018626,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.request_timing&quot;,&quot;tags&quot;:[&quot;page:user-access&quot;,&quot;type:xmlhttprequest&quot;],&quot;value&quot;:438.70000000018626,&quot;sampleRate&quot;:1}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/metal/ingest</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-77" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;type&quot;:&quot;metric&quot;,&quot;meta&quot;:{&quot;version&quot;:&quot;1.0.0&quot;,&quot;env&quot;:&quot;prod&quot;,&quot;os&quot;:&quot;windows&quot;,&quot;platform&quot;:&quot;desktop&quot;,&quot;browser&quot;:&quot;chrome&quot;},&quot;metalId&quot;:&quot;a60bd3a0-e889-4620-a826-ee7d0b227e11&quot;,&quot;data&quot;:[{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.resource_timing&quot;,&quot;tags&quot;:[&quot;page:user-access&quot;,&quot;type:script&quot;],&quot;value&quot;:3612.899999999441,&quot;sampleRate&quot;:1}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/metal/ingest</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-76" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;type&quot;:&quot;metric&quot;,&quot;meta&quot;:{&quot;version&quot;:&quot;1.0.0&quot;,&quot;env&quot;:&quot;prod&quot;,&quot;os&quot;:&quot;windows&quot;,&quot;platform&quot;:&quot;desktop&quot;,&quot;browser&quot;:&quot;chrome&quot;},&quot;metalId&quot;:&quot;a60bd3a0-e889-4620-a826-ee7d0b227e11&quot;,&quot;data&quot;:[{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.resource_timing&quot;,&quot;tags&quot;:[&quot;page:user-access&quot;,&quot;type:script&quot;],&quot;value&quot;:253.3999999994412,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.resource_timing&quot;,&quot;tags&quot;:[&quot;page:user-access&quot;,&quot;type:link&quot;],&quot;value&quot;:3806.100000000559,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.resource_timing&quot;,&quot;tags&quot;:[&quot;page:user-access&quot;,&quot;type:script&quot;],&quot;value&quot;:6915.299999999814,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.resource_timing&quot;,&quot;tags&quot;:[&quot;page:user-access&quot;,&quot;type:script&quot;],&quot;value&quot;:6513.399999999441,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;fe.perf.cache_hits&quot;,&quot;tags&quot;:[&quot;page:user-access&quot;],&quot;value&quot;:1,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.time_to_first_byte&quot;,&quot;tags&quot;:[&quot;page:user-access&quot;],&quot;value&quot;:3599.9000000003725,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.first_paint&quot;,&quot;tags&quot;:[&quot;page:user-access&quot;],&quot;value&quot;:10893.900000000373,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.first_contentful_paint&quot;,&quot;tags&quot;:[&quot;page:user-access&quot;],&quot;value&quot;:10893.900000000373,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.first_contentful_paint&quot;,&quot;tags&quot;:[&quot;page:user-access&quot;,&quot;gsd_histogram:7500&quot;],&quot;value&quot;:10893.900000000373,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.first_meaningful_paint&quot;,&quot;tags&quot;:[&quot;page:user-access&quot;],&quot;value&quot;:10893.900000000373,&quot;sampleRate&quot;:1}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/metal/ingest</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-78" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;type&quot;:&quot;metric&quot;,&quot;meta&quot;:{&quot;version&quot;:&quot;1.0.0&quot;,&quot;env&quot;:&quot;prod&quot;,&quot;os&quot;:&quot;windows&quot;,&quot;platform&quot;:&quot;desktop&quot;,&quot;browser&quot;:&quot;chrome&quot;},&quot;metalId&quot;:&quot;a60bd3a0-e889-4620-a826-ee7d0b227e11&quot;,&quot;data&quot;:[{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.request_timing&quot;,&quot;tags&quot;:[&quot;page:user-access&quot;,&quot;type:other&quot;],&quot;value&quot;:3844.2999999998137,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.resource_timing&quot;,&quot;tags&quot;:[&quot;page:user-access&quot;,&quot;type:script&quot;],&quot;value&quot;:3730,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;fe.perf.cache_hits&quot;,&quot;tags&quot;:[&quot;page:user-access&quot;],&quot;value&quot;:1,&quot;sampleRate&quot;:1}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/metal/ingest</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-79" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="a" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">a</stringProp>
                  <stringProp name="Argument.value">434145804</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sa" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sa</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1130.54e767a</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">Unnamed Transaction</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="rst" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rst</stringProp>
                  <stringProp name="Argument.value">14536</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ref" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ref</stringProp>
                  <stringProp name="Argument.value">${scheme}://id.atlassian.com/join/user-access</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="be" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">be</stringProp>
                  <stringProp name="Argument.value">3906</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fe" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fe</stringProp>
                  <stringProp name="Argument.value">10907</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="dc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dc</stringProp>
                  <stringProp name="Argument.value">10901</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="af" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">af</stringProp>
                  <stringProp name="Argument.value">err,xhr,stn,ins,spa</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="perf" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">perf</stringProp>
                  <stringProp name="Argument.value">{&quot;timing&quot;:{&quot;of&quot;:1664171885471,&quot;n&quot;:0,&quot;u&quot;:3606,&quot;ue&quot;:3606,&quot;f&quot;:14,&quot;dn&quot;:14,&quot;dne&quot;:14,&quot;c&quot;:20,&quot;s&quot;:25,&quot;ce&quot;:31,&quot;rq&quot;:32,&quot;rp&quot;:3600,&quot;rpe&quot;:3640,&quot;dl&quot;:3609,&quot;di&quot;:10902,&quot;ds&quot;:10902,&quot;de&quot;:10902,&quot;dc&quot;:10907,&quot;l&quot;:10907,&quot;le&quot;:10925},&quot;navigation&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fp</stringProp>
                  <stringProp name="Argument.value">10893</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fcp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fcp</stringProp>
                  <stringProp name="Argument.value">10893</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsonp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsonp</stringProp>
                  <stringProp name="Argument.value">NREUM.setToken</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">bam.nr-data.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/1/d92387cb8b</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-80" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="resource" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">resource</stringProp>
                  <stringProp name="Argument.value">ari:cloud:confluence::site/f21b70d0-8bad-458e-9a03-d1d9544e0e8c</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">id.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/invitations/v1/access-requests/capabilities</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-81" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="resource" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">resource</stringProp>
                  <stringProp name="Argument.value">ari:cloud:confluence::site/f21b70d0-8bad-458e-9a03-d1d9544e0e8c</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">id.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/invitations/v1/settings/metadata</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-82" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;type&quot;:&quot;metric&quot;,&quot;meta&quot;:{&quot;version&quot;:&quot;1.0.0&quot;,&quot;env&quot;:&quot;prod&quot;,&quot;os&quot;:&quot;windows&quot;,&quot;platform&quot;:&quot;desktop&quot;,&quot;browser&quot;:&quot;chrome&quot;},&quot;metalId&quot;:&quot;a60bd3a0-e889-4620-a826-ee7d0b227e11&quot;,&quot;data&quot;:[{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.resource_timing&quot;,&quot;tags&quot;:[&quot;page:user-access&quot;,&quot;type:script&quot;],&quot;value&quot;:1583.1000000005588,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.resource_timing&quot;,&quot;tags&quot;:[&quot;page:user-access&quot;,&quot;type:script&quot;],&quot;value&quot;:1639.0999999996275,&quot;sampleRate&quot;:1}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/metal/ingest</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-83" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">bel.5;1,1,,bj8,bj8,9,&apos;initialPageLoad,&apos;${scheme}://id.atlassian.com/join/user-access,1,1,,,!!!&apos;/join/user-access,&apos;a0c60e66-a8ec-4239-9572-7253098645fe,&apos;1,8el,8el;2,,8aq,cd,2,3,&apos;GET,5k,&apos;id.atlassian.com:443,&apos;/gateway/api/me,,d9,,&apos;2;b,2s6,!,!-2rs,,,6,5,6,1,2r4,14,-v,5ml,,,5,,i</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">bam.nr-data.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/events/1/d92387cb8b?a=434145804&amp;sa=1&amp;v=1130.54e767a&amp;t=Unnamed%20Transaction&amp;rst=16751&amp;ref=${scheme}://id.atlassian.com/join/user-access</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-84" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="continue" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">continue</stringProp>
                  <stringProp name="Argument.value">${scheme}://thinktimetechnology.atlassian.net/wiki/?cloudId=f21b70d0-8bad-458e-9a03-d1d9544e0e8c&amp;atlOrigin=eyJwIjoiYWRtaW4iLCJpIjoiZDBjNzZmMDk4NTMyNGJhYjg5YzU4N2E5NWU5OTE0NzAifQ%3D%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="login_hint" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">login_hint</stringProp>
                  <stringProp name="Argument.value">${user}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="product" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">product</stringProp>
                  <stringProp name="Argument.value">confluence</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">id.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/login</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-85" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="continue" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">continue</stringProp>
                  <stringProp name="Argument.value">${scheme}://thinktimetechnology.atlassian.net/wiki/?cloudId=f21b70d0-8bad-458e-9a03-d1d9544e0e8c&amp;atlOrigin=eyJwIjoiYWRtaW4iLCJpIjoiZDBjNzZmMDk4NTMyNGJhYjg5YzU4N2E5NWU5OTE0NzAifQ%3D%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">token</stringProp>
                  <stringProp name="Argument.value">eyJraWQiOiJtaWNyb3NcL3NpZ24taW4tc2VydmljZVwvb3E5MW9vMnY1OThpdGhkcSIsImFsZyI6IlJTMjU2In0.eyJtYXJrZWRWZXJpZmllZCI6ImZhbHNlIiwibG9naW5UeXBlIjoic2Vzc2lvblJlZnJlc2giLCJpc3MiOiJtaWNyb3NcL3NpZ24taW4tc2VydmljZSIsInVzZXJJZCI6IjYzMjk0ZjgwMTRjNmI0YjIyMTBhMzdjMSIsImlzU2xhY2tBcHBTb3VyY2UiOiJmYWxzZSIsImF1ZCI6Imxpbmstc2lnbmF0dXJlLXZhbGlkYXRvciIsIm5iZiI6MTY2NDE3MTkwMywic2NvcGUiOiJMb2dpbiIsImV4cCI6MTY2NDE3MjAyMywiaWF0IjoxNjY0MTcxOTAzLCJqdGkiOiIxMTg3MzQyNy00MTZkLTQ3MDgtYjc5Yi1iYzEzNGQyY2YwMTciLCJoYXNoZWRDc3JmVG9rZW4iOiI4OTYzN2VhZDU0MzIxN2MxNTY3NzgwNzViZDM1ZWQ2MWYzYTNmNDc1NTc4ODk4Y2U2NDllOGU0NWNhY2ZmYjZhIn0.aelfP1909oWZAke9TKk26W12S9cII8NGL1do09Pi7uZmLZS6OI_PF0LFIYCSY3TtorFYsvjUuLzrGtA2LE2CKnhYmM6zJ5iWEWhAAbB8cLRKzdvA3MKpJ5Icsp7r8_Q87imKr1lnznj-XjiTJyB7VYeuk7pRjU8pqnK-mKsMFkTiXoY5CQQ-mjWzh0kS-jDfttycxhUJjmDf3HBPYHiDQ4fk_4NXTH5fce2FJbOP40Dv5QtQKdngzBqaskqLhWEwLs72-ghbrQugDCYfb3x73MEn465FK2zudygBbuC_hw0ywW_vfKl_fJWW3lwBBXkymUvT3cOaXienC_htHaqsQg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">id.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/login/authorize</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="CST" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">cst</stringProp>
              <stringProp name="RegexExtractor.regex">cst=(.*?)&amp;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">no_cst</stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-89" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">bam.nr-data.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/jserrors/1/d92387cb8b?a=434145804&amp;sa=1&amp;v=1130.54e767a&amp;t=Unnamed%20Transaction&amp;rst=19785&amp;ref=${scheme}://id.atlassian.com/join/user-access&amp;xhr=%5B%7B%22params%22:%7B%22method%22:%22GET%22,%22host%22:%22id.atlassian.com:443%22,%22pathname%22:%22/gateway/api/me%22,%22status%22:200%7D,%22metrics%22:%7B%22count%22:1,%22rxSize%22:%7B%22t%22:477%7D,%22duration%22:%7B%22t%22:446%7D,%22cbTime%22:%7B%22t%22:1%7D,%22time%22:%7B%22t%22:10754%7D%7D%7D,%7B%22params%22:%7B%22method%22:%22GET%22,%22host%22:%22id.atlassian.com:443%22,%22pathname%22:%22/gateway/api/invitations/v1/access-requests/capabilities%22,%22status%22:200%7D,%22metrics%22:%7B%22count%22:1,%22rxSize%22:%7B%22t%22:319%7D,%22duration%22:%7B%22t%22:454%7D,%22cbTime%22:%7B%22t%22:0%7D,%22time%22:%7B%22t%22:16654%7D%7D%7D,%7B%22params%22:%7B%22method%22:%22GET%22,%22host%22:%22id.atlassian.com:443%22,%22pathname%22:%22/gateway/api/invitations/v1/settings/metadata%22,%22status%22:200%7D,%22metrics%22:%7B%22count%22:1,%22rxSize%22:%7B%22t%22:120%7D,%22duration%22:%7B%22t%22:465%7D,%22cbTime%22:%7B%22t%22:0%7D,%22time%22:%7B%22t%22:16657%7D%7D%7D,%7B%22params%22:%7B%22method%22:%22POST%22,%22host%22:%22bam.nr-data.net:443%22,%22pathname%22:%22/events/1/d92387cb8b%22,%22status%22:200%7D,%22metrics%22:%7B%22count%22:1,%22txSize%22:%7B%22t%22:271%7D,%22rxSize%22:%7B%22t%22:24%7D,%22duration%22:%7B%22t%22:810%7D,%22cbTime%22:%7B%22t%22:0%7D,%22time%22:%7B%22t%22:16751%7D%7D%7D%5D</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-90" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="cst" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cst</stringProp>
                  <stringProp name="Argument.value">${cst}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="continue" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">continue</stringProp>
                  <stringProp name="Argument.value">${scheme}://thinktimetechnology.atlassian.net/wiki/?cloudId=f21b70d0-8bad-458e-9a03-d1d9544e0e8c&amp;atlOrigin=eyJwIjoiYWRtaW4iLCJpIjoiZDBjNzZmMDk4NTMyNGJhYjg5YzU4N2E5NWU5OTE0NzAifQ%3D%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="anonymousId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">anonymousId</stringProp>
                  <stringProp name="Argument.value">84b5d269-5029-4e4d-badf-5bc93a8e4258</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/SetCST</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-93" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="cloudId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cloudId</stringProp>
                  <stringProp name="Argument.value">f21b70d0-8bad-458e-9a03-d1d9544e0e8c</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="atlOrigin" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">atlOrigin</stringProp>
                  <stringProp name="Argument.value">eyJwIjoiYWRtaW4iLCJpIjoiZDBjNzZmMDk4NTMyNGJhYjg5YzU4N2E5NWU5OTE0NzAifQ==</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/wiki/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-103" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">confluence-v1.prod.atl-paas.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/master/loading.svg</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="02_Login-107" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument" enabled="true">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;query GlobalOperationsQuery{globalOperations{__typename operation targetType}}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cgraphql?q=QueryPreloader_GlobalOperationsQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
            <stringProp name="GraphQLHTTPSampler.query">query GlobalOperationsQuery{globalOperations{__typename operation targetType}}</stringProp>
            <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/wiki/?cloudId=f21b70d0-8bad-458e-9a03-d1d9544e0e8c&amp;atlOrigin=eyJwIjoiYWRtaW4iLCJpIjoiZDBjNzZmMDk4NTMyNGJhYjg5YzU4N2E5NWU5OTE0NzAifQ%3D%3D</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-APOLLO-OPERATION-NAME" elementType="Header">
                  <stringProp name="Header.name">X-APOLLO-OPERATION-NAME</stringProp>
                  <stringProp name="Header.value">GlobalOperationsQuery</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="02_Login-106" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument" enabled="true">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;query SPAViewContextQuery{spaViewContext{__typename userCanCreateContent isAnonymous homepageUri homepageTitle}siteConfiguration{__typename tenantId siteLogoUrl siteTitle showSiteTitle}isNewUser isSiteAdmin abTestCohorts experimentFeatures}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cgraphql?q=QueryPreloader_SPAViewContextQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
            <stringProp name="GraphQLHTTPSampler.query">query SPAViewContextQuery{spaViewContext{__typename userCanCreateContent isAnonymous homepageUri homepageTitle}siteConfiguration{__typename tenantId siteLogoUrl siteTitle showSiteTitle}isNewUser isSiteAdmin abTestCohorts experimentFeatures}</stringProp>
            <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/wiki/?cloudId=f21b70d0-8bad-458e-9a03-d1d9544e0e8c&amp;atlOrigin=eyJwIjoiYWRtaW4iLCJpIjoiZDBjNzZmMDk4NTMyNGJhYjg5YzU4N2E5NWU5OTE0NzAifQ%3D%3D</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-APOLLO-OPERATION-NAME" elementType="Header">
                  <stringProp name="Header.name">X-APOLLO-OPERATION-NAME</stringProp>
                  <stringProp name="Header.value">SPAViewContextQuery</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="02_Login-104" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument" enabled="true">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;query SessionDataQuery @SLA {\n  tenant {\n    shard\n    cloudId\n    environment\n    activationId\n    editions {\n      edition\n    }\n  }\n  userForAnalytics: user {\n    id\n  }\n  user(current: true) {\n    id\n    displayName\n    confluence {\n      accountId\n      userKey\n      locale\n    }\n    timeZone\n  }\n  featureFlags(extraTargeting: true) {\n    nodes {\n      id\n      value\n      explanation {\n        ruleIndex\n        ruleId\n        kind\n      }\n    }\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cgraphql?q=SessionDataQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
            <stringProp name="GraphQLHTTPSampler.query">
query SessionDataQuery @SLA {
  tenant {
    shard
    cloudId
    environment
    activationId
    editions {
      edition
    }
  }
  userForAnalytics: user {
    id
  }
  user(current: true) {
    id
    displayName
    confluence {
      accountId
      userKey
      locale
    }
    timeZone
  }
  featureFlags(extraTargeting: true) {
    nodes {
      id
      value
      explanation {
        ruleIndex
        ruleId
        kind
      }
    }
  }
}
</stringProp>
            <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/wiki/?cloudId=f21b70d0-8bad-458e-9a03-d1d9544e0e8c&amp;atlOrigin=eyJwIjoiYWRtaW4iLCJpIjoiZDBjNzZmMDk4NTMyNGJhYjg5YzU4N2E5NWU5OTE0NzAifQ%3D%3D</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-APOLLO-OPERATION-NAME" elementType="Header">
                  <stringProp name="Header.name">X-APOLLO-OPERATION-NAME</stringProp>
                  <stringProp name="Header.value">SessionDataQuery</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="X-Atl-Experience" elementType="Header">
                  <stringProp name="Header.name">X-Atl-Experience</stringProp>
                  <stringProp name="Header.value">home</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="02_Login-115" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument" enabled="true">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;WebItemLocationQuery&quot;,&quot;variables&quot;:{&quot;location&quot;:&quot;system.header/left&quot;,&quot;locations&quot;:[],&quot;contentId&quot;:null,&quot;spaceKey&quot;:null,&quot;version&quot;:null},&quot;query&quot;:&quot;query WebItemLocationQuery($location: String, $locations: [String], $contentId: ID, $spaceKey: String, $version: Int) {\n  webItemSections(location: $location, locations: $locations, contentId: $contentId, key: $spaceKey, version: $version) {\n    __typename\n    id\n    label\n    cacheKey\n    styleClass\n    items {\n      __typename\n      accessKey\n      completeKey\n      hasCondition\n      id\n      icon {\n        __typename\n        path\n      }\n      params {\n        __typename\n        key\n        value\n      }\n      label\n      moduleKey\n      section\n      styleClass\n      tooltip\n      url\n      urlWithoutContextPath\n      weight\n    }\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cgraphql?q=WebItemLocationQuery:system.header/left</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="GraphQLHTTPSampler.operationName">WebItemLocationQuery</stringProp>
            <stringProp name="GraphQLHTTPSampler.query">query WebItemLocationQuery($location: String, $locations: [String], $contentId: ID, $spaceKey: String, $version: Int) {
  webItemSections(location: $location, locations: $locations, contentId: $contentId, key: $spaceKey, version: $version) {
    __typename
    id
    label
    cacheKey
    styleClass
    items {
      __typename
      accessKey
      completeKey
      hasCondition
      id
      icon {
        __typename
        path
      }
      params {
        __typename
        key
        value
      }
      label
      moduleKey
      section
      styleClass
      tooltip
      url
      urlWithoutContextPath
      weight
    }
  }
}
</stringProp>
            <stringProp name="GraphQLHTTPSampler.variables">{&quot;location&quot;:&quot;system.header/left&quot;,&quot;locations&quot;:[],&quot;contentId&quot;:null,&quot;spaceKey&quot;:null,&quot;version&quot;:null}</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/wiki/?cloudId=f21b70d0-8bad-458e-9a03-d1d9544e0e8c&amp;atlOrigin=eyJwIjoiYWRtaW4iLCJpIjoiZDBjNzZmMDk4NTMyNGJhYjg5YzU4N2E5NWU5OTE0NzAifQ%3D%3D</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-APOLLO-OPERATION-NAME" elementType="Header">
                  <stringProp name="Header.name">X-APOLLO-OPERATION-NAME</stringProp>
                  <stringProp name="Header.value">WebItemLocationQuery:system.header/left</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="02_Login-114" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument" enabled="true">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;AppNavigationUnifiedQuery&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query AppNavigationUnifiedQuery {\n  lookAndFeel {\n    __typename\n    custom {\n      __typename\n      horizontalHeader {\n        __typename\n        backgroundColor\n        primaryNavigation {\n          __typename\n          highlightColor\n        }\n      }\n    }\n  }\n  siteConfiguration {\n    __typename\n    customSiteLogo\n    siteLogoUrl\n    siteTitle\n    showSiteTitle\n  }\n  user(current: true) {\n    __typename\n    id\n    displayName\n    photos {\n      __typename\n      value\n      isPrimary\n    }\n  }\n  ...UserPermissionFragment\n}\n\nfragment UserPermissionFragment on Query {\n  __typename\n  user(current: true) {\n    __typename\n    id\n    confluence {\n      __typename\n      permissionType\n    }\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cgraphql?q=AppNavigationUnifiedQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="GraphQLHTTPSampler.operationName">AppNavigationUnifiedQuery</stringProp>
            <stringProp name="GraphQLHTTPSampler.query">query AppNavigationUnifiedQuery {
  lookAndFeel {
    __typename
    custom {
      __typename
      horizontalHeader {
        __typename
        backgroundColor
        primaryNavigation {
          __typename
          highlightColor
        }
      }
    }
  }
  siteConfiguration {
    __typename
    customSiteLogo
    siteLogoUrl
    siteTitle
    showSiteTitle
  }
  user(current: true) {
    __typename
    id
    displayName
    photos {
      __typename
      value
      isPrimary
    }
  }
  ...UserPermissionFragment
}

fragment UserPermissionFragment on Query {
  __typename
  user(current: true) {
    __typename
    id
    confluence {
      __typename
      permissionType
    }
  }
}
</stringProp>
            <stringProp name="GraphQLHTTPSampler.variables">{}</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/wiki/?cloudId=f21b70d0-8bad-458e-9a03-d1d9544e0e8c&amp;atlOrigin=eyJwIjoiYWRtaW4iLCJpIjoiZDBjNzZmMDk4NTMyNGJhYjg5YzU4N2E5NWU5OTE0NzAifQ%3D%3D</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-APOLLO-OPERATION-NAME" elementType="Header">
                  <stringProp name="Header.name">X-APOLLO-OPERATION-NAME</stringProp>
                  <stringProp name="Header.value">AppNavigationUnifiedQuery</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="02_Login-118" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument" enabled="true">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;contextIds&quot;:[&quot;ari:cloud:confluence::site/f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;],&quot;type&quot;:&quot;confluence:homepageFeed&quot;},&quot;query&quot;:&quot;query forge_ui_extensionList($contextIds: [ID!]!, $type: String!) {\n      extensionContexts(contextIds: $contextIds) {\n        id\n        extensionsByType(type: $type) {\n          id\n          environmentId\n          environmentType\n          properties\n          type\n          appVersion\n          installationId\n          consentUrl\n          currentUserConsent {\n            user {\n              aaid\n            }\n            appEnvironmentVersion {\n              id\n            }\n            consentedAt\n          }\n          requiresUserConsent\n          __typename\n        }\n        __typename\n      }\n    }&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
            <stringProp name="GraphQLHTTPSampler.query">
    query forge_ui_extensionList($contextIds: [ID!]!, $type: String!) {
      extensionContexts(contextIds: $contextIds) {
        id
        extensionsByType(type: $type) {
          id
          environmentId
          environmentType
          properties
          type
          appVersion
          installationId
          consentUrl
          currentUserConsent {
            user {
              aaid
            }
            appEnvironmentVersion {
              id
            }
            consentedAt
          }
          requiresUserConsent
          __typename
        }
        __typename
      }
    }</stringProp>
            <stringProp name="GraphQLHTTPSampler.variables">{&quot;contextIds&quot;:[&quot;ari:cloud:confluence::site/f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;],&quot;type&quot;:&quot;confluence:homepageFeed&quot;}</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="02_Login-113" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument" enabled="true">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;LocalStorageQuery&quot;,&quot;variables&quot;:{&quot;stringKeys&quot;:[&quot;localStorage/atlassian.63294f8014c6b4b2210a37c1.frontend.persisted.left.sidebar.width&quot;,&quot;localStorage/atlassian.63294f8014c6b4b2210a37c1.frontend.persisted.left.sidebar.collapsed&quot;,&quot;localStorage/atlassian.63294f8014c6b4b2210a37c1.frontend.persisted.growth.persistent.upgrade.preTrial.banner&quot;,&quot;localStorage/atlassian.63294f8014c6b4b2210a37c1.frontend.persisted.growth.discover.apps.dismissed&quot;,&quot;localStorage/atlassian.63294f8014c6b4b2210a37c1.frontend.persisted.guest.survey.next.time.to.show&quot;],&quot;booleanKeys&quot;:[]},&quot;query&quot;:&quot;query LocalStorageQuery($stringKeys: [String]!, $booleanKeys: [String]!) {\n  localStorage {\n    __typename\n    stringValues(keys: $stringKeys) {\n      __typename\n      key\n      value\n    }\n    booleanValues(keys: $booleanKeys) {\n      __typename\n      key\n      value\n    }\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cgraphql?q=LocalStorageQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="GraphQLHTTPSampler.operationName">LocalStorageQuery</stringProp>
            <stringProp name="GraphQLHTTPSampler.query">query LocalStorageQuery($stringKeys: [String]!, $booleanKeys: [String]!) {
  localStorage {
    __typename
    stringValues(keys: $stringKeys) {
      __typename
      key
      value
    }
    booleanValues(keys: $booleanKeys) {
      __typename
      key
      value
    }
  }
}
</stringProp>
            <stringProp name="GraphQLHTTPSampler.variables">{&quot;stringKeys&quot;:[&quot;localStorage/atlassian.63294f8014c6b4b2210a37c1.frontend.persisted.left.sidebar.width&quot;,&quot;localStorage/atlassian.63294f8014c6b4b2210a37c1.frontend.persisted.left.sidebar.collapsed&quot;,&quot;localStorage/atlassian.63294f8014c6b4b2210a37c1.frontend.persisted.growth.persistent.upgrade.preTrial.banner&quot;,&quot;localStorage/atlassian.63294f8014c6b4b2210a37c1.frontend.persisted.growth.discover.apps.dismissed&quot;,&quot;localStorage/atlassian.63294f8014c6b4b2210a37c1.frontend.persisted.guest.survey.next.time.to.show&quot;],&quot;booleanKeys&quot;:[]}</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/wiki/?cloudId=f21b70d0-8bad-458e-9a03-d1d9544e0e8c&amp;atlOrigin=eyJwIjoiYWRtaW4iLCJpIjoiZDBjNzZmMDk4NTMyNGJhYjg5YzU4N2E5NWU5OTE0NzAifQ%3D%3D</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-APOLLO-OPERATION-NAME" elementType="Header">
                  <stringProp name="Header.name">X-APOLLO-OPERATION-NAME</stringProp>
                  <stringProp name="Header.value">LocalStorageQuery</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="02_Login-119" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument" enabled="true">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;HomeProfileQuery&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query HomeProfileQuery {\n  user(current: true) {\n    __typename\n    id\n    photos {\n      __typename\n      value\n      isPrimary\n    }\n    confluence {\n      __typename\n      hasPersonalSpace\n      space {\n        __typename\n        id\n        key\n      }\n    }\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cgraphql?q=HomeProfileQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="GraphQLHTTPSampler.operationName">HomeProfileQuery</stringProp>
            <stringProp name="GraphQLHTTPSampler.query">query HomeProfileQuery {
  user(current: true) {
    __typename
    id
    photos {
      __typename
      value
      isPrimary
    }
    confluence {
      __typename
      hasPersonalSpace
      space {
        __typename
        id
        key
      }
    }
  }
}
</stringProp>
            <stringProp name="GraphQLHTTPSampler.variables">{}</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/wiki/?cloudId=f21b70d0-8bad-458e-9a03-d1d9544e0e8c&amp;atlOrigin=eyJwIjoiYWRtaW4iLCJpIjoiZDBjNzZmMDk4NTMyNGJhYjg5YzU4N2E5NWU5OTE0NzAifQ%3D%3D</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-APOLLO-OPERATION-NAME" elementType="Header">
                  <stringProp name="Header.name">X-APOLLO-OPERATION-NAME</stringProp>
                  <stringProp name="Header.value">HomeProfileQuery</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="02_Login-120" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument" enabled="true">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;HomeRecentWorkQuery&quot;,&quot;variables&quot;:{&quot;cloudId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;first&quot;:10,&quot;after&quot;:&quot;&quot;},&quot;query&quot;:&quot;query HomeRecentWorkQuery($cloudId: ID!, $first: Int, $after: String) {\n  activities {\n    __typename\n    myActivities {\n      __typename\n      all(filters: [{type: AND, arguments: {products: [CONFLUENCE], objectTypes: [PAGE, BLOGPOST], cloudIds: [$cloudId]}}], first: $first, after: $after) {\n        __typename\n        edges {\n          __typename\n          cursor\n          node {\n            __typename\n            id\n            timestamp\n            object {\n              __typename\n              id\n              events {\n                __typename\n                eventType\n              }\n              content {\n                __typename\n                id\n                title\n                type\n                links {\n                  __typename\n                  webui\n                  editui\n                }\n                metadata {\n                  __typename\n                  currentuser {\n                    __typename\n                    favourited {\n                      __typename\n                      isFavourite\n                    }\n                  }\n                }\n                space {\n                  __typename\n                  id\n                  key\n                  name\n                }\n                status\n                blank\n                emoji: properties(keys: [\&quot;emoji-title-published\&quot;, \&quot;emoji-title-draft\&quot;]) {\n                  __typename\n                  nodes {\n                    __typename\n                    id\n                    key\n                    value\n                  }\n                }\n              }\n            }\n          }\n        }\n        pageInfo {\n          __typename\n          hasNextPage\n        }\n      }\n    }\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cgraphql?q=HomeRecentWorkQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="GraphQLHTTPSampler.operationName">HomeRecentWorkQuery</stringProp>
            <stringProp name="GraphQLHTTPSampler.query">query HomeRecentWorkQuery($cloudId: ID!, $first: Int, $after: String) {
  activities {
    __typename
    myActivities {
      __typename
      all(filters: [{type: AND, arguments: {products: [CONFLUENCE], objectTypes: [PAGE, BLOGPOST], cloudIds: [$cloudId]}}], first: $first, after: $after) {
        __typename
        edges {
          __typename
          cursor
          node {
            __typename
            id
            timestamp
            object {
              __typename
              id
              events {
                __typename
                eventType
              }
              content {
                __typename
                id
                title
                type
                links {
                  __typename
                  webui
                  editui
                }
                metadata {
                  __typename
                  currentuser {
                    __typename
                    favourited {
                      __typename
                      isFavourite
                    }
                  }
                }
                space {
                  __typename
                  id
                  key
                  name
                }
                status
                blank
                emoji: properties(keys: [&quot;emoji-title-published&quot;, &quot;emoji-title-draft&quot;]) {
                  __typename
                  nodes {
                    __typename
                    id
                    key
                    value
                  }
                }
              }
            }
          }
        }
        pageInfo {
          __typename
          hasNextPage
        }
      }
    }
  }
}
</stringProp>
            <stringProp name="GraphQLHTTPSampler.variables">{&quot;cloudId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;first&quot;:10,&quot;after&quot;:&quot;&quot;}</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/wiki/?cloudId=f21b70d0-8bad-458e-9a03-d1d9544e0e8c&amp;atlOrigin=eyJwIjoiYWRtaW4iLCJpIjoiZDBjNzZmMDk4NTMyNGJhYjg5YzU4N2E5NWU5OTE0NzAifQ%3D%3D</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-APOLLO-OPERATION-NAME" elementType="Header">
                  <stringProp name="Header.name">X-APOLLO-OPERATION-NAME</stringProp>
                  <stringProp name="Header.value">HomeRecentWorkQuery</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="02_Login-124" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument" enabled="true">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;HomeWidgetsQuery&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query HomeWidgetsQuery {\n  userPreferences {\n    __typename\n    homeWidgets {\n      __typename\n      id\n      state\n    }\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cgraphql?q=HomeWidgetsQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="GraphQLHTTPSampler.operationName">HomeWidgetsQuery</stringProp>
            <stringProp name="GraphQLHTTPSampler.query">query HomeWidgetsQuery {
  userPreferences {
    __typename
    homeWidgets {
      __typename
      id
      state
    }
  }
}
</stringProp>
            <stringProp name="GraphQLHTTPSampler.variables">{}</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/wiki/?cloudId=f21b70d0-8bad-458e-9a03-d1d9544e0e8c&amp;atlOrigin=eyJwIjoiYWRtaW4iLCJpIjoiZDBjNzZmMDk4NTMyNGJhYjg5YzU4N2E5NWU5OTE0NzAifQ%3D%3D</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-APOLLO-OPERATION-NAME" elementType="Header">
                  <stringProp name="Header.name">X-APOLLO-OPERATION-NAME</stringProp>
                  <stringProp name="Header.value">HomeWidgetsQuery</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="02_Login-125" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument" enabled="true">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;WebPanelLocationQuery&quot;,&quot;variables&quot;:{&quot;location&quot;:&quot;atl.dashboard.secondary&quot;},&quot;query&quot;:&quot;query WebPanelLocationQuery($location: String, $contentId: ID, $spaceKey: String) {\n  webPanels(location: $location, contentId: $contentId, key: $spaceKey) {\n    __typename\n    moduleKey\n    completeKey\n    html\n    location\n    label\n    weight\n    name\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cgraphql?q=WebPanelLocationQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="GraphQLHTTPSampler.operationName">WebPanelLocationQuery</stringProp>
            <stringProp name="GraphQLHTTPSampler.query">query WebPanelLocationQuery($location: String, $contentId: ID, $spaceKey: String) {
  webPanels(location: $location, contentId: $contentId, key: $spaceKey) {
    __typename
    moduleKey
    completeKey
    html
    location
    label
    weight
    name
  }
}
</stringProp>
            <stringProp name="GraphQLHTTPSampler.variables">{&quot;location&quot;:&quot;atl.dashboard.secondary&quot;}</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/wiki/?cloudId=f21b70d0-8bad-458e-9a03-d1d9544e0e8c&amp;atlOrigin=eyJwIjoiYWRtaW4iLCJpIjoiZDBjNzZmMDk4NTMyNGJhYjg5YzU4N2E5NWU5OTE0NzAifQ%3D%3D</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-APOLLO-OPERATION-NAME" elementType="Header">
                  <stringProp name="Header.name">X-APOLLO-OPERATION-NAME</stringProp>
                  <stringProp name="Header.value">WebPanelLocationQuery</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="02_Login-127" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument" enabled="true">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;StarredSpacesQuery&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query StarredSpacesQuery {\n  spaces(favourite: true, first: 99, status: \&quot;current\&quot;) {\n    __typename\n    nodes {\n      __typename\n      ...SpaceDropdownSpaceFragment\n    }\n  }\n}\n\nfragment SpaceDropdownSpaceFragment on Space {\n  __typename\n  id\n  name\n  key\n  icon {\n    __typename\n    path\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cgraphql?q=StarredSpacesQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="GraphQLHTTPSampler.operationName">StarredSpacesQuery</stringProp>
            <stringProp name="GraphQLHTTPSampler.query">query StarredSpacesQuery {
  spaces(favourite: true, first: 99, status: &quot;current&quot;) {
    __typename
    nodes {
      __typename
      ...SpaceDropdownSpaceFragment
    }
  }
}

fragment SpaceDropdownSpaceFragment on Space {
  __typename
  id
  name
  key
  icon {
    __typename
    path
  }
}
</stringProp>
            <stringProp name="GraphQLHTTPSampler.variables">{}</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/wiki/?cloudId=f21b70d0-8bad-458e-9a03-d1d9544e0e8c&amp;atlOrigin=eyJwIjoiYWRtaW4iLCJpIjoiZDBjNzZmMDk4NTMyNGJhYjg5YzU4N2E5NWU5OTE0NzAifQ%3D%3D</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-APOLLO-OPERATION-NAME" elementType="Header">
                  <stringProp name="Header.name">X-APOLLO-OPERATION-NAME</stringProp>
                  <stringProp name="Header.value">StarredSpacesQuery</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="02_Login-126" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument" enabled="true">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;WelcomeMessagesQuery&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query WelcomeMessagesQuery {\n  spaViewContext {\n    __typename\n    welcomeMessageEditUrl\n    welcomeMessageHtml\n    resourceKeys\n    resourceContexts\n    showWelcomeMessageEditHint\n    showEditButton\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cgraphql?q=WelcomeMessagesQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="GraphQLHTTPSampler.operationName">WelcomeMessagesQuery</stringProp>
            <stringProp name="GraphQLHTTPSampler.query">query WelcomeMessagesQuery {
  spaViewContext {
    __typename
    welcomeMessageEditUrl
    welcomeMessageHtml
    resourceKeys
    resourceContexts
    showWelcomeMessageEditHint
    showEditButton
  }
}
</stringProp>
            <stringProp name="GraphQLHTTPSampler.variables">{}</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/wiki/?cloudId=f21b70d0-8bad-458e-9a03-d1d9544e0e8c&amp;atlOrigin=eyJwIjoiYWRtaW4iLCJpIjoiZDBjNzZmMDk4NTMyNGJhYjg5YzU4N2E5NWU5OTE0NzAifQ%3D%3D</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-APOLLO-OPERATION-NAME" elementType="Header">
                  <stringProp name="Header.name">X-APOLLO-OPERATION-NAME</stringProp>
                  <stringProp name="Header.value">WelcomeMessagesQuery</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="02_Login-128" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument" enabled="true">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;RecentSpacesQuery&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query RecentSpacesQuery {\n  recentSpaces {\n    __typename\n    ...SpaceDropdownSpaceFragment\n  }\n}\n\nfragment SpaceDropdownSpaceFragment on Space {\n  __typename\n  id\n  name\n  key\n  icon {\n    __typename\n    path\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cgraphql?q=RecentSpacesQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="GraphQLHTTPSampler.operationName">RecentSpacesQuery</stringProp>
            <stringProp name="GraphQLHTTPSampler.query">query RecentSpacesQuery {
  recentSpaces {
    __typename
    ...SpaceDropdownSpaceFragment
  }
}

fragment SpaceDropdownSpaceFragment on Space {
  __typename
  id
  name
  key
  icon {
    __typename
    path
  }
}
</stringProp>
            <stringProp name="GraphQLHTTPSampler.variables">{}</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/wiki/?cloudId=f21b70d0-8bad-458e-9a03-d1d9544e0e8c&amp;atlOrigin=eyJwIjoiYWRtaW4iLCJpIjoiZDBjNzZmMDk4NTMyNGJhYjg5YzU4N2E5NWU5OTE0NzAifQ%3D%3D</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-APOLLO-OPERATION-NAME" elementType="Header">
                  <stringProp name="Header.name">X-APOLLO-OPERATION-NAME</stringProp>
                  <stringProp name="Header.value">RecentSpacesQuery</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="02_Login-133" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument" enabled="true">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;CreateSpaceQuery&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query CreateSpaceQuery {\n  user(current: true) {\n    __typename\n    id\n    confluence {\n      __typename\n      operations {\n        __typename\n        operation\n      }\n    }\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cgraphql?q=CreateSpaceQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="GraphQLHTTPSampler.operationName">CreateSpaceQuery</stringProp>
            <stringProp name="GraphQLHTTPSampler.query">query CreateSpaceQuery {
  user(current: true) {
    __typename
    id
    confluence {
      __typename
      operations {
        __typename
        operation
      }
    }
  }
}
</stringProp>
            <stringProp name="GraphQLHTTPSampler.variables">{}</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/wiki/?cloudId=f21b70d0-8bad-458e-9a03-d1d9544e0e8c&amp;atlOrigin=eyJwIjoiYWRtaW4iLCJpIjoiZDBjNzZmMDk4NTMyNGJhYjg5YzU4N2E5NWU5OTE0NzAifQ%3D%3D</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-APOLLO-OPERATION-NAME" elementType="Header">
                  <stringProp name="Header.name">X-APOLLO-OPERATION-NAME</stringProp>
                  <stringProp name="Header.value">CreateSpaceQuery</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="02_Login-136" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument" enabled="true">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;FeatureDiscoveryQuery&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query FeatureDiscoveryQuery {\n  featureDiscovery {\n    __typename\n    pluginKey\n    featureKey\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cgraphql?q=FeatureDiscoveryQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="GraphQLHTTPSampler.operationName">FeatureDiscoveryQuery</stringProp>
            <stringProp name="GraphQLHTTPSampler.query">query FeatureDiscoveryQuery {
  featureDiscovery {
    __typename
    pluginKey
    featureKey
  }
}
</stringProp>
            <stringProp name="GraphQLHTTPSampler.variables">{}</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/wiki/?cloudId=f21b70d0-8bad-458e-9a03-d1d9544e0e8c&amp;atlOrigin=eyJwIjoiYWRtaW4iLCJpIjoiZDBjNzZmMDk4NTMyNGJhYjg5YzU4N2E5NWU5OTE0NzAifQ%3D%3D</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-APOLLO-OPERATION-NAME" elementType="Header">
                  <stringProp name="Header.name">X-APOLLO-OPERATION-NAME</stringProp>
                  <stringProp name="Header.value">FeatureDiscoveryQuery</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="02_Login-135" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument" enabled="true">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;FeedPopularFeedQuery&quot;,&quot;variables&quot;:{&quot;withReadTime&quot;:false,&quot;first&quot;:5},&quot;query&quot;:&quot;query FeedPopularFeedQuery($first: Int, $after: String, $withReadTime: Boolean = false) {\n  popularFeed(first: $first, after: $after) {\n    __typename\n    nodes {\n      __typename\n      content {\n        __typename\n        title\n        id\n        type\n        emoji: properties(key: \&quot;emoji-title-published\&quot;) {\n          __typename\n          nodes {\n            __typename\n            id\n            value\n          }\n        }\n        excerpt(length: 350)\n        links {\n          __typename\n          webui\n        }\n        space {\n          __typename\n          id\n          key\n          name\n        }\n        likes {\n          __typename\n          count\n          currentUserLikes\n        }\n        history {\n          __typename\n          createdDate\n          createdBy {\n            __typename\n            type\n            displayName\n            profilePicture {\n              __typename\n              path\n            }\n            ... on KnownUser {\n              accountId\n              __typename\n            }\n            ... on User {\n              accountId\n              __typename\n            }\n            ... on UnknownUser {\n              accountId\n              __typename\n            }\n          }\n        }\n        metadata {\n          __typename\n          comments {\n            __typename\n            commentsCount\n          }\n          currentuser {\n            __typename\n            favourited {\n              __typename\n              isFavourite\n            }\n          }\n        }\n        smartFeatures @include(if: $withReadTime) {\n          __typename\n          readTime\n        }\n      }\n    }\n    pageInfo {\n      __typename\n      hasNextPage\n      endCursor\n    }\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cgraphql?q=FeedPopularFeedQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="GraphQLHTTPSampler.operationName">FeedPopularFeedQuery</stringProp>
            <stringProp name="GraphQLHTTPSampler.query">query FeedPopularFeedQuery($first: Int, $after: String, $withReadTime: Boolean = false) {
  popularFeed(first: $first, after: $after) {
    __typename
    nodes {
      __typename
      content {
        __typename
        title
        id
        type
        emoji: properties(key: &quot;emoji-title-published&quot;) {
          __typename
          nodes {
            __typename
            id
            value
          }
        }
        excerpt(length: 350)
        links {
          __typename
          webui
        }
        space {
          __typename
          id
          key
          name
        }
        likes {
          __typename
          count
          currentUserLikes
        }
        history {
          __typename
          createdDate
          createdBy {
            __typename
            type
            displayName
            profilePicture {
              __typename
              path
            }
            ... on KnownUser {
              accountId
              __typename
            }
            ... on User {
              accountId
              __typename
            }
            ... on UnknownUser {
              accountId
              __typename
            }
          }
        }
        metadata {
          __typename
          comments {
            __typename
            commentsCount
          }
          currentuser {
            __typename
            favourited {
              __typename
              isFavourite
            }
          }
        }
        smartFeatures @include(if: $withReadTime) {
          __typename
          readTime
        }
      }
    }
    pageInfo {
      __typename
      hasNextPage
      endCursor
    }
  }
}
</stringProp>
            <stringProp name="GraphQLHTTPSampler.variables">{&quot;withReadTime&quot;:false,&quot;first&quot;:5}</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/wiki/?cloudId=f21b70d0-8bad-458e-9a03-d1d9544e0e8c&amp;atlOrigin=eyJwIjoiYWRtaW4iLCJpIjoiZDBjNzZmMDk4NTMyNGJhYjg5YzU4N2E5NWU5OTE0NzAifQ%3D%3D</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-APOLLO-OPERATION-NAME" elementType="Header">
                  <stringProp name="Header.name">X-APOLLO-OPERATION-NAME</stringProp>
                  <stringProp name="Header.value">FeedPopularFeedQuery</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="02_Login-137" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument" enabled="true">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;FeedContentQuery&quot;,&quot;variables&quot;:{&quot;withReadTime&quot;:false,&quot;first&quot;:5},&quot;query&quot;:&quot;query FeedContentQuery($first: Int, $after: String, $withReadTime: Boolean = false) {\n  feed(first: $first, after: $after) {\n    __typename\n    nodes {\n      __typename\n      recentActionsCount\n      summaryLineUpdate {\n        __typename\n        datetime\n        type\n        groupSize\n        ... on FeedEventCreate {\n          user {\n            __typename\n            ...UserFragment\n          }\n          __typename\n        }\n        ... on FeedEventEdit {\n          version\n          user {\n            __typename\n            ...UserFragment\n          }\n          __typename\n        }\n        ... on FeedEventComment {\n          user {\n            __typename\n            ...UserFragment\n          }\n          comment {\n            __typename\n            id\n            links {\n              __typename\n              webui\n            }\n            likeCount\n            isLikedByCurrentUser\n            location {\n              __typename\n              type\n              ... on InlineComment {\n                inlineText\n                __typename\n              }\n            }\n            body(representation: ATLAS_DOC_FORMAT) {\n              __typename\n              value\n            }\n          }\n          __typename\n        }\n      }\n      source\n      content {\n        __typename\n        title\n        id\n        type\n        emoji: properties(key: \&quot;emoji-title-published\&quot;) {\n          __typename\n          nodes {\n            __typename\n            id\n            value\n          }\n        }\n        excerpt(length: 350)\n        links {\n          __typename\n          webui\n        }\n        history {\n          __typename\n          createdBy {\n            __typename\n            ...UserFragment\n          }\n          createdDate\n        }\n        space {\n          __typename\n          id\n          key\n          name\n        }\n        likes {\n          __typename\n          count\n          currentUserLikes\n        }\n        metadata {\n          __typename\n          comments {\n            __typename\n            commentsCount\n          }\n          currentuser {\n            __typename\n            favourited {\n              __typename\n              isFavourite\n            }\n          }\n        }\n        smartFeatures @include(if: $withReadTime) {\n          __typename\n          readTime\n        }\n      }\n    }\n    pageInfo {\n      __typename\n      hasNextPage\n      endCursor\n    }\n  }\n  getFeedUserConfig {\n    __typename\n    spaces {\n      __typename\n      id\n    }\n    users {\n      __typename\n      ... on KnownUser {\n        accountId\n        __typename\n      }\n      ... on User {\n        accountId\n        __typename\n      }\n      ... on UnknownUser {\n        accountId\n        __typename\n      }\n    }\n    servingRecommendations\n  }\n}\n\nfragment UserFragment on Person {\n  __typename\n  type\n  displayName\n  profilePicture {\n    __typename\n    path\n  }\n  ... on KnownUser {\n    accountId\n    __typename\n  }\n  ... on User {\n    accountId\n    __typename\n  }\n  ... on UnknownUser {\n    accountId\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cgraphql?q=FeedContentQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="GraphQLHTTPSampler.operationName">FeedContentQuery</stringProp>
            <stringProp name="GraphQLHTTPSampler.query">query FeedContentQuery($first: Int, $after: String, $withReadTime: Boolean = false) {
  feed(first: $first, after: $after) {
    __typename
    nodes {
      __typename
      recentActionsCount
      summaryLineUpdate {
        __typename
        datetime
        type
        groupSize
        ... on FeedEventCreate {
          user {
            __typename
            ...UserFragment
          }
          __typename
        }
        ... on FeedEventEdit {
          version
          user {
            __typename
            ...UserFragment
          }
          __typename
        }
        ... on FeedEventComment {
          user {
            __typename
            ...UserFragment
          }
          comment {
            __typename
            id
            links {
              __typename
              webui
            }
            likeCount
            isLikedByCurrentUser
            location {
              __typename
              type
              ... on InlineComment {
                inlineText
                __typename
              }
            }
            body(representation: ATLAS_DOC_FORMAT) {
              __typename
              value
            }
          }
          __typename
        }
      }
      source
      content {
        __typename
        title
        id
        type
        emoji: properties(key: &quot;emoji-title-published&quot;) {
          __typename
          nodes {
            __typename
            id
            value
          }
        }
        excerpt(length: 350)
        links {
          __typename
          webui
        }
        history {
          __typename
          createdBy {
            __typename
            ...UserFragment
          }
          createdDate
        }
        space {
          __typename
          id
          key
          name
        }
        likes {
          __typename
          count
          currentUserLikes
        }
        metadata {
          __typename
          comments {
            __typename
            commentsCount
          }
          currentuser {
            __typename
            favourited {
              __typename
              isFavourite
            }
          }
        }
        smartFeatures @include(if: $withReadTime) {
          __typename
          readTime
        }
      }
    }
    pageInfo {
      __typename
      hasNextPage
      endCursor
    }
  }
  getFeedUserConfig {
    __typename
    spaces {
      __typename
      id
    }
    users {
      __typename
      ... on KnownUser {
        accountId
        __typename
      }
      ... on User {
        accountId
        __typename
      }
      ... on UnknownUser {
        accountId
        __typename
      }
    }
    servingRecommendations
  }
}

fragment UserFragment on Person {
  __typename
  type
  displayName
  profilePicture {
    __typename
    path
  }
  ... on KnownUser {
    accountId
    __typename
  }
  ... on User {
    accountId
    __typename
  }
  ... on UnknownUser {
    accountId
    __typename
  }
}
</stringProp>
            <stringProp name="GraphQLHTTPSampler.variables">{&quot;withReadTime&quot;:false,&quot;first&quot;:5}</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/wiki/?cloudId=f21b70d0-8bad-458e-9a03-d1d9544e0e8c&amp;atlOrigin=eyJwIjoiYWRtaW4iLCJpIjoiZDBjNzZmMDk4NTMyNGJhYjg5YzU4N2E5NWU5OTE0NzAifQ%3D%3D</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-APOLLO-OPERATION-NAME" elementType="Header">
                  <stringProp name="Header.name">X-APOLLO-OPERATION-NAME</stringProp>
                  <stringProp name="Header.value">FeedContentQuery</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-144" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="product" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">product</stringProp>
                  <stringProp name="Argument.value">confluence</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="schema" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">schema</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="locale" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">locale</stringProp>
                  <stringProp name="Argument.value">en-US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/engage-targeting/api/v2/user/f21b70d0-8bad-458e-9a03-d1d9544e0e8c/in-product-messages</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="02_Login-138" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument" enabled="true">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;userId&quot;:&quot;63294f8014c6b4b2210a37c1&quot;,&quot;cloudId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;},&quot;query&quot;:&quot;query User($userId: String!, $cloudId: String!) {\n  User: CloudUser(userId: $userId, cloudId: $cloudId) {\n    headerImageUrl(width: 960)\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/directory/graphql?q=User</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
            <stringProp name="GraphQLHTTPSampler.query">
query User($userId: String!, $cloudId: String!) {
  User: CloudUser(userId: $userId, cloudId: $cloudId) {
    headerImageUrl(width: 960)
  }
}</stringProp>
            <stringProp name="GraphQLHTTPSampler.variables">{&quot;userId&quot;:&quot;63294f8014c6b4b2210a37c1&quot;,&quot;cloudId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;}</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-146" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;type&quot;:&quot;metric&quot;,&quot;meta&quot;:{&quot;globalTags&quot;:[&quot;page:WIKI&quot;,&quot;product:confluence&quot;,&quot;version:CLASSIC-master-12091&quot;,&quot;track:prod&quot;]},&quot;data&quot;:[{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;session&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;type:initial&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:29.776Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:home&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskStart&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:true&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:0.2999999998137355&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:30.106Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;session&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;type:initial&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:30.106Z&quot;}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/telemetry</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-151" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;operationName&quot;:&quot;GetOnboardingState&quot;,&quot;variables&quot;:{&quot;key&quot;:[&quot;quickstart-state:isPanelOpen&quot;,&quot;quickstart-state:isDismissed&quot;,&quot;quickstart-state:openTaskId&quot;,&quot;quickstart-state:openComponentId&quot;,&quot;quickstart-state:jswConfIntroCompleted&quot;,&quot;quickstart-state:helpCompleted&quot;,&quot;quickstart-state:spaceModalCompleted&quot;,&quot;quickstart-state:spaceTourCompleted&quot;,&quot;quickstart-state:collaborateCompleted&quot;,&quot;quickstart-state:homeModalCompleted&quot;,&quot;quickstart-state:homeTourCompleted&quot;,&quot;quickstart-state:mobileCompleted&quot;,&quot;quickstart-state:hasSeenDismissedFlag&quot;,&quot;quickstart-state:isMigratedUserV2&quot;,&quot;quickstart-state:isMigratedUserCalibrationState&quot;,&quot;quickstart-state:jswXflowSwitcherTourCompleted&quot;,&quot;onboarding-origin-state:attributes&quot;,&quot;quickstart-state:jswXFlowModalCompleted&quot;,&quot;quickstart-state:jswXflowInvitePeopleModalOpen&quot;,&quot;quickstart-state:jswXflowInvitePeopleNudgeCompleted&quot;,&quot;quickstart-state:jswXFlowInvitedEmails&quot;,&quot;quickstart-state:editorTutorialTaskCompleted&quot;,&quot;quickstart-state:qsv2ReadConfluenceGuideCompleted&quot;,&quot;quickstart-state:qsv2InviteTeammateCompleted&quot;,&quot;quickstart-state:qsv2IntegrationCompleted&quot;,&quot;quickstart-state:qsv2SiteVideoTourCompleted&quot;,&quot;quickstart-state:qsv2SpotlightCompleted&quot;,&quot;quickstart-state:migrationsWelcomeCompleted&quot;,&quot;quickstart-state:migrationsNewPageCompleted&quot;,&quot;quickstart-state:migrationsCollaborateCompleted&quot;,&quot;quickstart-state:migrationsFindAndOrganizePagesCompleted&quot;,&quot;quickstart-state:migrationsEditAndCustomizeContentCompleted&quot;,&quot;quickstart-state:simplifyAdminRenameSiteCompleted&quot;,&quot;quickstart-state:nqsv2HelpCompleted&quot;,&quot;quickstart-state:nqsv2CreateCompleted&quot;,&quot;quickstart-state:nqsv2CollaborateCompleted&quot;,&quot;quickstart-state:nqsv2Confluence101Completed&quot;]},&quot;query&quot;:&quot;query GetOnboardingState($key: [String]) {\n  onboardingState(key: $key) {\n    key\n    value\n    __typename\n  }\n}\n&quot;},{&quot;operationName&quot;:&quot;GetQuickstartState&quot;,&quot;variables&quot;:{&quot;key&quot;:[&quot;quickstart-state:isPanelOpen&quot;,&quot;quickstart-state:isDismissed&quot;,&quot;quickstart-state:openTaskId&quot;,&quot;quickstart-state:openComponentId&quot;,&quot;quickstart-state:jswConfIntroCompleted&quot;,&quot;quickstart-state:helpCompleted&quot;,&quot;quickstart-state:spaceModalCompleted&quot;,&quot;quickstart-state:spaceTourCompleted&quot;,&quot;quickstart-state:collaborateCompleted&quot;,&quot;quickstart-state:homeModalCompleted&quot;,&quot;quickstart-state:homeTourCompleted&quot;,&quot;quickstart-state:mobileCompleted&quot;,&quot;quickstart-state:hasSeenDismissedFlag&quot;,&quot;quickstart-state:isMigratedUserV2&quot;,&quot;quickstart-state:isMigratedUserCalibrationState&quot;,&quot;quickstart-state:jswXflowSwitcherTourCompleted&quot;,&quot;onboarding-origin-state:attributes&quot;,&quot;quickstart-state:jswXFlowModalCompleted&quot;,&quot;quickstart-state:jswXflowInvitePeopleModalOpen&quot;,&quot;quickstart-state:jswXflowInvitePeopleNudgeCompleted&quot;,&quot;quickstart-state:jswXFlowInvitedEmails&quot;,&quot;quickstart-state:editorTutorialTaskCompleted&quot;,&quot;quickstart-state:qsv2ReadConfluenceGuideCompleted&quot;,&quot;quickstart-state:qsv2InviteTeammateCompleted&quot;,&quot;quickstart-state:qsv2IntegrationCompleted&quot;,&quot;quickstart-state:qsv2SiteVideoTourCompleted&quot;,&quot;quickstart-state:qsv2SpotlightCompleted&quot;,&quot;quickstart-state:migrationsWelcomeCompleted&quot;,&quot;quickstart-state:migrationsNewPageCompleted&quot;,&quot;quickstart-state:migrationsCollaborateCompleted&quot;,&quot;quickstart-state:migrationsFindAndOrganizePagesCompleted&quot;,&quot;quickstart-state:migrationsEditAndCustomizeContentCompleted&quot;,&quot;quickstart-state:simplifyAdminRenameSiteCompleted&quot;,&quot;quickstart-state:nqsv2HelpCompleted&quot;,&quot;quickstart-state:nqsv2CreateCompleted&quot;,&quot;quickstart-state:nqsv2CollaborateCompleted&quot;,&quot;quickstart-state:nqsv2Confluence101Completed&quot;]},&quot;query&quot;:&quot;query GetQuickstartState($key: [String]) {\n  onboardingState(key: $key) {\n    key\n    value\n    __typename\n  }\n  ...UserPermissionFragment\n}\n\nfragment UserPermissionFragment on Query {\n  user(current: true) {\n    id\n    confluence {\n      permissionType\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n&quot;},{&quot;operationName&quot;:&quot;WebPanelLocationQuery&quot;,&quot;variables&quot;:{&quot;location&quot;:&quot;atl.general&quot;},&quot;query&quot;:&quot;query WebPanelLocationQuery($location: String, $contentId: ID, $spaceKey: String) {\n  webPanels(location: $location, contentId: $contentId, key: $spaceKey) {\n    moduleKey\n    completeKey\n    html\n    location\n    label\n    weight\n    name\n    __typename\n  }\n}\n&quot;},{&quot;operationName&quot;:&quot;WebPanelLocationQuery&quot;,&quot;variables&quot;:{&quot;location&quot;:&quot;atl.footer&quot;},&quot;query&quot;:&quot;query WebPanelLocationQuery($location: String, $contentId: ID, $spaceKey: String) {\n  webPanels(location: $location, contentId: $contentId, key: $spaceKey) {\n    moduleKey\n    completeKey\n    html\n    location\n    label\n    weight\n    name\n    __typename\n  }\n}\n&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cgraphql?q=GetOnboardingState,GetQuickstartState,WebPanelLocationQuery,WebPanelLocationQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/wiki/home?cloudId=f21b70d0-8bad-458e-9a03-d1d9544e0e8c&amp;atlOrigin=eyJwIjoiYWRtaW4iLCJpIjoiZDBjNzZmMDk4NTMyNGJhYjg5YzU4N2E5NWU5OTE0NzAifQ%3D%3D</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-APOLLO-OPERATION-NAME" elementType="Header">
                  <stringProp name="Header.name">X-APOLLO-OPERATION-NAME</stringProp>
                  <stringProp name="Header.value">GetOnboardingState,GetQuickstartState,WebPanelLocationQuery,WebPanelLocationQuery</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-145" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">confluence-v1.prod.atl-paas.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/master/force-update.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="02_Login-134" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument" enabled="true">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;FeedTypeSelectorQuery&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query FeedTypeSelectorQuery {\n  userPreferences {\n    __typename\n    feedType\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cgraphql?q=FeedTypeSelectorQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="GraphQLHTTPSampler.operationName">FeedTypeSelectorQuery</stringProp>
            <stringProp name="GraphQLHTTPSampler.query">query FeedTypeSelectorQuery {
  userPreferences {
    __typename
    feedType
  }
}
</stringProp>
            <stringProp name="GraphQLHTTPSampler.variables">{}</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/wiki/?cloudId=f21b70d0-8bad-458e-9a03-d1d9544e0e8c&amp;atlOrigin=eyJwIjoiYWRtaW4iLCJpIjoiZDBjNzZmMDk4NTMyNGJhYjg5YzU4N2E5NWU5OTE0NzAifQ%3D%3D</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-APOLLO-OPERATION-NAME" elementType="Header">
                  <stringProp name="Header.name">X-APOLLO-OPERATION-NAME</stringProp>
                  <stringProp name="Header.value">FeedTypeSelectorQuery</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-159" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">confluence-v1.prod.atl-paas.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/master/force-update.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="02_Login-164" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument" enabled="true">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;query&quot;:&quot;query isNewUserQuery {\n    isNewUser\n  }&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cgraphql?q=isNewUserQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
            <stringProp name="GraphQLHTTPSampler.query">
  query isNewUserQuery {
    isNewUser
  }
</stringProp>
            <stringProp name="GraphQLHTTPSampler.variables"></stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-APOLLO-OPERATION-NAME" elementType="Header">
                  <stringProp name="Header.name">X-APOLLO-OPERATION-NAME</stringProp>
                  <stringProp name="Header.value">isNewUserQuery</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="02_Login-163" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument" enabled="true">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;userId&quot;:&quot;63294f8014c6b4b2210a37c1&quot;,&quot;cloudId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;},&quot;query&quot;:&quot;query User($userId: String!, $cloudId: String!) {\n  User: CloudUser(userId: $userId, cloudId: $cloudId) {\n    headerImageUrl(width: 960)\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/directory/graphql?q=User</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
            <stringProp name="GraphQLHTTPSampler.query">
query User($userId: String!, $cloudId: String!) {
  User: CloudUser(userId: $userId, cloudId: $cloudId) {
    headerImageUrl(width: 960)
  }
}</stringProp>
            <stringProp name="GraphQLHTTPSampler.variables">{&quot;userId&quot;:&quot;63294f8014c6b4b2210a37c1&quot;,&quot;cloudId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;}</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-173" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">ptc-directory-sited-static.us-east-1.prod.public.atl-paas.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gradients/6.svg</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-168" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;batch&quot;:[{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:32.052Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;webClient&quot;,&quot;actionSubject&quot;:&quot;origin&quot;,&quot;action&quot;:&quot;landed&quot;,&quot;attributes&quot;:{&quot;originTracesLanded&quot;:{&quot;atlOrigin&quot;:{&quot;id&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;,&quot;product&quot;:&quot;admin&quot;,&quot;library&quot;:&quot;origin-tracing.js@6.0.8&quot;}}},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;origin landed&quot;,&quot;messageId&quot;:&quot;ajs-9e138451-b4b8-4ecd-a2dd-390b4e3f6b23&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:32.633Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:32.059Z&quot;,&quot;type&quot;:&quot;page&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;title&quot;:&quot;&quot;,&quot;path&quot;:&quot;&quot;,&quot;url&quot;:&quot;&quot;,&quot;referrer&quot;:&quot;&quot;,&quot;search&quot;:&quot;&quot;,&quot;eventType&quot;:&quot;screen&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;name&quot;:&quot;wikiScreen&quot;,&quot;messageId&quot;:&quot;ajs-ae056d3f-31de-4df4-8fbb-c27b61404bd7&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:32.633Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:32.059Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;@atlaskit/feature-flag-client&quot;,&quot;actionSubject&quot;:&quot;feature&quot;,&quot;action&quot;:&quot;exposed&quot;,&quot;attributes&quot;:{&quot;flagKey&quot;:&quot;confluence.frontend.onboarding.experience&quot;,&quot;reason&quot;:&quot;FALLTHROUGH&quot;,&quot;ruleId&quot;:null,&quot;value&quot;:true},&quot;tags&quot;:[&quot;optInExposure&quot;,&quot;measurement&quot;],&quot;highPriority&quot;:true,&quot;eventType&quot;:&quot;track&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;feature exposed&quot;,&quot;messageId&quot;:&quot;ajs-01667396-79ef-4729-992c-5e9fa37eba61&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:32.633Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:32.060Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskStart&quot;,&quot;attributes&quot;:{&quot;uuid&quot;:&quot;HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;isInitial&quot;:true,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:0.2999999998137355,&quot;startTime&quot;:4783.9000000003725,&quot;task&quot;:&quot;home&quot;,&quot;taskId&quot;:&quot;36a5ab3b-6efb-4b1b-82b4-2434f8af121b&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskStart&quot;,&quot;messageId&quot;:&quot;ajs-86aacff0-70b6-4fe9-a7dd-b3ff3af52f1d&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:32.633Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:32.061Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskStart&quot;,&quot;attributes&quot;:{&quot;uuid&quot;:&quot;HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;isInitial&quot;:true,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:4.599999999627471,&quot;startTime&quot;:4788.200000000186,&quot;timeout&quot;:30000,&quot;task&quot;:&quot;navigation/app-nav-global-navigation&quot;,&quot;taskId&quot;:&quot;52e5278f-6751-4585-9a9b-d4c8e784814a&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskStart&quot;,&quot;messageId&quot;:&quot;ajs-6020a62b-be25-4707-82fa-8f8ce19053e8&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:32.633Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:32.062Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskStart&quot;,&quot;attributes&quot;:{&quot;uuid&quot;:&quot;HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;isInitial&quot;:true,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:9.299999999813735,&quot;startTime&quot;:4792.9000000003725,&quot;task&quot;:&quot;extension_point_home_footer&quot;,&quot;taskId&quot;:&quot;6fbaf0b4-0d28-4b31-9179-0b2faedec452&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskStart&quot;,&quot;messageId&quot;:&quot;ajs-94aea258-d15a-457d-b3d5-d71c4b33eff9&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:32.633Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:32.061Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskStart&quot;,&quot;attributes&quot;:{&quot;uuid&quot;:&quot;HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;isInitial&quot;:true,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:9.099999999627471,&quot;startTime&quot;:4792.700000000186,&quot;task&quot;:&quot;extension_point_home_header&quot;,&quot;taskId&quot;:&quot;771abf08-faf4-4e3d-a780-3500ec684829&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskStart&quot;,&quot;messageId&quot;:&quot;ajs-38ccfe39-5c41-4d05-a8e8-1849247290e6&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:32.633Z&quot;}],&quot;sentAt&quot;:&quot;2022-09-26T05:58:32.633Z&quot;,&quot;metadata&quot;:{&quot;eventCount&quot;:23,&quot;resilienceMechanism&quot;:&quot;indexeddb&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/gasv3/api/v1/batch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-174" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;batch&quot;:[{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:32.062Z&quot;,&quot;type&quot;:&quot;page&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;title&quot;:&quot;&quot;,&quot;path&quot;:&quot;&quot;,&quot;url&quot;:&quot;&quot;,&quot;referrer&quot;:&quot;&quot;,&quot;search&quot;:&quot;&quot;,&quot;eventType&quot;:&quot;screen&quot;,&quot;attributes&quot;:{&quot;navdexPointType&quot;:&quot;navigationSessionStart&quot;,&quot;navigationSessionId&quot;:&quot;fc7f8d76-acc7-4d26-a397-f0d7357e3ff2&quot;},&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;name&quot;:&quot;homeScreen&quot;,&quot;messageId&quot;:&quot;ajs-cc820b8b-c7d3-4d7b-94f5-ecdb9897efc5&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:34.604Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:32.063Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskAbort&quot;,&quot;attributes&quot;:{&quot;startTime&quot;:4788.200000000186,&quot;duration&quot;:37,&quot;activeDuration&quot;:37,&quot;adjustedDuration&quot;:36,&quot;reason&quot;:&quot;Aborted because the same experience was started with a new id&quot;,&quot;checkForTimeout&quot;:true,&quot;task&quot;:&quot;navigation/app-nav-global-navigation&quot;,&quot;taskId&quot;:&quot;52e5278f-6751-4585-9a9b-d4c8e784814a&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskAbort&quot;,&quot;messageId&quot;:&quot;ajs-83fd867d-012a-4d55-b372-9d932eb3fc4f&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:34.604Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:32.064Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskStart&quot;,&quot;attributes&quot;:{&quot;uuid&quot;:&quot;HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;isInitial&quot;:true,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:42,&quot;startTime&quot;:4825.5,&quot;timeout&quot;:30000,&quot;task&quot;:&quot;navigation/app-nav-global-navigation&quot;,&quot;taskId&quot;:&quot;e33bdfcf-2ede-43f5-9462-2e67838583ba&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskStart&quot;,&quot;messageId&quot;:&quot;ajs-37b0f66b-0229-4c55-b636-cb3292100c55&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:34.604Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:32.064Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskAbort&quot;,&quot;attributes&quot;:{&quot;startTime&quot;:4792.700000000186,&quot;duration&quot;:40,&quot;activeDuration&quot;:40,&quot;adjustedDuration&quot;:40,&quot;reason&quot;:&quot;Aborted because the same experience was started with a new id&quot;,&quot;checkForTimeout&quot;:true,&quot;task&quot;:&quot;extension_point_home_header&quot;,&quot;taskId&quot;:&quot;771abf08-faf4-4e3d-a780-3500ec684829&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskAbort&quot;,&quot;messageId&quot;:&quot;ajs-d6f43db1-6da1-471f-b400-7d63a9cdf8cc&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:34.604Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:32.065Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskStart&quot;,&quot;attributes&quot;:{&quot;uuid&quot;:&quot;HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;isInitial&quot;:true,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:48.799999999813735,&quot;startTime&quot;:4832.4000000003725,&quot;task&quot;:&quot;extension_point_home_header&quot;,&quot;taskId&quot;:&quot;ba7710b3-9b1e-4ef5-ab65-dca428be6db5&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskStart&quot;,&quot;messageId&quot;:&quot;ajs-7cb009f5-e53f-4664-9ab3-cad14834221c&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:34.604Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:32.065Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskAbort&quot;,&quot;attributes&quot;:{&quot;startTime&quot;:4792.9000000003725,&quot;duration&quot;:40,&quot;activeDuration&quot;:40,&quot;adjustedDuration&quot;:40,&quot;reason&quot;:&quot;Aborted because the same experience was started with a new id&quot;,&quot;checkForTimeout&quot;:true,&quot;task&quot;:&quot;extension_point_home_footer&quot;,&quot;taskId&quot;:&quot;6fbaf0b4-0d28-4b31-9179-0b2faedec452&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskAbort&quot;,&quot;messageId&quot;:&quot;ajs-64233bbe-cea0-415b-bc95-558d553f1acd&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:34.604Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:32.066Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskStart&quot;,&quot;attributes&quot;:{&quot;uuid&quot;:&quot;HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;isInitial&quot;:true,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:49,&quot;startTime&quot;:4832.600000000559,&quot;task&quot;:&quot;extension_point_home_footer&quot;,&quot;taskId&quot;:&quot;365ad1db-d114-4ddb-b7df-c70371cf8763&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskStart&quot;,&quot;messageId&quot;:&quot;ajs-151d6923-292f-4749-8a80-25bcd845ea26&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:34.604Z&quot;}],&quot;sentAt&quot;:&quot;2022-09-26T05:58:34.604Z&quot;,&quot;metadata&quot;:{&quot;resilienceMechanism&quot;:&quot;indexeddb&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/gasv3/api/v1/batch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-188" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;batch&quot;:[{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:32.070Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;homeScreen&quot;,&quot;actionSubject&quot;:&quot;overviewScreen&quot;,&quot;action&quot;:&quot;viewed&quot;,&quot;attributes&quot;:{&quot;navdexPointType&quot;:&quot;navigationSessionTouch&quot;,&quot;homeVersion&quot;:&quot;chicago&quot;,&quot;navigationSessionId&quot;:&quot;fc7f8d76-acc7-4d26-a397-f0d7357e3ff2&quot;},&quot;eventType&quot;:&quot;track&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;overviewScreen viewed&quot;,&quot;messageId&quot;:&quot;ajs-90232b68-479c-481e-af9c-25ae8e78665e&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:36.509Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:32.071Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;confluence-frontend&quot;,&quot;actionSubject&quot;:&quot;forceUpdateSPA&quot;,&quot;action&quot;:&quot;checked&quot;,&quot;attributes&quot;:{&quot;navigationStart&quot;:1664171905322,&quot;buildDate&quot;:1663854142232,&quot;forceUpdateTimestamp&quot;:0},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;forceUpdateSPA checked&quot;,&quot;messageId&quot;:&quot;ajs-64bc8314-dc81-4a52-a52b-96b64861e975&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:36.509Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:32.070Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;homeScreen&quot;,&quot;actionSubject&quot;:&quot;home&quot;,&quot;action&quot;:&quot;viewed&quot;,&quot;attributes&quot;:{&quot;homeVersion&quot;:&quot;chicago&quot;,&quot;navdexPointType&quot;:&quot;navigationSessionTouch&quot;,&quot;navigationSessionId&quot;:&quot;fc7f8d76-acc7-4d26-a397-f0d7357e3ff2&quot;},&quot;eventType&quot;:&quot;track&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;home viewed&quot;,&quot;messageId&quot;:&quot;ajs-8d1ad10e-a709-4abc-b07a-4d0b7fff5826&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:36.509Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:32.072Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;engagekit&quot;,&quot;actionSubject&quot;:&quot;messages&quot;,&quot;action&quot;:&quot;loaded&quot;,&quot;attributes&quot;:{&quot;locale&quot;:&quot;en-US&quot;},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;messages loaded&quot;,&quot;messageId&quot;:&quot;ajs-9c381561-780b-4bf3-9b8a-ff94c6c81024&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:36.509Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:32.072Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;confluence-frontend&quot;,&quot;actionSubject&quot;:&quot;forceUpdateSPA&quot;,&quot;action&quot;:&quot;checked&quot;,&quot;attributes&quot;:{&quot;navigationStart&quot;:1664171905322,&quot;buildDate&quot;:1663854142232,&quot;forceUpdateTimestamp&quot;:0},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;forceUpdateSPA checked&quot;,&quot;messageId&quot;:&quot;ajs-36775b05-74f5-4470-9a87-396643948b12&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:36.509Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:32.073Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskSuccess&quot;,&quot;attributes&quot;:{&quot;uuid&quot;:&quot;HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;isInitial&quot;:true,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:1868.5999999996275,&quot;startTime&quot;:4832.4000000003725,&quot;duration&quot;:1820,&quot;activeDuration&quot;:1820,&quot;adjustedDuration&quot;:1820,&quot;task&quot;:&quot;extension_point_home_header&quot;,&quot;taskId&quot;:&quot;ba7710b3-9b1e-4ef5-ab65-dca428be6db5&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskSuccess&quot;,&quot;messageId&quot;:&quot;ajs-32623124-dc02-404d-9299-7b340a72dba7&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:36.509Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:32.074Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskSuccess&quot;,&quot;attributes&quot;:{&quot;uuid&quot;:&quot;HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;isInitial&quot;:true,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:1906.0999999996275,&quot;startTime&quot;:4832.600000000559,&quot;duration&quot;:1857,&quot;activeDuration&quot;:1857,&quot;adjustedDuration&quot;:1857,&quot;task&quot;:&quot;extension_point_home_footer&quot;,&quot;taskId&quot;:&quot;365ad1db-d114-4ddb-b7df-c70371cf8763&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskSuccess&quot;,&quot;messageId&quot;:&quot;ajs-5111ff9f-c56f-4831-a5c9-b40f66027de2&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:36.509Z&quot;}],&quot;sentAt&quot;:&quot;2022-09-26T05:58:36.509Z&quot;,&quot;metadata&quot;:{&quot;resilienceMechanism&quot;:&quot;indexeddb&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/gasv3/api/v1/batch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-194" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">confluence-v1.prod.atl-paas.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/master/Wf1APsFCuK.svg</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-195" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">confluence-v1.prod.atl-paas.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/master/XsMLSfeCYY.svg</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-199" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/metal/ingest</stringProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">content-type</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-193" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/metal/ingest</stringProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">content-type</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-200" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/wiki/aa-avatar/${acc}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-192" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;batch&quot;:[{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:32.076Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;confluence-frontend&quot;,&quot;actionSubject&quot;:&quot;main-layout&quot;,&quot;action&quot;:&quot;done&quot;,&quot;actionSubjectId&quot;:&quot;&quot;,&quot;attributes&quot;:{&quot;featureFlags&quot;:{},&quot;duration&quot;:8.200000000186265},&quot;tags&quot;:[&quot;performance&quot;],&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;main-layout done&quot;,&quot;messageId&quot;:&quot;ajs-b53235dd-43ac-4e2f-8423-ad6035c77663&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:38.012Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:32.077Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;confluence-frontend&quot;,&quot;actionSubject&quot;:&quot;main-layout&quot;,&quot;action&quot;:&quot;done&quot;,&quot;actionSubjectId&quot;:&quot;&quot;,&quot;attributes&quot;:{&quot;featureFlags&quot;:{},&quot;duration&quot;:9},&quot;tags&quot;:[&quot;performance&quot;],&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;main-layout done&quot;,&quot;messageId&quot;:&quot;ajs-4997a018-ced4-46a5-97a9-b5812cccb628&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:38.012Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:37.463Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskStart&quot;,&quot;attributes&quot;:{&quot;uuid&quot;:&quot;HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;isInitial&quot;:true,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:7095.200000000186,&quot;startTime&quot;:11878.800000000745,&quot;task&quot;:&quot;home/overview&quot;,&quot;taskId&quot;:&quot;db5ac2b8-9b2d-4cb2-bad0-5ce34ca2212d&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskStart&quot;,&quot;messageId&quot;:&quot;ajs-cce03b09-5619-4289-91a5-948bfd168f1b&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:38.012Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:37.463Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskStart&quot;,&quot;attributes&quot;:{&quot;uuid&quot;:&quot;HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;isInitial&quot;:true,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:7095.399999999441,&quot;startTime&quot;:11879,&quot;timeout&quot;:20000,&quot;task&quot;:&quot;home/overview/recent&quot;,&quot;taskId&quot;:&quot;211e0a72-c259-457d-ae44-db15d89802e6&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskStart&quot;,&quot;messageId&quot;:&quot;ajs-939f94cb-8b35-4cf5-b30d-22a14499e53d&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:38.012Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:37.464Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskStart&quot;,&quot;attributes&quot;:{&quot;uuid&quot;:&quot;HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;isInitial&quot;:true,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:7168.700000000186,&quot;startTime&quot;:11952.200000000186,&quot;task&quot;:&quot;feed&quot;,&quot;taskId&quot;:&quot;857c967c-8612-4052-963e-e79ae7e56067&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskStart&quot;,&quot;messageId&quot;:&quot;ajs-4c187115-fb1d-48cd-bb69-4494f8347291&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:38.012Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:37.473Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;@atlaskit/feature-flag-client&quot;,&quot;actionSubject&quot;:&quot;feature&quot;,&quot;action&quot;:&quot;exposed&quot;,&quot;attributes&quot;:{&quot;flagKey&quot;:&quot;confluence.frontend.feed.recommendations-third-position&quot;,&quot;reason&quot;:&quot;RULE_MATCH&quot;,&quot;ruleId&quot;:&quot;eeb0c4be-0ba3-4b68-bee6-a90ac0efb818&quot;,&quot;value&quot;:true},&quot;tags&quot;:[&quot;optInExposure&quot;,&quot;measurement&quot;],&quot;highPriority&quot;:true,&quot;eventType&quot;:&quot;track&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;feature exposed&quot;,&quot;messageId&quot;:&quot;ajs-ac7c6eb0-37f7-45f7-b6dc-e0d2e38dd260&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:38.012Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:37.480Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskStart&quot;,&quot;attributes&quot;:{&quot;homeVersion&quot;:&quot;chicago&quot;,&quot;uuid&quot;:&quot;HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;isInitial&quot;:true,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:7224.5,&quot;startTime&quot;:12008.100000000559,&quot;task&quot;:&quot;home/right-panel&quot;,&quot;taskId&quot;:&quot;fab65f01-fcfc-457b-91e3-3225ba597028&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskStart&quot;,&quot;messageId&quot;:&quot;ajs-b88c3f1e-08e0-4f23-90ae-8132ad50a758&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:38.012Z&quot;}],&quot;sentAt&quot;:&quot;2022-09-26T05:58:38.012Z&quot;,&quot;metadata&quot;:{&quot;eventCount&quot;:20,&quot;resilienceMechanism&quot;:&quot;indexeddb&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/gasv3/api/v1/batch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-198" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">version</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="modificationDate" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">modificationDate</stringProp>
                  <stringProp name="Argument.value">1640852243185</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="cacheVersion" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cacheVersion</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">v2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/wiki/download/attachments/33185/PN-default</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-209" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;operationName&quot;:&quot;FrontendResourceRenderQuery&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query FrontendResourceRenderQuery {\n  internalFrontendResource {\n    resourceList {\n      type\n      url\n      attributes {\n        key\n        value\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cgraphql?q=FrontendResourceRenderQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/wiki/home?cloudId=f21b70d0-8bad-458e-9a03-d1d9544e0e8c</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-APOLLO-OPERATION-NAME" elementType="Header">
                  <stringProp name="Header.name">X-APOLLO-OPERATION-NAME</stringProp>
                  <stringProp name="Header.value">FrontendResourceRenderQuery</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-212" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;batch&quot;:[{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:37.486Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskStart&quot;,&quot;attributes&quot;:{&quot;uuid&quot;:&quot;HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;isInitial&quot;:true,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:7225,&quot;startTime&quot;:12008.600000000559,&quot;task&quot;:&quot;home/right-panel/spaces&quot;,&quot;taskId&quot;:&quot;3da7217c-a8f5-4493-b61d-ca16d44f290d&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskStart&quot;,&quot;messageId&quot;:&quot;ajs-7290b336-63a7-40e5-9a90-f15a6fc9afb0&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:39.517Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:37.487Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskStart&quot;,&quot;attributes&quot;:{&quot;uuid&quot;:&quot;HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;isInitial&quot;:true,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:7225.200000000186,&quot;startTime&quot;:12008.800000000745,&quot;task&quot;:&quot;home/right-panel/welcome-message&quot;,&quot;taskId&quot;:&quot;c837736f-da6a-488e-903d-b15d7e8c470f&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskStart&quot;,&quot;messageId&quot;:&quot;ajs-423737bb-f273-46d6-948e-4a32fa4117f7&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:39.517Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:37.487Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskStart&quot;,&quot;attributes&quot;:{&quot;uuid&quot;:&quot;HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;isInitial&quot;:true,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:7230.5999999996275,&quot;startTime&quot;:12014.200000000186,&quot;task&quot;:&quot;home/right-panel/apps&quot;,&quot;taskId&quot;:&quot;a7b91472-b1d9-4b4b-b4a5-b6e412a46d35&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskStart&quot;,&quot;messageId&quot;:&quot;ajs-f6db4fed-db06-491b-91d6-3c98a5e2db2d&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:39.517Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:37.488Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskSuccess&quot;,&quot;attributes&quot;:{&quot;uuid&quot;:&quot;HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;isInitial&quot;:true,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:7236.200000000186,&quot;startTime&quot;:11879,&quot;duration&quot;:141,&quot;activeDuration&quot;:141,&quot;adjustedDuration&quot;:141,&quot;task&quot;:&quot;home/overview/recent&quot;,&quot;taskId&quot;:&quot;211e0a72-c259-457d-ae44-db15d89802e6&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskSuccess&quot;,&quot;messageId&quot;:&quot;ajs-539b4374-c1d0-4e6a-9b0b-00a19dcbb7eb&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:39.517Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:37.489Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskSuccess&quot;,&quot;attributes&quot;:{&quot;feedType&quot;:&quot;following&quot;,&quot;uuid&quot;:&quot;HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;isInitial&quot;:true,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:7237.700000000186,&quot;startTime&quot;:11952.200000000186,&quot;duration&quot;:69,&quot;activeDuration&quot;:69,&quot;adjustedDuration&quot;:69,&quot;task&quot;:&quot;feed&quot;,&quot;taskId&quot;:&quot;857c967c-8612-4052-963e-e79ae7e56067&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskSuccess&quot;,&quot;messageId&quot;:&quot;ajs-58257e2c-5ef1-4fc1-93b6-47de4702b05d&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:39.517Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:37.490Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;homeScreen&quot;,&quot;actionSubject&quot;:&quot;feed&quot;,&quot;action&quot;:&quot;rendered&quot;,&quot;actionSubjectId&quot;:&quot;feedAlpha&quot;,&quot;attributes&quot;:{&quot;feedType&quot;:&quot;following&quot;,&quot;resultCount&quot;:0,&quot;spacesFollowing&quot;:1,&quot;peopleFollowing&quot;:0,&quot;navdexPointType&quot;:&quot;navigationSessionTouch&quot;,&quot;homeVersion&quot;:&quot;chicago&quot;,&quot;navigationSessionId&quot;:&quot;fc7f8d76-acc7-4d26-a397-f0d7357e3ff2&quot;},&quot;eventType&quot;:&quot;track&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;feed rendered&quot;,&quot;messageId&quot;:&quot;ajs-93b785f1-08ce-4dd2-9631-623ac0f694d3&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:39.517Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:37.491Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskSuccess&quot;,&quot;attributes&quot;:{&quot;uuid&quot;:&quot;HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;isInitial&quot;:true,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:7252.5999999996275,&quot;startTime&quot;:12014.200000000186,&quot;duration&quot;:22,&quot;activeDuration&quot;:22,&quot;adjustedDuration&quot;:22,&quot;task&quot;:&quot;home/right-panel/apps&quot;,&quot;taskId&quot;:&quot;a7b91472-b1d9-4b4b-b4a5-b6e412a46d35&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskSuccess&quot;,&quot;messageId&quot;:&quot;ajs-52b5d8cc-24ca-4564-9c7a-eca781e9be17&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:39.517Z&quot;}],&quot;sentAt&quot;:&quot;2022-09-26T05:58:39.517Z&quot;,&quot;metadata&quot;:{&quot;eventCount&quot;:2,&quot;resilienceMechanism&quot;:&quot;indexeddb&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/gasv3/api/v1/batch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-210" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;type&quot;:&quot;metric&quot;,&quot;meta&quot;:{&quot;synthetic&quot;:&quot;false&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;env&quot;:&quot;prod&quot;,&quot;os&quot;:&quot;windows&quot;,&quot;platform&quot;:&quot;desktop&quot;,&quot;browser&quot;:&quot;chrome&quot;},&quot;metalId&quot;:&quot;88dcca98-e854-4063-954c-eabe3aeb25d2&quot;,&quot;data&quot;:[{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.first_meaningful_paint&quot;,&quot;tags&quot;:[&quot;active_tab:true&quot;,&quot;initial_load:true&quot;,&quot;page:confluence-home&quot;,&quot;gsd_histogram:1000_2000_2500_3000_4000_5000&quot;],&quot;value&quot;:12483,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;fe.perf.first_meaningful_paint.slo&quot;,&quot;tags&quot;:[&quot;active_tab:true&quot;,&quot;initial_load:true&quot;,&quot;page:confluence-home&quot;,&quot;success:false&quot;],&quot;value&quot;:1,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.time_to_interactive&quot;,&quot;tags&quot;:[&quot;active_tab:true&quot;,&quot;initial_load:true&quot;,&quot;page:confluence-home&quot;,&quot;gsd_histogram:2000_2500_3000_3500_4000_5000_6000&quot;],&quot;value&quot;:12483,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;fe.perf.time_to_interactive.slo&quot;,&quot;tags&quot;:[&quot;active_tab:true&quot;,&quot;initial_load:true&quot;,&quot;page:confluence-home&quot;,&quot;success:false&quot;],&quot;value&quot;:1,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.first_meaningful_paint&quot;,&quot;tags&quot;:[&quot;active_tab:true&quot;,&quot;initial_load:true&quot;,&quot;page:segment-home-overview-right-panel&quot;,&quot;gsd_histogram:1000_2000_2500_3000_4000_5000&quot;],&quot;value&quot;:12623,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.time_to_interactive&quot;,&quot;tags&quot;:[&quot;active_tab:true&quot;,&quot;initial_load:true&quot;,&quot;page:segment-home-overview-right-panel&quot;,&quot;gsd_histogram:2000_2500_3000_3500_4000_5000_6000&quot;],&quot;value&quot;:12623,&quot;sampleRate&quot;:1}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/metal/ingest</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-211" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;type&quot;:&quot;metric&quot;,&quot;meta&quot;:{&quot;synthetic&quot;:&quot;false&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;env&quot;:&quot;prod&quot;,&quot;os&quot;:&quot;windows&quot;,&quot;platform&quot;:&quot;desktop&quot;,&quot;browser&quot;:&quot;chrome&quot;},&quot;metalId&quot;:&quot;88dcca98-e854-4063-954c-eabe3aeb25d2&quot;,&quot;data&quot;:[{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.first_meaningful_paint&quot;,&quot;tags&quot;:[&quot;active_tab:true&quot;,&quot;initial_load:true&quot;,&quot;page:segment-home-overview-recent&quot;,&quot;gsd_histogram:1000_2000_2500_3000_4000_5000&quot;],&quot;value&quot;:12021,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.time_to_interactive&quot;,&quot;tags&quot;:[&quot;active_tab:true&quot;,&quot;initial_load:true&quot;,&quot;page:segment-home-overview-recent&quot;,&quot;gsd_histogram:2000_2500_3000_3500_4000_5000_6000&quot;],&quot;value&quot;:12021,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.first_meaningful_paint&quot;,&quot;tags&quot;:[&quot;active_tab:true&quot;,&quot;initial_load:true&quot;,&quot;page:segment-home-overview-feed&quot;,&quot;gsd_histogram:1000_2000_2500_3000_4000_5000&quot;],&quot;value&quot;:12022,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.time_to_interactive&quot;,&quot;tags&quot;:[&quot;active_tab:true&quot;,&quot;initial_load:true&quot;,&quot;page:segment-home-overview-feed&quot;,&quot;gsd_histogram:2000_2500_3000_3500_4000_5000_6000&quot;],&quot;value&quot;:12022,&quot;sampleRate&quot;:1}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/metal/ingest</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-213" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;batch&quot;:[{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:37.490Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskSuccess&quot;,&quot;attributes&quot;:{&quot;uuid&quot;:&quot;HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;isInitial&quot;:true,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:7252,&quot;startTime&quot;:12008.800000000745,&quot;duration&quot;:27,&quot;activeDuration&quot;:27,&quot;adjustedDuration&quot;:27,&quot;task&quot;:&quot;home/right-panel/welcome-message&quot;,&quot;taskId&quot;:&quot;c837736f-da6a-488e-903d-b15d7e8c470f&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskSuccess&quot;,&quot;messageId&quot;:&quot;ajs-1eb25eb8-5407-4fab-a67e-b78b04d04b14&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:40.115Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:37.736Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskSuccess&quot;,&quot;attributes&quot;:{&quot;uuid&quot;:&quot;HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;isInitial&quot;:true,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:7518,&quot;startTime&quot;:12008.600000000559,&quot;duration&quot;:293,&quot;activeDuration&quot;:293,&quot;adjustedDuration&quot;:293,&quot;task&quot;:&quot;home/right-panel/spaces&quot;,&quot;taskId&quot;:&quot;3da7217c-a8f5-4493-b61d-ca16d44f290d&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskSuccess&quot;,&quot;messageId&quot;:&quot;ajs-6bbb0097-35ea-4872-b64c-fc6e59933844&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:40.115Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:37.743Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskSuccess&quot;,&quot;attributes&quot;:{&quot;homeVersion&quot;:&quot;chicago&quot;,&quot;uuid&quot;:&quot;HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;isInitial&quot;:true,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:7518.200000000186,&quot;startTime&quot;:12008.100000000559,&quot;duration&quot;:294,&quot;activeDuration&quot;:294,&quot;adjustedDuration&quot;:294,&quot;task&quot;:&quot;home/right-panel&quot;,&quot;taskId&quot;:&quot;fab65f01-fcfc-457b-91e3-3225ba597028&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskSuccess&quot;,&quot;messageId&quot;:&quot;ajs-dad32625-9ea0-41ca-850f-d1e7789a70aa&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:40.115Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:37.745Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskSuccess&quot;,&quot;attributes&quot;:{&quot;uuid&quot;:&quot;HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;isInitial&quot;:true,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:7518.399999999441,&quot;startTime&quot;:11878.800000000745,&quot;duration&quot;:423,&quot;activeDuration&quot;:423,&quot;adjustedDuration&quot;:423,&quot;task&quot;:&quot;home/overview&quot;,&quot;taskId&quot;:&quot;db5ac2b8-9b2d-4cb2-bad0-5ce34ca2212d&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskSuccess&quot;,&quot;messageId&quot;:&quot;ajs-de9f9c84-0d34-48f1-871c-740f67ba3288&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:40.115Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:37.746Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskSuccess&quot;,&quot;attributes&quot;:{&quot;homeVersion&quot;:&quot;chicago&quot;,&quot;uuid&quot;:&quot;HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;isInitial&quot;:true,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:7518.5,&quot;startTime&quot;:4783.9000000003725,&quot;duration&quot;:7518,&quot;activeDuration&quot;:7518,&quot;adjustedDuration&quot;:7518,&quot;task&quot;:&quot;home&quot;,&quot;taskId&quot;:&quot;36a5ab3b-6efb-4b1b-82b4-2434f8af121b&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskSuccess&quot;,&quot;messageId&quot;:&quot;ajs-7137191a-ff99-4f7c-aff8-baa19b1c6fb2&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:40.115Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:37.780Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;performance&quot;,&quot;actionSubject&quot;:&quot;performance&quot;,&quot;action&quot;:&quot;measured&quot;,&quot;attributes&quot;:{&quot;task&quot;:&quot;confluence.fe.page-segment-load.home-overview-recent&quot;,&quot;properties&quot;:{&quot;event:key&quot;:&quot;confluence.fe.page-segment-load.home-overview-recent&quot;,&quot;event:type&quot;:&quot;page-segment-load&quot;,&quot;event:product&quot;:&quot;confluence&quot;,&quot;event:route&quot;:&quot;HOME&quot;,&quot;event:id&quot;:&quot;home-overview-recent&quot;,&quot;event:localHour&quot;:11,&quot;event:localDayOfWeek&quot;:1,&quot;event:region&quot;:&quot;confluence-prod-ap-8-3.prod.atl-paas.net&quot;,&quot;app:framework:name&quot;:&quot;react&quot;,&quot;app:framework:version&quot;:&quot;16.14.0&quot;,&quot;app:web:version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;bm:version&quot;:3,&quot;telemetry:browser:name&quot;:&quot;Chrome&quot;,&quot;telemetry:browser:version&quot;:&quot;105.0.0.0&quot;,&quot;telemetry:cpus&quot;:3,&quot;telemetry:memory&quot;:8,&quot;telemetry:network:effectiveType&quot;:&quot;4g&quot;,&quot;telemetry:network:rtt&quot;:200,&quot;telemetry:network:downlink&quot;:3.3,&quot;custom:pageLoadInfo&quot;:{&quot;uuid&quot;:&quot;HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;isInitial&quot;:true,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:7236.5},&quot;featureFlags&quot;:{&quot;confluence.frontend.pollinator.synthetic.check.tenants&quot;:false,&quot;confluence.frontend.delay.comment.button&quot;:true,&quot;confluence.frontend.delay.page.comments.render&quot;:&quot;delay-render&quot;,&quot;confluence.frontend.enable.external.collab&quot;:false,&quot;confluence.frontend.eop.recommendations.rollout&quot;:&quot;on&quot;,&quot;confluence.frontend.focused.inline.comment.performance&quot;:&quot;variation&quot;,&quot;confluence.frontend.live-search&quot;:true,&quot;confluence.frontend.presentation.mode&quot;:true,&quot;confluence.ssr.fabric.macros&quot;:null,&quot;confluence.ssr.page-tree&quot;:null,&quot;confluence.ssr.page-tree.best.effort&quot;:null,&quot;confluence.ssr.read-time&quot;:null,&quot;confluence.ssr.page-statuses&quot;:null,&quot;confluence.ssr.home.feed.best-effort&quot;:null,&quot;confluence.ssr.shortcuts&quot;:null,&quot;confluence.ssr.shortcuts.link-filter&quot;:null,&quot;confluence.ssr.smartlinks&quot;:null,&quot;confluence.ssr.page-share-and-perms-button&quot;:null,&quot;confluence.frontend.page-share-and-permissions&quot;:false,&quot;confluence.frontend.economy-growth.discover-apps-in-sidebar.experiment&quot;:false,&quot;confluence.frontend.top.level.body.content.query&quot;:false,&quot;confluence.ssr.integrating.public.links.to.nsd&quot;:null,&quot;confluence.frontend.integrating.public.links.to.nsd&quot;:false,&quot;confluence.frontend.fabric.editor.macro.adf.frontend.render&quot;:false,&quot;confluence.frontend.bandana.client.short.socket.timeout&quot;:&quot;50.0&quot;},&quot;hostname&quot;:&quot;thinktimetechnology.atlassian.net&quot;,&quot;confluence:cloudId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;confluence:environment&quot;:&quot;PRODUCTION&quot;,&quot;confluence:shard&quot;:&quot;confluence-prod-ap-8-3.prod.atl-paas.net&quot;,&quot;confluence:ssr&quot;:&quot;false&quot;,&quot;confluence:uniqueIdentifier&quot;:&quot;undefined&quot;,&quot;confluence:initial&quot;:true,&quot;confluence:criticalAssets&quot;:{&quot;cachedRate&quot;:0,&quot;count&quot;:60,&quot;size&quot;:3367694,&quot;cachedSize&quot;:0,&quot;nonCachedSize&quot;:3367694,&quot;sizeBasedCachedRate&quot;:0},&quot;timings:resource&quot;:{&quot;query-preloader.js&quot;:{&quot;startTime&quot;:1555,&quot;duration&quot;:1448,&quot;workerStart&quot;:0,&quot;fetchStart&quot;:1555,&quot;type&quot;:&quot;script&quot;},&quot;unknown&quot;:{&quot;startTime&quot;:1557,&quot;duration&quot;:1445,&quot;workerStart&quot;:0,&quot;fetchStart&quot;:1557,&quot;type&quot;:&quot;script&quot;},&quot;cgraphql&quot;:{&quot;startTime&quot;:3076,&quot;duration&quot;:320,&quot;workerStart&quot;:0,&quot;fetchStart&quot;:3076,&quot;type&quot;:&quot;fetch&quot;,&quot;ttfb&quot;:3395,&quot;size&quot;:44167},&quot;in-product-messages&quot;:{&quot;startTime&quot;:4343,&quot;duration&quot;:672,&quot;workerStart&quot;:0,&quot;fetchStart&quot;:4343,&quot;type&quot;:&quot;fetch&quot;,&quot;ttfb&quot;:5014,&quot;size&quot;:2127},&quot;force-update.json&quot;:{&quot;startTime&quot;:4683,&quot;duration&quot;:750,&quot;workerStart&quot;:0,&quot;fetchStart&quot;:4683,&quot;type&quot;:&quot;fetch&quot;,&quot;ttfb&quot;:0,&quot;size&quot;:0}},&quot;metric:fmp&quot;:12021,&quot;metric:tti&quot;:12021,&quot;metric:fmp:histogramBuckets&quot;:&quot;1000_2000_2500_3000_4000_5000&quot;,&quot;metric:tti:histogramBuckets&quot;:&quot;2000_2500_3000_3500_4000_5000_6000&quot;,&quot;pageVisible:state&quot;:&quot;visible&quot;,&quot;pageVisible:value&quot;:true,&quot;event:initial&quot;:true,&quot;timings:bundleEval&quot;:{&quot;SiteHomepageRedirectLoader(0)&quot;:{&quot;startTime&quot;:3921,&quot;duration&quot;:599},&quot;GoToHomeLoader(0)&quot;:{&quot;startTime&quot;:3919,&quot;duration&quot;:624},&quot;MainLayout(0)&quot;:{&quot;startTime&quot;:4492,&quot;duration&quot;:258},&quot;LazyHome1Point5(0)&quot;:{&quot;startTime&quot;:4817,&quot;duration&quot;:209},&quot;Overview(0)&quot;:{&quot;startTime&quot;:5204,&quot;duration&quot;:6673},&quot;LazySpaces(0)&quot;:{&quot;startTime&quot;:12019,&quot;duration&quot;:148}}}},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;performance measured&quot;,&quot;messageId&quot;:&quot;ajs-fa543983-955f-49ef-9172-4c4289e29f99&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:40.115Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:37.783Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;performance&quot;,&quot;actionSubject&quot;:&quot;performance&quot;,&quot;action&quot;:&quot;measured&quot;,&quot;attributes&quot;:{&quot;task&quot;:&quot;confluence.fe.page-segment-load.home-overview-feed&quot;,&quot;properties&quot;:{&quot;event:key&quot;:&quot;confluence.fe.page-segment-load.home-overview-feed&quot;,&quot;event:type&quot;:&quot;page-segment-load&quot;,&quot;event:product&quot;:&quot;confluence&quot;,&quot;event:route&quot;:&quot;HOME&quot;,&quot;event:id&quot;:&quot;home-overview-feed&quot;,&quot;event:localHour&quot;:11,&quot;event:localDayOfWeek&quot;:1,&quot;event:region&quot;:&quot;confluence-prod-ap-8-3.prod.atl-paas.net&quot;,&quot;app:framework:name&quot;:&quot;react&quot;,&quot;app:framework:version&quot;:&quot;16.14.0&quot;,&quot;app:web:version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;bm:version&quot;:3,&quot;telemetry:browser:name&quot;:&quot;Chrome&quot;,&quot;telemetry:browser:version&quot;:&quot;105.0.0.0&quot;,&quot;telemetry:cpus&quot;:3,&quot;telemetry:memory&quot;:8,&quot;telemetry:network:effectiveType&quot;:&quot;4g&quot;,&quot;telemetry:network:rtt&quot;:200,&quot;telemetry:network:downlink&quot;:3.3,&quot;custom:pageLoadInfo&quot;:{&quot;uuid&quot;:&quot;HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;isInitial&quot;:true,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:7237.799999999814},&quot;featureFlags&quot;:{&quot;confluence.frontend.pollinator.synthetic.check.tenants&quot;:false,&quot;confluence.frontend.delay.comment.button&quot;:true,&quot;confluence.frontend.delay.page.comments.render&quot;:&quot;delay-render&quot;,&quot;confluence.frontend.enable.external.collab&quot;:false,&quot;confluence.frontend.eop.recommendations.rollout&quot;:&quot;on&quot;,&quot;confluence.frontend.focused.inline.comment.performance&quot;:&quot;variation&quot;,&quot;confluence.frontend.live-search&quot;:true,&quot;confluence.frontend.presentation.mode&quot;:true,&quot;confluence.ssr.fabric.macros&quot;:null,&quot;confluence.ssr.page-tree&quot;:null,&quot;confluence.ssr.page-tree.best.effort&quot;:null,&quot;confluence.ssr.read-time&quot;:null,&quot;confluence.ssr.page-statuses&quot;:null,&quot;confluence.ssr.home.feed.best-effort&quot;:null,&quot;confluence.ssr.shortcuts&quot;:null,&quot;confluence.ssr.shortcuts.link-filter&quot;:null,&quot;confluence.ssr.smartlinks&quot;:null,&quot;confluence.ssr.page-share-and-perms-button&quot;:null,&quot;confluence.frontend.page-share-and-permissions&quot;:false,&quot;confluence.frontend.economy-growth.discover-apps-in-sidebar.experiment&quot;:false,&quot;confluence.frontend.top.level.body.content.query&quot;:false,&quot;confluence.ssr.integrating.public.links.to.nsd&quot;:null,&quot;confluence.frontend.integrating.public.links.to.nsd&quot;:false,&quot;confluence.frontend.fabric.editor.macro.adf.frontend.render&quot;:false,&quot;confluence.frontend.bandana.client.short.socket.timeout&quot;:&quot;50.0&quot;},&quot;hostname&quot;:&quot;thinktimetechnology.atlassian.net&quot;,&quot;confluence:cloudId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;confluence:environment&quot;:&quot;PRODUCTION&quot;,&quot;confluence:shard&quot;:&quot;confluence-prod-ap-8-3.prod.atl-paas.net&quot;,&quot;confluence:ssr&quot;:&quot;false&quot;,&quot;confluence:uniqueIdentifier&quot;:&quot;undefined&quot;,&quot;confluence:initial&quot;:true,&quot;confluence:criticalAssets&quot;:{&quot;cachedRate&quot;:0,&quot;count&quot;:60,&quot;size&quot;:3367694,&quot;cachedSize&quot;:0,&quot;nonCachedSize&quot;:3367694,&quot;sizeBasedCachedRate&quot;:0},&quot;timings:resource&quot;:{&quot;query-preloader.js&quot;:{&quot;startTime&quot;:1555,&quot;duration&quot;:1448,&quot;workerStart&quot;:0,&quot;fetchStart&quot;:1555,&quot;type&quot;:&quot;script&quot;},&quot;unknown&quot;:{&quot;startTime&quot;:1557,&quot;duration&quot;:1445,&quot;workerStart&quot;:0,&quot;fetchStart&quot;:1557,&quot;type&quot;:&quot;script&quot;},&quot;cgraphql&quot;:{&quot;startTime&quot;:3076,&quot;duration&quot;:320,&quot;workerStart&quot;:0,&quot;fetchStart&quot;:3076,&quot;type&quot;:&quot;fetch&quot;,&quot;ttfb&quot;:3395,&quot;size&quot;:44167},&quot;in-product-messages&quot;:{&quot;startTime&quot;:4343,&quot;duration&quot;:672,&quot;workerStart&quot;:0,&quot;fetchStart&quot;:4343,&quot;type&quot;:&quot;fetch&quot;,&quot;ttfb&quot;:5014,&quot;size&quot;:2127},&quot;force-update.json&quot;:{&quot;startTime&quot;:4683,&quot;duration&quot;:750,&quot;workerStart&quot;:0,&quot;fetchStart&quot;:4683,&quot;type&quot;:&quot;fetch&quot;,&quot;ttfb&quot;:0,&quot;size&quot;:0}},&quot;metric:fmp&quot;:12022,&quot;metric:tti&quot;:12022,&quot;metric:fmp:histogramBuckets&quot;:&quot;1000_2000_2500_3000_4000_5000&quot;,&quot;metric:tti:histogramBuckets&quot;:&quot;2000_2500_3000_3500_4000_5000_6000&quot;,&quot;pageVisible:state&quot;:&quot;visible&quot;,&quot;pageVisible:value&quot;:true,&quot;event:initial&quot;:true,&quot;timings:bundleEval&quot;:{&quot;SiteHomepageRedirectLoader(0)&quot;:{&quot;startTime&quot;:3921,&quot;duration&quot;:599},&quot;GoToHomeLoader(0)&quot;:{&quot;startTime&quot;:3919,&quot;duration&quot;:624},&quot;MainLayout(0)&quot;:{&quot;startTime&quot;:4492,&quot;duration&quot;:258},&quot;LazyHome1Point5(0)&quot;:{&quot;startTime&quot;:4817,&quot;duration&quot;:209},&quot;Overview(0)&quot;:{&quot;startTime&quot;:5204,&quot;duration&quot;:6673},&quot;LazySpaces(0)&quot;:{&quot;startTime&quot;:12019,&quot;duration&quot;:148}}}},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;performance measured&quot;,&quot;messageId&quot;:&quot;ajs-f6b69582-4da1-4001-a579-c45ff64d0813&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:40.115Z&quot;}],&quot;sentAt&quot;:&quot;2022-09-26T05:58:40.115Z&quot;,&quot;metadata&quot;:{&quot;resilienceMechanism&quot;:&quot;indexeddb&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/gasv3/api/v1/batch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-215" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">token</stringProp>
                  <stringProp name="Argument.value">eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiI5MTA1ZWY0My01MGY3LTQ1ODUtYmVlNC0zNzFjOTI1NzBhZDIiLCJhY2Nlc3MiOnsidXJuOmZpbGVzdG9yZTpmaWxlOjU3ZWVjMDQzLTczZTEtNDliMC04MGEyLWFlZWZkNGVmNzQzOSI6WyJyZWFkIl19LCJleHAiOjE2NjQyNTQ4MzksIm5iZiI6MTY2NDE3MTkxOX0.oThieJEbLqBXGwbYrr-k3CuUSYL9yPDZzfjUd-8PlSo</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="client" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client</stringProp>
                  <stringProp name="Argument.value">9105ef43-50f7-4585-bee4-371c92570ad2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">name</stringProp>
                  <stringProp name="Argument.value">PN-default</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="max-age" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">max-age</stringProp>
                  <stringProp name="Argument.value">2940</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.media.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/file/57eec043-73e1-49b0-80a2-aeefd4ef7439/binary</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-214" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;type&quot;:&quot;metric&quot;,&quot;meta&quot;:{&quot;globalTags&quot;:[&quot;page:HOME&quot;,&quot;cloudId:f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;shard:confluence-prod-ap-8-3.prod.atl-paas.net&quot;,&quot;product:confluence&quot;,&quot;version:CLASSIC-master-12091&quot;,&quot;track:prod&quot;]},&quot;data&quot;:[{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:navigation/app-nav-global-navigation&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskStart&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:true&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:4.599999999627471&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:30.110Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:extension_point_home_header&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskStart&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:true&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:9.099999999627471&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:30.114Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:extension_point_home_footer&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskStart&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:true&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:9.299999999813735&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:30.114Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:navigation/app-nav-global-navigation&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskAbort&quot;,&quot;isActiveTab:true&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:30.147Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:navigation/app-nav-global-navigation&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskStart&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:true&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:42&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:30.147Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:extension_point_home_header&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskAbort&quot;,&quot;isActiveTab:true&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:30.154Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:extension_point_home_header&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskStart&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:true&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:48.799999999813735&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:30.154Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:extension_point_home_footer&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskAbort&quot;,&quot;isActiveTab:true&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:30.154Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:extension_point_home_footer&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskStart&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:true&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:49&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:30.154Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:extension_point_home_header&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskSuccess&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:true&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:1868.5999999996275&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:31.974Z&quot;},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;experience-tracker:extension_point_home_header.performance&quot;,&quot;value&quot;:1820,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskSuccess&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:true&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:1868.5999999996275&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:31.974Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:extension_point_home_footer&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskSuccess&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:true&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:1906.0999999996275&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:32.011Z&quot;},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;experience-tracker:extension_point_home_footer.performance&quot;,&quot;value&quot;:1857,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskSuccess&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:true&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:1906.0999999996275&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:32.011Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:home/overview&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskStart&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:true&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:7095.200000000186&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:37.200Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:home/overview/recent&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskStart&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:true&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:7095.399999999441&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:37.201Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:feed&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskStart&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:true&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:7168.700000000186&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:37.274Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:home/right-panel&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskStart&quot;,&quot;isActiveTab:true&quot;,&quot;homeVersion:chicago&quot;,&quot;uuid:HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:true&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:7224.5&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:37.330Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:home/right-panel/spaces&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskStart&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:true&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:7225&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:37.330Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:home/right-panel/welcome-message&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskStart&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:true&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:7225.200000000186&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:37.330Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:home/right-panel/apps&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskStart&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:true&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:7230.5999999996275&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:37.336Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:home/overview/recent&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskSuccess&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:true&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:7236.200000000186&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:37.341Z&quot;},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;experience-tracker:home/overview/recent.performance&quot;,&quot;value&quot;:141,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskSuccess&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:true&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:7236.200000000186&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:37.341Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:feed&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskSuccess&quot;,&quot;isActiveTab:true&quot;,&quot;feedType:following&quot;,&quot;uuid:HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:true&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:7237.700000000186&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:37.343Z&quot;},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;experience-tracker:feed.performance&quot;,&quot;value&quot;:69,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskSuccess&quot;,&quot;isActiveTab:true&quot;,&quot;feedType:following&quot;,&quot;uuid:HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:true&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:7237.700000000186&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:37.343Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:home/right-panel/welcome-message&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskSuccess&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:true&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:7252&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:37.357Z&quot;},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;experience-tracker:home/right-panel/welcome-message.performance&quot;,&quot;value&quot;:27,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskSuccess&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:true&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:7252&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:37.357Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:home/right-panel/apps&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskSuccess&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:true&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:7252.5999999996275&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:37.358Z&quot;},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;experience-tracker:home/right-panel/apps.performance&quot;,&quot;value&quot;:22,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskSuccess&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:true&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:7252.5999999996275&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:37.358Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:home/right-panel/spaces&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskSuccess&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:true&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:7518&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:37.623Z&quot;},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;experience-tracker:home/right-panel/spaces.performance&quot;,&quot;value&quot;:293,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskSuccess&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:true&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:7518&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:37.623Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:home/right-panel&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskSuccess&quot;,&quot;isActiveTab:true&quot;,&quot;homeVersion:chicago&quot;,&quot;uuid:HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:true&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:7518.200000000186&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:37.623Z&quot;},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;experience-tracker:home/right-panel.performance&quot;,&quot;value&quot;:294,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskSuccess&quot;,&quot;isActiveTab:true&quot;,&quot;homeVersion:chicago&quot;,&quot;uuid:HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:true&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:7518.200000000186&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:37.623Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:home/overview&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskSuccess&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:true&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:7518.399999999441&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:37.624Z&quot;},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;experience-tracker:home/overview.performance&quot;,&quot;value&quot;:423,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskSuccess&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:true&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:7518.399999999441&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:37.624Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:home&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskSuccess&quot;,&quot;isActiveTab:true&quot;,&quot;homeVersion:chicago&quot;,&quot;uuid:HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:true&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:7518.5&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:37.624Z&quot;},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;experience-tracker:home.performance&quot;,&quot;value&quot;:7518,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskSuccess&quot;,&quot;isActiveTab:true&quot;,&quot;homeVersion:chicago&quot;,&quot;uuid:HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:true&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:7518.5&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:37.624Z&quot;}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/telemetry</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-217" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;batch&quot;:[{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:37.787Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;home&quot;,&quot;actionSubject&quot;:&quot;home-v1.5&quot;,&quot;action&quot;:&quot;dwelled&quot;,&quot;attributes&quot;:{&quot;dwellTime&quot;:5711,&quot;finalDwellEvent&quot;:false,&quot;homeVersion&quot;:&quot;chicago&quot;},&quot;eventType&quot;:&quot;track&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;home-v1.5 dwelled&quot;,&quot;messageId&quot;:&quot;ajs-30934ba3-7c0e-40a6-b512-cf2389fbacc0&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:41.786Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:37.942Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;performance&quot;,&quot;actionSubject&quot;:&quot;performance&quot;,&quot;action&quot;:&quot;measured&quot;,&quot;attributes&quot;:{&quot;task&quot;:&quot;confluence.fe.page-load.confluence-home&quot;,&quot;properties&quot;:{&quot;event:key&quot;:&quot;confluence.fe.page-load.confluence-home&quot;,&quot;event:type&quot;:&quot;page-load&quot;,&quot;event:product&quot;:&quot;confluence&quot;,&quot;event:route&quot;:&quot;HOME&quot;,&quot;event:id&quot;:&quot;confluence-home&quot;,&quot;event:localHour&quot;:11,&quot;event:localDayOfWeek&quot;:1,&quot;event:region&quot;:&quot;confluence-prod-ap-8-3.prod.atl-paas.net&quot;,&quot;app:framework:name&quot;:&quot;react&quot;,&quot;app:framework:version&quot;:&quot;16.14.0&quot;,&quot;app:web:version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;bm:version&quot;:3,&quot;telemetry:browser:name&quot;:&quot;Chrome&quot;,&quot;telemetry:browser:version&quot;:&quot;105.0.0.0&quot;,&quot;telemetry:cpus&quot;:3,&quot;telemetry:memory&quot;:8,&quot;telemetry:network:effectiveType&quot;:&quot;4g&quot;,&quot;telemetry:network:rtt&quot;:200,&quot;telemetry:network:downlink&quot;:3.3,&quot;custom:homeVersion&quot;:&quot;chicago&quot;,&quot;custom:initiallyWikiRoute&quot;:true,&quot;custom:previousRoute&quot;:&quot;WIKI&quot;,&quot;custom:pageLoadInfo&quot;:{&quot;uuid&quot;:&quot;HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;isInitial&quot;:true,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:7699.299999999814},&quot;featureFlags&quot;:{&quot;confluence.frontend.pollinator.synthetic.check.tenants&quot;:false,&quot;confluence.frontend.delay.comment.button&quot;:true,&quot;confluence.frontend.delay.page.comments.render&quot;:&quot;delay-render&quot;,&quot;confluence.frontend.enable.external.collab&quot;:false,&quot;confluence.frontend.eop.recommendations.rollout&quot;:&quot;on&quot;,&quot;confluence.frontend.focused.inline.comment.performance&quot;:&quot;variation&quot;,&quot;confluence.frontend.live-search&quot;:true,&quot;confluence.frontend.presentation.mode&quot;:true,&quot;confluence.ssr.fabric.macros&quot;:null,&quot;confluence.ssr.page-tree&quot;:null,&quot;confluence.ssr.page-tree.best.effort&quot;:null,&quot;confluence.ssr.read-time&quot;:null,&quot;confluence.ssr.page-statuses&quot;:null,&quot;confluence.ssr.home.feed.best-effort&quot;:null,&quot;confluence.ssr.shortcuts&quot;:null,&quot;confluence.ssr.shortcuts.link-filter&quot;:null,&quot;confluence.ssr.smartlinks&quot;:null,&quot;confluence.ssr.page-share-and-perms-button&quot;:null,&quot;confluence.frontend.page-share-and-permissions&quot;:false,&quot;confluence.frontend.economy-growth.discover-apps-in-sidebar.experiment&quot;:false,&quot;confluence.frontend.top.level.body.content.query&quot;:false,&quot;confluence.ssr.integrating.public.links.to.nsd&quot;:null,&quot;confluence.frontend.integrating.public.links.to.nsd&quot;:false,&quot;confluence.frontend.fabric.editor.macro.adf.frontend.render&quot;:false,&quot;confluence.frontend.bandana.client.short.socket.timeout&quot;:&quot;50.0&quot;},&quot;hostname&quot;:&quot;thinktimetechnology.atlassian.net&quot;,&quot;confluence:cloudId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;confluence:environment&quot;:&quot;PRODUCTION&quot;,&quot;confluence:shard&quot;:&quot;confluence-prod-ap-8-3.prod.atl-paas.net&quot;,&quot;confluence:ssr&quot;:false,&quot;confluence:uniqueIdentifier&quot;:&quot;undefined&quot;,&quot;confluence:buildInfo:FRONTEND_VERSION&quot;:&quot;CLASSIC-master-12091&quot;,&quot;confluence:buildInfo:BRANCH_NAME&quot;:&quot;master&quot;,&quot;confluence:buildInfo:BUILD_NUMBER&quot;:&quot;12091&quot;,&quot;confluence:buildInfo:BUILD_DATE&quot;:&quot;1663854142232&quot;,&quot;confluence:buildInfo:PUBLIC_PATH&quot;:&quot;${scheme}://confluence-v1.prod.atl-paas.net/master/&quot;,&quot;confluence:buildInfo:RELEASE_TRACK&quot;:&quot;prod&quot;,&quot;confluence:cfp63Durations:CFP-63.html&quot;:1614,&quot;confluence:cfp63Durations:CFP-63.query-preloader&quot;:3067,&quot;confluence:cfp63Durations:CFP-63.app&quot;:3386,&quot;confluence:cfp63Durations:CFP-63.translations-ready&quot;:3917,&quot;confluence:cfp63Durations:CFP-63.session-data-ready&quot;:4199,&quot;confluence:cfp63Durations:CFP-63.root-component-render&quot;:4289,&quot;confluence:cfp63Durations:CFP-63.app-component-render&quot;:4350,&quot;confluence:cfp63Durations:CFP-63.route-manager-initialized&quot;:4452,&quot;confluence:cfp63Durations:CFP-63.route-component-render&quot;:4456,&quot;confluence:pageLoadedFromCache&quot;:false,&quot;confluence:httpProtocol&quot;:&quot;http/1.1&quot;,&quot;confluence:domainSharding&quot;:false,&quot;confluence:sw&quot;:{},&quot;confluence:ssrTraceId&quot;:&quot;&quot;,&quot;confluence:ssrRegion&quot;:&quot;&quot;,&quot;confluence:ssrDurations&quot;:{},&quot;confluence:ssrInteractions&quot;:{},&quot;confluence:ssrInteractionsDurations&quot;:{},&quot;confluence:ssrQueryTimeouts&quot;:{},&quot;confluence:ssrNumberOfSmartLinks&quot;:0,&quot;confluence:criticalAssets&quot;:{&quot;cachedRate&quot;:0,&quot;count&quot;:60,&quot;size&quot;:3367694,&quot;cachedSize&quot;:0,&quot;nonCachedSize&quot;:3367694,&quot;sizeBasedCachedRate&quot;:0},&quot;confluence:cacheStatus:totalChunkCount&quot;:&quot;64&quot;,&quot;timings:app&quot;:{&quot;include:home-overview-recent&quot;:{&quot;startTime&quot;:0,&quot;duration&quot;:12021},&quot;include:home-overview-feed&quot;:{&quot;startTime&quot;:0,&quot;duration&quot;:12022}},&quot;timings:resource&quot;:{&quot;query-preloader.js&quot;:{&quot;startTime&quot;:1555,&quot;duration&quot;:1448,&quot;workerStart&quot;:0,&quot;fetchStart&quot;:1555,&quot;type&quot;:&quot;script&quot;},&quot;unknown&quot;:{&quot;startTime&quot;:1557,&quot;duration&quot;:1445,&quot;workerStart&quot;:0,&quot;fetchStart&quot;:1557,&quot;type&quot;:&quot;script&quot;},&quot;cgraphql&quot;:{&quot;startTime&quot;:3076,&quot;duration&quot;:320,&quot;workerStart&quot;:0,&quot;fetchStart&quot;:3076,&quot;type&quot;:&quot;fetch&quot;,&quot;ttfb&quot;:3395,&quot;size&quot;:44167},&quot;in-product-messages&quot;:{&quot;startTime&quot;:4343,&quot;duration&quot;:672,&quot;workerStart&quot;:0,&quot;fetchStart&quot;:4343,&quot;type&quot;:&quot;fetch&quot;,&quot;ttfb&quot;:5014,&quot;size&quot;:2127},&quot;force-update.json&quot;:{&quot;startTime&quot;:4683,&quot;duration&quot;:750,&quot;workerStart&quot;:0,&quot;fetchStart&quot;:4683,&quot;type&quot;:&quot;fetch&quot;,&quot;ttfb&quot;:0,&quot;size&quot;:0}},&quot;pageVisible:state&quot;:&quot;visible&quot;,&quot;pageVisible:value&quot;:true,&quot;event:initial&quot;:true,&quot;metric:fmp&quot;:12483,&quot;metric:tti&quot;:12483,&quot;metric:fmp:histogramBuckets&quot;:&quot;1000_2000_2500_3000_4000_5000&quot;,&quot;metric:tti:histogramBuckets&quot;:&quot;2000_2500_3000_3500_4000_5000_6000&quot;,&quot;metric:fmp:slo&quot;:false,&quot;metric:fmp:slo:threshold&quot;:4400,&quot;metric:tti:slo&quot;:false,&quot;metric:tti:slo:threshold&quot;:4400,&quot;timings:bundleEval&quot;:{&quot;SiteHomepageRedirectLoader(0)&quot;:{&quot;startTime&quot;:3921,&quot;duration&quot;:599},&quot;GoToHomeLoader(0)&quot;:{&quot;startTime&quot;:3919,&quot;duration&quot;:624},&quot;MainLayout(0)&quot;:{&quot;startTime&quot;:4492,&quot;duration&quot;:258},&quot;LazyHome1Point5(0)&quot;:{&quot;startTime&quot;:4817,&quot;duration&quot;:209},&quot;Overview(0)&quot;:{&quot;startTime&quot;:5204,&quot;duration&quot;:6673},&quot;LazySpaces(0)&quot;:{&quot;startTime&quot;:12019,&quot;duration&quot;:148}},&quot;metric:fp&quot;:3777,&quot;metric:fcp&quot;:3777,&quot;metrics:navigation&quot;:{&quot;redirectStart&quot;:64,&quot;redirectEnd&quot;:1074,&quot;fetchStart&quot;:1074,&quot;domainLookupStart&quot;:1074,&quot;domainLookupEnd&quot;:1074,&quot;connectStart&quot;:1084,&quot;connectEnd&quot;:1127,&quot;secureConnectionStart&quot;:1107,&quot;requestStart&quot;:1127,&quot;responseStart&quot;:1471,&quot;responseEnd&quot;:1473,&quot;encodedBodySize&quot;:18352,&quot;decodedBodySize&quot;:18352,&quot;transferSize&quot;:18652,&quot;redirectCount&quot;:1,&quot;type&quot;:&quot;navigate&quot;,&quot;unloadEventEnd&quot;:0,&quot;unloadEventStart&quot;:0,&quot;workerStart&quot;:0}}},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;performance measured&quot;,&quot;messageId&quot;:&quot;ajs-17ccbb80-e7a7-4915-9186-060f19809bd0&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:41.786Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:37.950Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;performance&quot;,&quot;actionSubject&quot;:&quot;performance&quot;,&quot;action&quot;:&quot;measured&quot;,&quot;attributes&quot;:{&quot;task&quot;:&quot;confluence.fe.page-segment-load.home-overview-right-panel&quot;,&quot;properties&quot;:{&quot;event:key&quot;:&quot;confluence.fe.page-segment-load.home-overview-right-panel&quot;,&quot;event:type&quot;:&quot;page-segment-load&quot;,&quot;event:product&quot;:&quot;confluence&quot;,&quot;event:route&quot;:&quot;HOME&quot;,&quot;event:id&quot;:&quot;home-overview-right-panel&quot;,&quot;event:localHour&quot;:11,&quot;event:localDayOfWeek&quot;:1,&quot;event:region&quot;:&quot;confluence-prod-ap-8-3.prod.atl-paas.net&quot;,&quot;app:framework:name&quot;:&quot;react&quot;,&quot;app:framework:version&quot;:&quot;16.14.0&quot;,&quot;app:web:version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;bm:version&quot;:3,&quot;telemetry:browser:name&quot;:&quot;Chrome&quot;,&quot;telemetry:browser:version&quot;:&quot;105.0.0.0&quot;,&quot;telemetry:cpus&quot;:3,&quot;telemetry:memory&quot;:8,&quot;telemetry:network:effectiveType&quot;:&quot;4g&quot;,&quot;telemetry:network:rtt&quot;:200,&quot;telemetry:network:downlink&quot;:3.3,&quot;custom:pageLoadInfo&quot;:{&quot;uuid&quot;:&quot;HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;isInitial&quot;:true,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:7839.0999999996275},&quot;featureFlags&quot;:{&quot;confluence.frontend.pollinator.synthetic.check.tenants&quot;:false,&quot;confluence.frontend.delay.comment.button&quot;:true,&quot;confluence.frontend.delay.page.comments.render&quot;:&quot;delay-render&quot;,&quot;confluence.frontend.enable.external.collab&quot;:false,&quot;confluence.frontend.eop.recommendations.rollout&quot;:&quot;on&quot;,&quot;confluence.frontend.focused.inline.comment.performance&quot;:&quot;variation&quot;,&quot;confluence.frontend.live-search&quot;:true,&quot;confluence.frontend.presentation.mode&quot;:true,&quot;confluence.ssr.fabric.macros&quot;:null,&quot;confluence.ssr.page-tree&quot;:null,&quot;confluence.ssr.page-tree.best.effort&quot;:null,&quot;confluence.ssr.read-time&quot;:null,&quot;confluence.ssr.page-statuses&quot;:null,&quot;confluence.ssr.home.feed.best-effort&quot;:null,&quot;confluence.ssr.shortcuts&quot;:null,&quot;confluence.ssr.shortcuts.link-filter&quot;:null,&quot;confluence.ssr.smartlinks&quot;:null,&quot;confluence.ssr.page-share-and-perms-button&quot;:null,&quot;confluence.frontend.page-share-and-permissions&quot;:false,&quot;confluence.frontend.economy-growth.discover-apps-in-sidebar.experiment&quot;:false,&quot;confluence.frontend.top.level.body.content.query&quot;:false,&quot;confluence.ssr.integrating.public.links.to.nsd&quot;:null,&quot;confluence.frontend.integrating.public.links.to.nsd&quot;:false,&quot;confluence.frontend.fabric.editor.macro.adf.frontend.render&quot;:false,&quot;confluence.frontend.bandana.client.short.socket.timeout&quot;:&quot;50.0&quot;},&quot;hostname&quot;:&quot;thinktimetechnology.atlassian.net&quot;,&quot;confluence:cloudId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;confluence:environment&quot;:&quot;PRODUCTION&quot;,&quot;confluence:shard&quot;:&quot;confluence-prod-ap-8-3.prod.atl-paas.net&quot;,&quot;confluence:ssr&quot;:&quot;false&quot;,&quot;confluence:uniqueIdentifier&quot;:&quot;undefined&quot;,&quot;confluence:initial&quot;:true,&quot;confluence:criticalAssets&quot;:{&quot;cachedRate&quot;:0,&quot;count&quot;:60,&quot;size&quot;:3367694,&quot;cachedSize&quot;:0,&quot;nonCachedSize&quot;:3367694,&quot;sizeBasedCachedRate&quot;:0},&quot;timings:resource&quot;:{&quot;query-preloader.js&quot;:{&quot;startTime&quot;:1555,&quot;duration&quot;:1448,&quot;workerStart&quot;:0,&quot;fetchStart&quot;:1555,&quot;type&quot;:&quot;script&quot;},&quot;unknown&quot;:{&quot;startTime&quot;:1557,&quot;duration&quot;:1445,&quot;workerStart&quot;:0,&quot;fetchStart&quot;:1557,&quot;type&quot;:&quot;script&quot;},&quot;cgraphql&quot;:{&quot;startTime&quot;:3076,&quot;duration&quot;:320,&quot;workerStart&quot;:0,&quot;fetchStart&quot;:3076,&quot;type&quot;:&quot;fetch&quot;,&quot;ttfb&quot;:3395,&quot;size&quot;:44167},&quot;in-product-messages&quot;:{&quot;startTime&quot;:4343,&quot;duration&quot;:672,&quot;workerStart&quot;:0,&quot;fetchStart&quot;:4343,&quot;type&quot;:&quot;fetch&quot;,&quot;ttfb&quot;:5014,&quot;size&quot;:2127},&quot;force-update.json&quot;:{&quot;startTime&quot;:4683,&quot;duration&quot;:750,&quot;workerStart&quot;:0,&quot;fetchStart&quot;:4683,&quot;type&quot;:&quot;fetch&quot;,&quot;ttfb&quot;:0,&quot;size&quot;:0}},&quot;metric:fmp&quot;:12623,&quot;metric:tti&quot;:12623,&quot;metric:fmp:histogramBuckets&quot;:&quot;1000_2000_2500_3000_4000_5000&quot;,&quot;metric:tti:histogramBuckets&quot;:&quot;2000_2500_3000_3500_4000_5000_6000&quot;,&quot;pageVisible:state&quot;:&quot;visible&quot;,&quot;pageVisible:value&quot;:true,&quot;event:initial&quot;:true,&quot;timings:bundleEval&quot;:{&quot;SiteHomepageRedirectLoader(0)&quot;:{&quot;startTime&quot;:3921,&quot;duration&quot;:599},&quot;GoToHomeLoader(0)&quot;:{&quot;startTime&quot;:3919,&quot;duration&quot;:624},&quot;MainLayout(0)&quot;:{&quot;startTime&quot;:4492,&quot;duration&quot;:258},&quot;LazyHome1Point5(0)&quot;:{&quot;startTime&quot;:4817,&quot;duration&quot;:209},&quot;Overview(0)&quot;:{&quot;startTime&quot;:5204,&quot;duration&quot;:6673},&quot;LazySpaces(0)&quot;:{&quot;startTime&quot;:12019,&quot;duration&quot;:148}}}},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;performance measured&quot;,&quot;messageId&quot;:&quot;ajs-9b05999a-b85f-486e-9c63-fc10f41bcab1&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:41.786Z&quot;}],&quot;sentAt&quot;:&quot;2022-09-26T05:58:41.786Z&quot;,&quot;metadata&quot;:{&quot;resilienceMechanism&quot;:&quot;indexeddb&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/gasv3/api/v1/batch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-258" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;operationName&quot;:&quot;GetOnboardingState&quot;,&quot;variables&quot;:{&quot;key&quot;:[&quot;editor-state:editorOnboardingEligiblity&quot;,&quot;editor-state:editorVisited&quot;,&quot;editor-state:wasDraftBannerSeen&quot;,&quot;editor-state:hasUserPublished&quot;,&quot;editor-state:successFlagCompleted&quot;,&quot;editor-state:recentSpotlightOpen&quot;,&quot;editor-state:recentSpotlightCompleted&quot;,&quot;editor-state:wasEditorTemplatePublished&quot;,&quot;editor-state:editorTutorialSuccessFlagCompleted&quot;]},&quot;query&quot;:&quot;query GetOnboardingState($key: [String]) {\n  onboardingState(key: $key) {\n    key\n    value\n    __typename\n  }\n}\n&quot;},{&quot;operationName&quot;:&quot;GetQuickstartState&quot;,&quot;variables&quot;:{&quot;key&quot;:[&quot;quickstart-state:isPanelOpen&quot;,&quot;quickstart-state:isDismissed&quot;,&quot;quickstart-state:openTaskId&quot;,&quot;quickstart-state:openComponentId&quot;,&quot;quickstart-state:jswConfIntroCompleted&quot;,&quot;quickstart-state:helpCompleted&quot;,&quot;quickstart-state:spaceModalCompleted&quot;,&quot;quickstart-state:spaceTourCompleted&quot;,&quot;quickstart-state:collaborateCompleted&quot;,&quot;quickstart-state:homeModalCompleted&quot;,&quot;quickstart-state:homeTourCompleted&quot;,&quot;quickstart-state:mobileCompleted&quot;,&quot;quickstart-state:hasSeenDismissedFlag&quot;,&quot;quickstart-state:isMigratedUserV2&quot;,&quot;quickstart-state:isMigratedUserCalibrationState&quot;,&quot;quickstart-state:jswXflowSwitcherTourCompleted&quot;,&quot;onboarding-origin-state:attributes&quot;,&quot;quickstart-state:jswXFlowModalCompleted&quot;,&quot;quickstart-state:jswXflowInvitePeopleModalOpen&quot;,&quot;quickstart-state:jswXflowInvitePeopleNudgeCompleted&quot;,&quot;quickstart-state:jswXFlowInvitedEmails&quot;,&quot;quickstart-state:editorTutorialTaskCompleted&quot;,&quot;quickstart-state:qsv2ReadConfluenceGuideCompleted&quot;,&quot;quickstart-state:qsv2InviteTeammateCompleted&quot;,&quot;quickstart-state:qsv2IntegrationCompleted&quot;,&quot;quickstart-state:qsv2SiteVideoTourCompleted&quot;,&quot;quickstart-state:qsv2SpotlightCompleted&quot;,&quot;quickstart-state:migrationsWelcomeCompleted&quot;,&quot;quickstart-state:migrationsNewPageCompleted&quot;,&quot;quickstart-state:migrationsCollaborateCompleted&quot;,&quot;quickstart-state:migrationsFindAndOrganizePagesCompleted&quot;,&quot;quickstart-state:migrationsEditAndCustomizeContentCompleted&quot;,&quot;quickstart-state:simplifyAdminRenameSiteCompleted&quot;,&quot;quickstart-state:nqsv2HelpCompleted&quot;,&quot;quickstart-state:nqsv2CreateCompleted&quot;,&quot;quickstart-state:nqsv2CollaborateCompleted&quot;,&quot;quickstart-state:nqsv2Confluence101Completed&quot;]},&quot;query&quot;:&quot;query GetQuickstartState($key: [String]) {\n  onboardingState(key: $key) {\n    key\n    value\n    __typename\n  }\n  ...UserPermissionFragment\n}\n\nfragment UserPermissionFragment on Query {\n  user(current: true) {\n    id\n    confluence {\n      permissionType\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cgraphql?q=GetOnboardingState,GetQuickstartState</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/wiki/home?cloudId=f21b70d0-8bad-458e-9a03-d1d9544e0e8c</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-APOLLO-OPERATION-NAME" elementType="Header">
                  <stringProp name="Header.name">X-APOLLO-OPERATION-NAME</stringProp>
                  <stringProp name="Header.value">GetOnboardingState,GetQuickstartState</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-259" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;type&quot;:&quot;metric&quot;,&quot;meta&quot;:{&quot;synthetic&quot;:&quot;false&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;env&quot;:&quot;prod&quot;,&quot;os&quot;:&quot;windows&quot;,&quot;platform&quot;:&quot;desktop&quot;,&quot;browser&quot;:&quot;chrome&quot;},&quot;metalId&quot;:&quot;88dcca98-e854-4063-954c-eabe3aeb25d2&quot;,&quot;data&quot;:[{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.first_meaningful_paint&quot;,&quot;tags&quot;:[&quot;active_tab:true&quot;,&quot;initial_load:true&quot;,&quot;page:segment-app-navigation&quot;,&quot;gsd_histogram:1000_2000_2500_3000_4000_5000&quot;],&quot;value&quot;:17871,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.time_to_interactive&quot;,&quot;tags&quot;:[&quot;active_tab:true&quot;,&quot;initial_load:true&quot;,&quot;page:segment-app-navigation&quot;,&quot;gsd_histogram:2000_2500_3000_3500_4000_5000_6000&quot;],&quot;value&quot;:17871,&quot;sampleRate&quot;:1}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/metal/ingest</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-261" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="promotedSpacesLimit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">promotedSpacesLimit</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="otherSpacesLimit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">otherSpacesLimit</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="promotedSpaceKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">promotedSpaceKey</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/wiki/rest/create-dialog/1.0/spaces</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-262" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;r&quot;:[],&quot;c&quot;:[&quot;confluence-keyboard-shortcuts-batch&quot;],&quot;xc&quot;:[&quot;_super&quot;],&quot;xr&quot;:[&quot;com.atlassian.plugins.jquery:jquery&quot;]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/wiki/rest/webResources/1.0/resources</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-270" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="promotedSpacesLimit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">promotedSpacesLimit</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="otherSpacesLimit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">otherSpacesLimit</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="promotedSpaceKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">promotedSpaceKey</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/wiki/rest/create-dialog/1.0/spaces</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-276" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;operationName&quot;:&quot;WatchDialogQuery&quot;,&quot;variables&quot;:{&quot;contentId&quot;:&quot;33329&quot;},&quot;query&quot;:&quot;query WatchDialogQuery($contentId: ID!) {\n  singleContent(id: $contentId) {\n    id\n    ...WatchDialogContentFragment\n    __typename\n  }\n}\n\nfragment WatchDialogContentFragment on Content {\n  id\n  currentUserIsWatching\n  type\n  space {\n    id\n    key\n    currentUser {\n      isWatched\n      isWatchingBlogs\n      __typename\n    }\n    operations {\n      operation\n      targetType\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n&quot;},{&quot;operationName&quot;:&quot;WatchDialogQuery&quot;,&quot;variables&quot;:{&quot;contentId&quot;:&quot;5767600&quot;},&quot;query&quot;:&quot;query WatchDialogQuery($contentId: ID!) {\n  singleContent(id: $contentId) {\n    id\n    ...WatchDialogContentFragment\n    __typename\n  }\n}\n\nfragment WatchDialogContentFragment on Content {\n  id\n  currentUserIsWatching\n  type\n  space {\n    id\n    key\n    currentUser {\n      isWatched\n      isWatchingBlogs\n      __typename\n    }\n    operations {\n      operation\n      targetType\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n&quot;},{&quot;operationName&quot;:&quot;WatchDialogQuery&quot;,&quot;variables&quot;:{&quot;contentId&quot;:&quot;5767593&quot;},&quot;query&quot;:&quot;query WatchDialogQuery($contentId: ID!) {\n  singleContent(id: $contentId) {\n    id\n    ...WatchDialogContentFragment\n    __typename\n  }\n}\n\nfragment WatchDialogContentFragment on Content {\n  id\n  currentUserIsWatching\n  type\n  space {\n    id\n    key\n    currentUser {\n      isWatched\n      isWatchingBlogs\n      __typename\n    }\n    operations {\n      operation\n      targetType\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n&quot;},{&quot;operationName&quot;:&quot;WatchDialogQuery&quot;,&quot;variables&quot;:{&quot;contentId&quot;:&quot;5767584&quot;},&quot;query&quot;:&quot;query WatchDialogQuery($contentId: ID!) {\n  singleContent(id: $contentId) {\n    id\n    ...WatchDialogContentFragment\n    __typename\n  }\n}\n\nfragment WatchDialogContentFragment on Content {\n  id\n  currentUserIsWatching\n  type\n  space {\n    id\n    key\n    currentUser {\n      isWatched\n      isWatchingBlogs\n      __typename\n    }\n    operations {\n      operation\n      targetType\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n&quot;},{&quot;operationName&quot;:&quot;AdminKeyEligibility&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query AdminKeyEligibility {\n  tenant {\n    cloudId\n    editions {\n      edition\n      __typename\n    }\n    __typename\n  }\n  user(current: true) {\n    id\n    confluence {\n      roles {\n        canBeSuperAdmin\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cgraphql?q=WatchDialogQuery,WatchDialogQuery,WatchDialogQuery,WatchDialogQuery,AdminKeyEligibility</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/wiki/home?cloudId=f21b70d0-8bad-458e-9a03-d1d9544e0e8c</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-APOLLO-OPERATION-NAME" elementType="Header">
                  <stringProp name="Header.name">X-APOLLO-OPERATION-NAME</stringProp>
                  <stringProp name="Header.value">WatchDialogQuery,WatchDialogQuery,WatchDialogQuery,WatchDialogQuery,AdminKeyEligibility</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-287" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;r&quot;:[&quot;confluence.web.resources:querystring&quot;,&quot;confluence.web.resources:navigator-context&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:confluence-atlassian-connect-resources-v5&quot;],&quot;c&quot;:[],&quot;xc&quot;:[&quot;_super&quot;,&quot;confluence-keyboard-shortcuts-batch&quot;],&quot;xr&quot;:[&quot;com.atlassian.plugins.jquery:jquery&quot;]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/wiki/rest/webResources/1.0/resources</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-284" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/engage-targeting/api/v2/user/f21b70d0-8bad-458e-9a03-d1d9544e0e8c/messages/cc-generated-personal-space-onboarding/start</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-289" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="source" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">source</stringProp>
                  <stringProp name="Argument.value">atlaskitNotificationLogClient</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currentCount" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentCount</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/notification-log/api/3/notifications/count/unseen</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="x-app-version" elementType="Header">
                  <stringProp name="Header.name">x-app-version</stringProp>
                  <stringProp name="Header.value">6.0.0-atlaskitNotificationLogClient</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-290" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="source" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">source</stringProp>
                  <stringProp name="Argument.value">atlaskitNotificationLogClient</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/notification-log/api/3/notifications/count/unseen</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="x-app-version" elementType="Header">
                  <stringProp name="Header.name">x-app-version</stringProp>
                  <stringProp name="Header.value">6.0.0-atlaskitNotificationLogClient</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-288" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;operationName&quot;:&quot;SpaceOperationsQuery&quot;,&quot;variables&quot;:{&quot;spaceKey&quot;:&quot;~${acc}&quot;},&quot;query&quot;:&quot;query SpaceOperationsQuery($spaceKey: String!) {\n  space(key: $spaceKey) {\n    ...SpaceOperationsFragment\n    __typename\n  }\n}\n\nfragment SpaceOperationsFragment on Space {\n  id\n  operations {\n    operation\n    targetType\n    __typename\n  }\n  __typename\n}\n&quot;},{&quot;operationName&quot;:&quot;GetQuickstartState&quot;,&quot;variables&quot;:{&quot;key&quot;:[&quot;quickstart-state:isPanelOpen&quot;,&quot;quickstart-state:isDismissed&quot;,&quot;quickstart-state:openTaskId&quot;,&quot;quickstart-state:openComponentId&quot;,&quot;quickstart-state:jswConfIntroCompleted&quot;,&quot;quickstart-state:helpCompleted&quot;,&quot;quickstart-state:spaceModalCompleted&quot;,&quot;quickstart-state:spaceTourCompleted&quot;,&quot;quickstart-state:collaborateCompleted&quot;,&quot;quickstart-state:homeModalCompleted&quot;,&quot;quickstart-state:homeTourCompleted&quot;,&quot;quickstart-state:mobileCompleted&quot;,&quot;quickstart-state:hasSeenDismissedFlag&quot;,&quot;quickstart-state:isMigratedUserV2&quot;,&quot;quickstart-state:isMigratedUserCalibrationState&quot;,&quot;quickstart-state:jswXflowSwitcherTourCompleted&quot;,&quot;onboarding-origin-state:attributes&quot;,&quot;quickstart-state:jswXFlowModalCompleted&quot;,&quot;quickstart-state:jswXflowInvitePeopleModalOpen&quot;,&quot;quickstart-state:jswXflowInvitePeopleNudgeCompleted&quot;,&quot;quickstart-state:jswXFlowInvitedEmails&quot;,&quot;quickstart-state:editorTutorialTaskCompleted&quot;,&quot;quickstart-state:qsv2ReadConfluenceGuideCompleted&quot;,&quot;quickstart-state:qsv2InviteTeammateCompleted&quot;,&quot;quickstart-state:qsv2IntegrationCompleted&quot;,&quot;quickstart-state:qsv2SiteVideoTourCompleted&quot;,&quot;quickstart-state:qsv2SpotlightCompleted&quot;,&quot;quickstart-state:migrationsWelcomeCompleted&quot;,&quot;quickstart-state:migrationsNewPageCompleted&quot;,&quot;quickstart-state:migrationsCollaborateCompleted&quot;,&quot;quickstart-state:migrationsFindAndOrganizePagesCompleted&quot;,&quot;quickstart-state:migrationsEditAndCustomizeContentCompleted&quot;,&quot;quickstart-state:simplifyAdminRenameSiteCompleted&quot;,&quot;quickstart-state:nqsv2HelpCompleted&quot;,&quot;quickstart-state:nqsv2CreateCompleted&quot;,&quot;quickstart-state:nqsv2CollaborateCompleted&quot;,&quot;quickstart-state:nqsv2Confluence101Completed&quot;]},&quot;query&quot;:&quot;query GetQuickstartState($key: [String]) {\n  onboardingState(key: $key) {\n    key\n    value\n    __typename\n  }\n  ...UserPermissionFragment\n}\n\nfragment UserPermissionFragment on Query {\n  user(current: true) {\n    id\n    confluence {\n      permissionType\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n&quot;},{&quot;operationName&quot;:&quot;GetOnboardingState&quot;,&quot;variables&quot;:{&quot;key&quot;:[&quot;editor-state:editorOnboardingEligiblity&quot;,&quot;editor-state:editorVisited&quot;,&quot;editor-state:wasDraftBannerSeen&quot;,&quot;editor-state:hasUserPublished&quot;,&quot;editor-state:successFlagCompleted&quot;,&quot;editor-state:recentSpotlightOpen&quot;,&quot;editor-state:recentSpotlightCompleted&quot;,&quot;editor-state:wasEditorTemplatePublished&quot;,&quot;editor-state:editorTutorialSuccessFlagCompleted&quot;,&quot;quickstart-state:isPanelOpen&quot;,&quot;quickstart-state:isDismissed&quot;,&quot;quickstart-state:openTaskId&quot;,&quot;quickstart-state:openComponentId&quot;,&quot;quickstart-state:jswConfIntroCompleted&quot;,&quot;quickstart-state:helpCompleted&quot;,&quot;quickstart-state:spaceModalCompleted&quot;,&quot;quickstart-state:spaceTourCompleted&quot;,&quot;quickstart-state:collaborateCompleted&quot;,&quot;quickstart-state:homeModalCompleted&quot;,&quot;quickstart-state:homeTourCompleted&quot;,&quot;quickstart-state:mobileCompleted&quot;,&quot;quickstart-state:hasSeenDismissedFlag&quot;,&quot;quickstart-state:isMigratedUserV2&quot;,&quot;quickstart-state:isMigratedUserCalibrationState&quot;,&quot;quickstart-state:jswXflowSwitcherTourCompleted&quot;,&quot;onboarding-origin-state:attributes&quot;,&quot;quickstart-state:jswXFlowModalCompleted&quot;,&quot;quickstart-state:jswXflowInvitePeopleModalOpen&quot;,&quot;quickstart-state:jswXflowInvitePeopleNudgeCompleted&quot;,&quot;quickstart-state:jswXFlowInvitedEmails&quot;,&quot;quickstart-state:editorTutorialTaskCompleted&quot;,&quot;quickstart-state:qsv2ReadConfluenceGuideCompleted&quot;,&quot;quickstart-state:qsv2InviteTeammateCompleted&quot;,&quot;quickstart-state:qsv2IntegrationCompleted&quot;,&quot;quickstart-state:qsv2SiteVideoTourCompleted&quot;,&quot;quickstart-state:qsv2SpotlightCompleted&quot;,&quot;quickstart-state:migrationsWelcomeCompleted&quot;,&quot;quickstart-state:migrationsNewPageCompleted&quot;,&quot;quickstart-state:migrationsCollaborateCompleted&quot;,&quot;quickstart-state:migrationsFindAndOrganizePagesCompleted&quot;,&quot;quickstart-state:migrationsEditAndCustomizeContentCompleted&quot;,&quot;quickstart-state:simplifyAdminRenameSiteCompleted&quot;,&quot;quickstart-state:nqsv2HelpCompleted&quot;,&quot;quickstart-state:nqsv2CreateCompleted&quot;,&quot;quickstart-state:nqsv2CollaborateCompleted&quot;,&quot;quickstart-state:nqsv2Confluence101Completed&quot;]},&quot;query&quot;:&quot;query GetOnboardingState($key: [String]) {\n  onboardingState(key: $key) {\n    key\n    value\n    __typename\n  }\n}\n&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cgraphql?q=SpaceOperationsQuery,GetQuickstartState,GetOnboardingState</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/wiki/home?cloudId=f21b70d0-8bad-458e-9a03-d1d9544e0e8c</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-APOLLO-OPERATION-NAME" elementType="Header">
                  <stringProp name="Header.name">X-APOLLO-OPERATION-NAME</stringProp>
                  <stringProp name="Header.value">SpaceOperationsQuery,GetQuickstartState,GetOnboardingState</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="02_Login-296" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument" enabled="true">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;WebItemLocationQuery&quot;,&quot;variables&quot;:{&quot;location&quot;:&quot;system.help/pages&quot;,&quot;locations&quot;:[],&quot;contentId&quot;:null,&quot;spaceKey&quot;:null,&quot;version&quot;:null},&quot;query&quot;:&quot;query WebItemLocationQuery($location: String, $locations: [String], $contentId: ID, $spaceKey: String, $version: Int) {\n  webItemSections(location: $location, locations: $locations, contentId: $contentId, key: $spaceKey, version: $version) {\n    id\n    label\n    cacheKey\n    styleClass\n    items {\n      accessKey\n      completeKey\n      hasCondition\n      id\n      icon {\n        path\n        __typename\n      }\n      params {\n        key\n        value\n        __typename\n      }\n      label\n      moduleKey\n      section\n      styleClass\n      tooltip\n      url\n      urlWithoutContextPath\n      weight\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cgraphql?q=WebItemLocationQuery:system.help/pages</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="GraphQLHTTPSampler.operationName">WebItemLocationQuery</stringProp>
            <stringProp name="GraphQLHTTPSampler.query">query WebItemLocationQuery($location: String, $locations: [String], $contentId: ID, $spaceKey: String, $version: Int) {
  webItemSections(location: $location, locations: $locations, contentId: $contentId, key: $spaceKey, version: $version) {
    id
    label
    cacheKey
    styleClass
    items {
      accessKey
      completeKey
      hasCondition
      id
      icon {
        path
        __typename
      }
      params {
        key
        value
        __typename
      }
      label
      moduleKey
      section
      styleClass
      tooltip
      url
      urlWithoutContextPath
      weight
      __typename
    }
    __typename
  }
}
</stringProp>
            <stringProp name="GraphQLHTTPSampler.variables">{&quot;location&quot;:&quot;system.help/pages&quot;,&quot;locations&quot;:[],&quot;contentId&quot;:null,&quot;spaceKey&quot;:null,&quot;version&quot;:null}</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/wiki/home?cloudId=f21b70d0-8bad-458e-9a03-d1d9544e0e8c</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-APOLLO-OPERATION-NAME" elementType="Header">
                  <stringProp name="Header.name">X-APOLLO-OPERATION-NAME</stringProp>
                  <stringProp name="Header.value">WebItemLocationQuery:system.help/pages</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="02_Login-297" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument" enabled="true">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;forge_ui_extensionList&quot;,&quot;variables&quot;:{&quot;contextIds&quot;:[&quot;ari:cloud:confluence::site/f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;],&quot;type&quot;:&quot;confluence:globalPage&quot;},&quot;query&quot;:&quot;query forge_ui_extensionList($contextIds: [ID!]!, $type: String!) {\n  extensionContexts(contextIds: $contextIds) {\n    id\n    extensionsByType(type: $type) {\n      id\n      environmentId\n      environmentType\n      properties\n      type\n      appVersion\n      installationId\n      migrationKey\n      consentUrl\n      currentUserConsent {\n        user {\n          aaid\n          __typename\n        }\n        appEnvironmentVersion {\n          id\n          __typename\n        }\n        consentedAt\n        __typename\n      }\n      requiresUserConsent\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="GraphQLHTTPSampler.operationName">forge_ui_extensionList</stringProp>
            <stringProp name="GraphQLHTTPSampler.query">query forge_ui_extensionList($contextIds: [ID!]!, $type: String!) {
  extensionContexts(contextIds: $contextIds) {
    id
    extensionsByType(type: $type) {
      id
      environmentId
      environmentType
      properties
      type
      appVersion
      installationId
      migrationKey
      consentUrl
      currentUserConsent {
        user {
          aaid
          __typename
        }
        appEnvironmentVersion {
          id
          __typename
        }
        consentedAt
        __typename
      }
      requiresUserConsent
      __typename
    }
    __typename
  }
}
</stringProp>
            <stringProp name="GraphQLHTTPSampler.variables">{&quot;contextIds&quot;:[&quot;ari:cloud:confluence::site/f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;],&quot;type&quot;:&quot;confluence:globalPage&quot;}</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-305" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;operationName&quot;:&quot;NavUserEmailQuery&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query NavUserEmailQuery {\n  user(current: true) {\n    id\n    emails {\n      value\n      __typename\n    }\n    __typename\n  }\n}\n&quot;},{&quot;operationName&quot;:&quot;UserContextQuery&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query UserContextQuery {\n  user(current: true) {\n    id\n    displayName\n    emails {\n      value\n      isPrimary\n      __typename\n    }\n    __typename\n  }\n}\n&quot;},{&quot;operationName&quot;:&quot;SettingsComponentQuery&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SettingsComponentQuery {\n  user(current: true) {\n    id\n    confluence {\n      operations {\n        operation\n        targetType\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;},{&quot;operationName&quot;:&quot;UserPrivilegeQuery&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query UserPrivilegeQuery {\n  ...UserPrivilegeFragment\n}\n\nfragment UserPrivilegeFragment on Query {\n  ...IsProductAdminFragment\n  ...IsSiteAdminFragment\n  __typename\n}\n\nfragment IsProductAdminFragment on Query {\n  user(current: true) {\n    id\n    confluence {\n      operations {\n        operation\n        targetType\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment IsSiteAdminFragment on Query {\n  isSiteAdmin\n  __typename\n}\n&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cgraphql?q=NavUserEmailQuery,UserContextQuery,SettingsComponentQuery,UserPrivilegeQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/wiki/home?cloudId=f21b70d0-8bad-458e-9a03-d1d9544e0e8c</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-APOLLO-OPERATION-NAME" elementType="Header">
                  <stringProp name="Header.name">X-APOLLO-OPERATION-NAME</stringProp>
                  <stringProp name="Header.value">NavUserEmailQuery,UserContextQuery,SettingsComponentQuery,UserPrivilegeQuery</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-316" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/wiki/rest/shortcuts/latest/shortcuts/6452/65c34ba489416cef7dff22454c3bbd89</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-326" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;cloudId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;scopes&quot;:[&quot;confluence.page,blogpost,attachment&quot;],&quot;experience&quot;:&quot;product-search-dialog&quot;,&quot;product&quot;:&quot;confluence&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/xpsearch-aggregator/experiment/v1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-323" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="accountId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">accountId</stringProp>
                  <stringProp name="Argument.value">${acc}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="expand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">expand</stringProp>
                  <stringProp name="Argument.value">applicationRoles</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/rest/api/3/user</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-324" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="experience" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">experience</stringProp>
                  <stringProp name="Argument.value">product-search-dialog</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="productId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">productId</stringProp>
                  <stringProp name="Argument.value">bitbucket</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/xpsearch-aggregator/scopes/v1/f21b70d0-8bad-458e-9a03-d1d9544e0e8c</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-339" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="limit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">limit</stringProp>
                  <stringProp name="Argument.value">200</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/wiki/rest/recentlyviewed/1.0/recent</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-341" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="limit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">limit</stringProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/wiki/rest/recentlyviewed/1.0/recent/spaces</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-338" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="experience" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">experience</stringProp>
                  <stringProp name="Argument.value">product-search-dialog</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="productId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">productId</stringProp>
                  <stringProp name="Argument.value">jira</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="productId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">productId</stringProp>
                  <stringProp name="Argument.value">opsgenie</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="productId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">productId</stringProp>
                  <stringProp name="Argument.value">townsquare</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="productId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">productId</stringProp>
                  <stringProp name="Argument.value">trello</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/xpsearch-aggregator/scopes/v1/f21b70d0-8bad-458e-9a03-d1d9544e0e8c</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-351" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;operationName&quot;:&quot;GetQuickstartState&quot;,&quot;variables&quot;:{&quot;key&quot;:[&quot;quickstart-state:isPanelOpen&quot;,&quot;quickstart-state:isDismissed&quot;,&quot;quickstart-state:openTaskId&quot;,&quot;quickstart-state:openComponentId&quot;,&quot;quickstart-state:jswConfIntroCompleted&quot;,&quot;quickstart-state:helpCompleted&quot;,&quot;quickstart-state:spaceModalCompleted&quot;,&quot;quickstart-state:spaceTourCompleted&quot;,&quot;quickstart-state:collaborateCompleted&quot;,&quot;quickstart-state:homeModalCompleted&quot;,&quot;quickstart-state:homeTourCompleted&quot;,&quot;quickstart-state:mobileCompleted&quot;,&quot;quickstart-state:hasSeenDismissedFlag&quot;,&quot;quickstart-state:isMigratedUserV2&quot;,&quot;quickstart-state:isMigratedUserCalibrationState&quot;,&quot;quickstart-state:jswXflowSwitcherTourCompleted&quot;,&quot;onboarding-origin-state:attributes&quot;,&quot;quickstart-state:jswXFlowModalCompleted&quot;,&quot;quickstart-state:jswXflowInvitePeopleModalOpen&quot;,&quot;quickstart-state:jswXflowInvitePeopleNudgeCompleted&quot;,&quot;quickstart-state:jswXFlowInvitedEmails&quot;,&quot;quickstart-state:editorTutorialTaskCompleted&quot;,&quot;quickstart-state:qsv2ReadConfluenceGuideCompleted&quot;,&quot;quickstart-state:qsv2InviteTeammateCompleted&quot;,&quot;quickstart-state:qsv2IntegrationCompleted&quot;,&quot;quickstart-state:qsv2SiteVideoTourCompleted&quot;,&quot;quickstart-state:qsv2SpotlightCompleted&quot;,&quot;quickstart-state:migrationsWelcomeCompleted&quot;,&quot;quickstart-state:migrationsNewPageCompleted&quot;,&quot;quickstart-state:migrationsCollaborateCompleted&quot;,&quot;quickstart-state:migrationsFindAndOrganizePagesCompleted&quot;,&quot;quickstart-state:migrationsEditAndCustomizeContentCompleted&quot;,&quot;quickstart-state:simplifyAdminRenameSiteCompleted&quot;,&quot;quickstart-state:nqsv2HelpCompleted&quot;,&quot;quickstart-state:nqsv2CreateCompleted&quot;,&quot;quickstart-state:nqsv2CollaborateCompleted&quot;,&quot;quickstart-state:nqsv2Confluence101Completed&quot;]},&quot;query&quot;:&quot;query GetQuickstartState($key: [String]) {\n  onboardingState(key: $key) {\n    key\n    value\n    __typename\n  }\n  ...UserPermissionFragment\n}\n\nfragment UserPermissionFragment on Query {\n  user(current: true) {\n    id\n    confluence {\n      permissionType\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n&quot;},{&quot;operationName&quot;:&quot;AllOnboardingExpStatus&quot;,&quot;variables&quot;:{&quot;key&quot;:[&quot;onboarding-state:introWorkflow&quot;,&quot;onboarding-state:editNudge&quot;,&quot;onboarding-state:createNudge&quot;,&quot;onboarding-state:commentNudge&quot;,&quot;onboarding-state:legacy&quot;,&quot;onboarding-state:spotlightTour&quot;,&quot;onboarding-state:personalSpaceNudge&quot;]},&quot;query&quot;:&quot;query AllOnboardingExpStatus($key: [String]) {\n  onboardingState(key: $key) {\n    key\n    value\n    __typename\n  }\n}\n&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cgraphql?q=GetQuickstartState,AllOnboardingExpStatus</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/wiki/home?cloudId=f21b70d0-8bad-458e-9a03-d1d9544e0e8c</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-APOLLO-OPERATION-NAME" elementType="Header">
                  <stringProp name="Header.name">X-APOLLO-OPERATION-NAME</stringProp>
                  <stringProp name="Header.value">GetQuickstartState,AllOnboardingExpStatus</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-350" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;type&quot;:&quot;metric&quot;,&quot;meta&quot;:{&quot;synthetic&quot;:&quot;false&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;env&quot;:&quot;prod&quot;,&quot;os&quot;:&quot;windows&quot;,&quot;platform&quot;:&quot;desktop&quot;,&quot;browser&quot;:&quot;chrome&quot;},&quot;metalId&quot;:&quot;88dcca98-e854-4063-954c-eabe3aeb25d2&quot;,&quot;data&quot;:[{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.first_meaningful_paint&quot;,&quot;tags&quot;:[&quot;active_tab:true&quot;,&quot;initial_load:true&quot;,&quot;page:segment-search-box&quot;,&quot;gsd_histogram:1000_2000_2500_3000_4000_5000&quot;],&quot;value&quot;:21834,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.time_to_interactive&quot;,&quot;tags&quot;:[&quot;active_tab:true&quot;,&quot;initial_load:true&quot;,&quot;page:segment-search-box&quot;,&quot;gsd_histogram:2000_2500_3000_3500_4000_5000_6000&quot;],&quot;value&quot;:21834,&quot;sampleRate&quot;:1}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/metal/ingest</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-352" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/session/heartbeat</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-359" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;type&quot;:&quot;metric&quot;,&quot;meta&quot;:{&quot;subproduct&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;0.1&quot;,&quot;env&quot;:&quot;prod&quot;,&quot;os&quot;:&quot;windows&quot;,&quot;platform&quot;:&quot;desktop&quot;,&quot;browser&quot;:&quot;chrome&quot;},&quot;metalId&quot;:&quot;74fe5415-a93b-4197-bb9b-294dc9439cd7&quot;,&quot;data&quot;:[{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;fe.perf.component.time_to_ready.slo&quot;,&quot;tags&quot;:[&quot;component:useExtensionList&quot;,&quot;page:confluence:globalPage&quot;,&quot;success:true&quot;],&quot;value&quot;:1,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.component.time_to_ready&quot;,&quot;tags&quot;:[&quot;component:useExtensionList&quot;,&quot;page:confluence:globalPage&quot;],&quot;value&quot;:619.9000000003725,&quot;sampleRate&quot;:1}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/metal/ingest</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-361" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;operationName&quot;:&quot;GetQuickstartState&quot;,&quot;variables&quot;:{&quot;key&quot;:[&quot;quickstart-state:isPanelOpen&quot;,&quot;quickstart-state:isDismissed&quot;,&quot;quickstart-state:openTaskId&quot;,&quot;quickstart-state:openComponentId&quot;,&quot;quickstart-state:jswConfIntroCompleted&quot;,&quot;quickstart-state:helpCompleted&quot;,&quot;quickstart-state:spaceModalCompleted&quot;,&quot;quickstart-state:spaceTourCompleted&quot;,&quot;quickstart-state:collaborateCompleted&quot;,&quot;quickstart-state:homeModalCompleted&quot;,&quot;quickstart-state:homeTourCompleted&quot;,&quot;quickstart-state:mobileCompleted&quot;,&quot;quickstart-state:hasSeenDismissedFlag&quot;,&quot;quickstart-state:isMigratedUserV2&quot;,&quot;quickstart-state:isMigratedUserCalibrationState&quot;,&quot;quickstart-state:jswXflowSwitcherTourCompleted&quot;,&quot;onboarding-origin-state:attributes&quot;,&quot;quickstart-state:jswXFlowModalCompleted&quot;,&quot;quickstart-state:jswXflowInvitePeopleModalOpen&quot;,&quot;quickstart-state:jswXflowInvitePeopleNudgeCompleted&quot;,&quot;quickstart-state:jswXFlowInvitedEmails&quot;,&quot;quickstart-state:editorTutorialTaskCompleted&quot;,&quot;quickstart-state:qsv2ReadConfluenceGuideCompleted&quot;,&quot;quickstart-state:qsv2InviteTeammateCompleted&quot;,&quot;quickstart-state:qsv2IntegrationCompleted&quot;,&quot;quickstart-state:qsv2SiteVideoTourCompleted&quot;,&quot;quickstart-state:qsv2SpotlightCompleted&quot;,&quot;quickstart-state:migrationsWelcomeCompleted&quot;,&quot;quickstart-state:migrationsNewPageCompleted&quot;,&quot;quickstart-state:migrationsCollaborateCompleted&quot;,&quot;quickstart-state:migrationsFindAndOrganizePagesCompleted&quot;,&quot;quickstart-state:migrationsEditAndCustomizeContentCompleted&quot;,&quot;quickstart-state:simplifyAdminRenameSiteCompleted&quot;,&quot;quickstart-state:nqsv2HelpCompleted&quot;,&quot;quickstart-state:nqsv2CreateCompleted&quot;,&quot;quickstart-state:nqsv2CollaborateCompleted&quot;,&quot;quickstart-state:nqsv2Confluence101Completed&quot;]},&quot;query&quot;:&quot;query GetQuickstartState($key: [String]) {\n  onboardingState(key: $key) {\n    key\n    value\n    __typename\n  }\n  ...UserPermissionFragment\n}\n\nfragment UserPermissionFragment on Query {\n  user(current: true) {\n    id\n    confluence {\n      permissionType\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cgraphql?q=GetQuickstartState</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/wiki/home?cloudId=f21b70d0-8bad-458e-9a03-d1d9544e0e8c</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-APOLLO-OPERATION-NAME" elementType="Header">
                  <stringProp name="Header.name">X-APOLLO-OPERATION-NAME</stringProp>
                  <stringProp name="Header.value">GetQuickstartState</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-363" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;batch&quot;:[{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:42.078Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;home&quot;,&quot;actionSubject&quot;:&quot;home-v1.5&quot;,&quot;action&quot;:&quot;dwelled&quot;,&quot;attributes&quot;:{&quot;dwellTime&quot;:10001,&quot;finalDwellEvent&quot;:false,&quot;homeVersion&quot;:&quot;chicago&quot;},&quot;eventType&quot;:&quot;track&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;home-v1.5 dwelled&quot;,&quot;messageId&quot;:&quot;ajs-d1572ea9-fb06-428f-8eb5-156a37b505eb&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:48.928Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:43.213Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;@atlaskit/feature-flag-client&quot;,&quot;actionSubject&quot;:&quot;feature&quot;,&quot;action&quot;:&quot;exposed&quot;,&quot;attributes&quot;:{&quot;flagKey&quot;:&quot;confluence.frontend.create-team-on-behalf-of-others&quot;,&quot;reason&quot;:&quot;RULE_MATCH&quot;,&quot;ruleId&quot;:&quot;af43d8df-03e2-46d0-85dd-00a43f19916c&quot;,&quot;value&quot;:true},&quot;tags&quot;:[&quot;defaultExposure&quot;,&quot;measurement&quot;],&quot;highPriority&quot;:true,&quot;eventType&quot;:&quot;track&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;feature exposed&quot;,&quot;messageId&quot;:&quot;ajs-961ca491-df87-46b9-ae66-8af7d61bdb63&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:48.928Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:43.212Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;@atlaskit/feature-flag-client&quot;,&quot;actionSubject&quot;:&quot;feature&quot;,&quot;action&quot;:&quot;exposed&quot;,&quot;attributes&quot;:{&quot;flagKey&quot;:&quot;confluence.frontend.infi.interaction.notification.updates&quot;,&quot;reason&quot;:&quot;FALLTHROUGH&quot;,&quot;ruleId&quot;:null,&quot;value&quot;:true},&quot;tags&quot;:[&quot;optInExposure&quot;,&quot;measurement&quot;],&quot;highPriority&quot;:true,&quot;eventType&quot;:&quot;track&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;feature exposed&quot;,&quot;messageId&quot;:&quot;ajs-e8f69112-719f-4da3-8ea1-585d0b53c08d&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:48.928Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:43.214Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskStart&quot;,&quot;attributes&quot;:{&quot;uuid&quot;:&quot;HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;isInitial&quot;:true,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:13085.700000000186,&quot;startTime&quot;:17869.300000000745,&quot;task&quot;:&quot;onboarding-editor/recent-draft-spotlight&quot;,&quot;taskId&quot;:&quot;4065ae9a-1534-408c-aa21-b0064d66843a&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskStart&quot;,&quot;messageId&quot;:&quot;ajs-07c705ab-d1c0-435a-ac4c-271a2576c64d&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:48.928Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:43.215Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskSuccess&quot;,&quot;attributes&quot;:{&quot;uuid&quot;:&quot;HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;isInitial&quot;:true,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:13087.599999999627,&quot;startTime&quot;:4825.5,&quot;duration&quot;:13046,&quot;activeDuration&quot;:13046,&quot;adjustedDuration&quot;:13046,&quot;task&quot;:&quot;navigation/app-nav-global-navigation&quot;,&quot;taskId&quot;:&quot;e33bdfcf-2ede-43f5-9462-2e67838583ba&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskSuccess&quot;,&quot;messageId&quot;:&quot;ajs-6e72e69f-08b3-4c4a-95b0-440bfa6a5c68&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:48.928Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:43.218Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;confluence-frontend&quot;,&quot;actionSubject&quot;:&quot;Navigation&quot;,&quot;action&quot;:&quot;done&quot;,&quot;actionSubjectId&quot;:&quot;NavigationLoading&quot;,&quot;attributes&quot;:{&quot;featureFlags&quot;:{&quot;confluence.frontend-delete-own-permission-spotlight&quot;:true,&quot;confluence.frontend-delete-own-permission-spotlight-delay-duration&quot;:&quot;3000.0&quot;,&quot;confluence.frontend.add.labels&quot;:true,&quot;confluence.frontend.advanced-search.archive-search-filters&quot;:true,&quot;confluence.frontend.advanced-search.smart-contributor-filter&quot;:true,&quot;confluence.frontend.archive.and.delete.space&quot;:true,&quot;confluence.frontend.archive.pages&quot;:true,&quot;confluence.frontend.archive.pages.allow.bulk&quot;:true,&quot;confluence.frontend.archive.pages.allow.bulk.ui.multi-select&quot;:true,&quot;confluence.frontend.archive.pages.selection-limit&quot;:&quot;500.0&quot;,&quot;confluence.frontend.archive.recommendation.email&quot;:true,&quot;confluence.frontend.bandana.client.short.socket.timeout&quot;:&quot;50.0&quot;,&quot;confluence.frontend.batch.tasks&quot;:true,&quot;confluence.frontend.branch.deployment&quot;:&quot;off&quot;,&quot;confluence.frontend.collab.ncs.max.participants&quot;:&quot;12.0&quot;,&quot;confluence.frontend.conditional.inline.comments&quot;:true,&quot;confluence.frontend.connect.macro.save-as-forge&quot;:true,&quot;confluence.frontend.connect.macro.view-as-forge&quot;:true,&quot;confluence.frontend.convert-page-to-blog&quot;:&quot;v1&quot;,&quot;confluence.frontend.copy-page-tree&quot;:true,&quot;confluence.frontend.core.invites.optimisation&quot;:&quot;layout-rearrangement-and-nth-users-product-selector-variation&quot;,&quot;confluence.frontend.cql.metadata&quot;:true,&quot;confluence.frontend.create-content.blog-shortcut&quot;:true,&quot;confluence.frontend.create-content.discrete-route&quot;:true,&quot;confluence.frontend.create-team-on-behalf-of-others&quot;:true,&quot;confluence.frontend.creator-studio.personal-space-side-nav.baseline-metrics&quot;:true,&quot;confluence.frontend.debounce.mentions&quot;:&quot;150.0&quot;,&quot;confluence.frontend.delay.comment.button&quot;:true,&quot;confluence.frontend.delay.page.comments.render&quot;:&quot;delay-render&quot;,&quot;confluence.frontend.disable.invalid.extension.warning&quot;:&quot;renderer&quot;,&quot;confluence.frontend.editor.same-file-name-flag&quot;:true,&quot;confluence.frontend.eliminate.macro.context.to.link.conversion&quot;:true,&quot;confluence.frontend.embedded-confluence.enable.migration&quot;:&quot;JSM,msteams&quot;,&quot;confluence.frontend.embedded-confluence.enable.nfpe&quot;:true,&quot;confluence.frontend.enable-remote-switcher-admin-configuration&quot;:true,&quot;confluence.frontend.enable-remote-switcher-product-configuration&quot;:true,&quot;confluence.frontend.enable-ufo&quot;:true,&quot;confluence.frontend.enable.archive.permission&quot;:true,&quot;confluence.frontend.enable.ccp.seq3.upflow.transition&quot;:true,&quot;confluence.frontend.enable.ccp.seq4.upflow.transition&quot;:true,&quot;confluence.frontend.enable.help-menu.global-feedback-collector&quot;:true,&quot;confluence.frontend.enable.media.upload.api.v2&quot;:true,&quot;confluence.frontend.enduser-emcee-discover&quot;:true,&quot;confluence.frontend.engage-platform.engagekit&quot;:true,&quot;confluence.frontend.eop.recommendations.rollout&quot;:&quot;on&quot;,&quot;confluence.frontend.eop.suggestion-reason&quot;:true,&quot;confluence.frontend.extension.api-v2.macros&quot;:true,&quot;confluence.frontend.extension.chart&quot;:true,&quot;confluence.frontend.extension.chart.render&quot;:true,&quot;confluence.frontend.extension.config-panel&quot;:true,&quot;confluence.frontend.extension.config-panel.opt-out&quot;:&quot;{\&quot;macros\&quot;:[\&quot;create-from-template\&quot;,\&quot;auibutton\&quot;,\&quot;cfm-progress-bar-hyperlink-step\&quot;,\&quot;decisionreport\&quot;,\&quot;viewpdf\&quot;,\&quot;viewdoc\&quot;,\&quot;viewxls\&quot;,\&quot;viewppt\&quot;,\&quot;detailssummary\&quot;,\&quot;contentbylabel\&quot;,\&quot;blog-posts\&quot;],\&quot;on\&quot;:true}&quot;,&quot;confluence.frontend.extension.element-browser&quot;:true,&quot;confluence.frontend.extension.floatingToolbar&quot;:true,&quot;confluence.frontend.extension.plus-menu&quot;:true,&quot;confluence.frontend.external-share&quot;:&quot;not-enrolled&quot;,&quot;confluence.frontend.exus.import-from-slack&quot;:true,&quot;confluence.frontend.fabric-editor.predictable-list.enabled&quot;:true,&quot;confluence.frontend.fabric.editor.allow.synchrony.recovery&quot;:true,&quot;confluence.frontend.fabric.editor.analytics-instance-name-attribute&quot;:&quot;Production&quot;,&quot;confluence.frontend.fabric.editor.autonomy-tables&quot;:true,&quot;confluence.frontend.fabric.editor.blank.blogpost&quot;:true,&quot;confluence.frontend.fabric.editor.blank.page&quot;:true,&quot;confluence.frontend.fabric.editor.breadcrumbs.call.close&quot;:true,&quot;confluence.frontend.fabric.editor.collab-disconnect-tracking&quot;:true,&quot;confluence.frontend.fabric.editor.collapsed-breadcrumbs&quot;:&quot;collapse-and-remove-people&quot;,&quot;confluence.frontend.fabric.editor.custom-panel&quot;:true,&quot;confluence.frontend.fabric.editor.custom-panel.edit&quot;:true,&quot;confluence.frontend.fabric.editor.data-consumer-mark&quot;:true,&quot;confluence.frontend.fabric.editor.disable-spellcheck-by-browser&quot;:&quot;{}&quot;,&quot;confluence.frontend.fabric.editor.distribute-columns&quot;:true,&quot;confluence.frontend.fabric.editor.draft-in-page-tree.allowed-spaces&quot;:&quot;_ALL_SPACES_&quot;,&quot;confluence.frontend.fabric.editor.draft-in-page-tree.show-changeboarding-community-post&quot;:true,&quot;confluence.frontend.fabric.editor.edit-overlay&quot;:true,&quot;confluence.frontend.fabric.editor.embed-preview-size&quot;:&quot;control&quot;,&quot;confluence.frontend.fabric.editor.enable-sticky-table-headers&quot;:true,&quot;confluence.frontend.fabric.editor.enable.heartbeat-activity&quot;:true,&quot;confluence.frontend.fabric.editor.enable.new.editor.flags&quot;:true,&quot;confluence.frontend.fabric.editor.find-and-replace&quot;:true,&quot;confluence.frontend.fabric.editor.find-and-replace.allow-match-case&quot;:true,&quot;confluence.frontend.fabric.editor.inline.comments&quot;:&quot;fabric&quot;,&quot;confluence.frontend.fabric.editor.linking.new.activity.provider&quot;:true,&quot;confluence.frontend.fabric.editor.local-id-generation-on-tables&quot;:true,&quot;confluence.frontend.fabric.editor.maxUnsafeChromeSpellcheckingVersion&quot;:&quot;0.0&quot;,&quot;confluence.frontend.fabric.editor.media.captions&quot;:true,&quot;confluence.frontend.fabric.editor.on-close-draft-redirect-to-parent.allowed-spaces&quot;:&quot;_ALL_SPACES_&quot;,&quot;confluence.frontend.fabric.editor.page-cover-pictures&quot;:true,&quot;confluence.frontend.fabric.editor.performance-tracking&quot;:&quot;{\&quot;pasteTracking\&quot;:{\&quot;enabled\&quot;:true},\&quot;bFreezeTracking\&quot;:{\&quot;trackInteractionType\&quot;:true,\&quot;trackSeverity\&quot;:true},\&quot;contentRetrievalTracking\&quot;:{\&quot;successSamplingRate\&quot;:5.0,\&quot;failureSamplingRate\&quot;:1.0,\&quot;reportErrorStack\&quot;:false,\&quot;enabled\&quot;:true},\&quot;onEditorReadyCallbackTracking\&quot;:{\&quot;enabled\&quot;:true},\&quot;inputTracking\&quot;:{\&quot;trackSeverity\&quot;:true,\&quot;severityDegradedThreshold\&quot;:273.0,\&quot;samplingRate\&quot;:100.0,\&quot;countNodes\&quot;:true,\&quot;severityNormalThreshold\&quot;:143.0,\&quot;enabled\&quot;:true},\&quot;renderTracking\&quot;:{\&quot;editor\&quot;:{\&quot;useShallow\&quot;:false,\&quot;enabled\&quot;:true},\&quot;reactEditorView\&quot;:{\&quot;useShallow\&quot;:true,\&quot;enabled\&quot;:true}},\&quot;uiTracking\&quot;:{\&quot;samplingRate\&quot;:100.0,\&quot;enabled\&quot;:true},\&quot;ttiTracking\&quot;:{\&quot;trackSeverity\&quot;:true,\&quot;ttiSeverityNormalThreshold\&quot;:8000.0,\&quot;ttiFromInvocationSeverityDegradedThreshold\&quot;:7813.0,\&quot;ttiSeverityDegradedThreshold\&quot;:10000.0,\&quot;ttiFromInvocationSeverityNormalThreshold\&quot;:4804.0,\&quot;enabled\&quot;:true},\&quot;transactionTracking\&quot;:{\&quot;usePerformanceMarks\&quot;:true,\&quot;samplingRate\&quot;:100.0,\&quot;enabled\&quot;:true},\&quot;onChangeCallbackTracking\&quot;:{\&quot;enabled\&quot;:true},\&quot;catchAllTracking\&quot;:{\&quot;enabled\&quot;:false}}&quot;,&quot;confluence.frontend.fabric.editor.plainTextPasteLinkification&quot;:true,&quot;confluence.frontend.fabric.editor.preload.timeout&quot;:&quot;0.0&quot;,&quot;confluence.frontend.fabric.editor.queue-analytics&quot;:true,&quot;confluence.frontend.fabric.editor.referentiality&quot;:true,&quot;confluence.frontend.fabric.editor.renderer-render-tracking&quot;:&quot;{}&quot;,&quot;confluence.frontend.fabric.editor.satisfaction.survey&quot;:true,&quot;confluence.frontend.fabric.editor.satisfaction.survey.delay&quot;:&quot;28.0&quot;,&quot;confluence.frontend.fabric.editor.save-indicator-1point5&quot;:true,&quot;confluence.frontend.fabric.editor.show-hover-preview&quot;:true,&quot;confluence.frontend.fabric.editor.show.persistent.save.status&quot;:true,&quot;confluence.frontend.fabric.editor.showAvatarGroupAsPlugin&quot;:true,&quot;confluence.frontend.fabric.editor.smartcards.macro-override&quot;:&quot;jira,jiraroadmap,google-drive-sheets,google-drive-docs,OneDrive,google-drive-slides&quot;,&quot;confluence.frontend.fabric.editor.synchrony.long-polling&quot;:true,&quot;confluence.frontend.fabric.editor.synchrony.websocket-worker&quot;:true,&quot;confluence.frontend.fabric.editor.table-cell-optimisation&quot;:true,&quot;confluence.frontend.fabric.editor.table-initial-render-optimisation&quot;:true,&quot;confluence.frontend.fabric.editor.table-mousemove-optimisation&quot;:true,&quot;confluence.frontend.fabric.editor.table-overflow-shadows-optimization&quot;:true,&quot;confluence.frontend.fabric.editor.table-render-optimisation&quot;:true,&quot;confluence.frontend.fabric.editor.tooltip-discard-on-close.allowed-spaces&quot;:&quot;_ALL_SPACES_&quot;,&quot;confluence.frontend.fabric.editor.tti-tracking&quot;:&quot;{\&quot;enabled\&quot;:true}&quot;,&quot;confluence.frontend.fabric.editor.twoLineEditorToolbar&quot;:true,&quot;confluence.frontend.fabric.editor.user.internet.connection.indicator&quot;:true,&quot;confluence.frontend.fabric.editor.valid-transactions-tracking&quot;:&quot;{\&quot;samplingRate\&quot;:300.0}&quot;,&quot;confluence.frontend.fabric.editor.view-changing-experiment-toolbar-style&quot;:&quot;toolbarIcons&quot;,&quot;confluence.frontend.fabric.page.optin.migration&quot;:true,&quot;confluence.frontend.fabric.renderer.ttr-severity-tracking&quot;:&quot;{\&quot;severityDegradedThreshold\&quot;:4747.0,\&quot;severityNormalThreshold\&quot;:3775.0,\&quot;enabled\&quot;:true}&quot;,&quot;confluence.frontend.fabric.renderer.unsupported-content-levels-tracking&quot;:&quot;{\&quot;thresholds\&quot;:{\&quot;blocking\&quot;:1.5,\&quot;degraded\&quot;:1.0},\&quot;enabled\&quot;:true}&quot;,&quot;confluence.frontend.fabric.share.published&quot;:true,&quot;confluence.frontend.feed.content.query.field.test&quot;:&quot;off&quot;,&quot;confluence.frontend.feed.profile-card.follow&quot;:true,&quot;confluence.frontend.feed.reactions&quot;:&quot;not-enrolled&quot;,&quot;confluence.frontend.feed.recommendations&quot;:true,&quot;confluence.frontend.feed.recommendations-third-position&quot;:true,&quot;confluence.frontend.filter-events.exemptions&quot;:&quot;[]&quot;,&quot;confluence.frontend.focus.mode&quot;:true,&quot;confluence.frontend.focused.inline.comment.performance&quot;:&quot;variation&quot;,&quot;confluence.frontend.forge-custom-content&quot;:true,&quot;confluence.frontend.forge.extension-point.blueprint&quot;:true,&quot;confluence.frontend.forge.keyboardshortcuts.contentaction&quot;:true,&quot;confluence.frontend.forge.keyboardshortcuts.contentbylineitem&quot;:true,&quot;confluence.frontend.forge.keyboardshortcuts.contextmenu&quot;:true,&quot;confluence.frontend.forge.keyboardshortcuts.globalpage&quot;:true,&quot;confluence.frontend.forge.keyboardshortcuts.globalsettings&quot;:true,&quot;confluence.frontend.forge.keyboardshortcuts.homepagefeed&quot;:true,&quot;confluence.frontend.forge.keyboardshortcuts.spacepage&quot;:true,&quot;confluence.frontend.forge.keyboardshortcuts.spacesettings&quot;:true,&quot;confluence.frontend.full-width-templates&quot;:true,&quot;confluence.frontend.generic.comment.editor&quot;:true,&quot;confluence.frontend.global-feedback-collector-in-editor-help-center&quot;:true,&quot;confluence.frontend.growth.infi-slack-platform&quot;:true,&quot;confluence.frontend.heartbeat&quot;:true,&quot;confluence.frontend.hide-blank-drafts.allowed-spaces&quot;:&quot;_ALL_SPACES_&quot;,&quot;confluence.frontend.hide.gadgets.on.macro.selector&quot;:true,&quot;confluence.frontend.home-1.5&quot;:true,&quot;confluence.frontend.import-from-sources.tabs-enabled&quot;:true,&quot;confluence.frontend.in-editor-templates.backend-recovery&quot;:true,&quot;confluence.frontend.in-editor-templates.query-params-state&quot;:true,&quot;confluence.frontend.in-product.help&quot;:true,&quot;confluence.frontend.infi.interaction.notification.updates&quot;:true,&quot;confluence.frontend.inline.comments.nudge&quot;:&quot;variation&quot;,&quot;confluence.frontend.inline.highlights.performance&quot;:&quot;variation&quot;,&quot;confluence.frontend.invite-from-github.cohort&quot;:&quot;not-enrolled&quot;,&quot;confluence.frontend.invite.from.mention&quot;:&quot;variation-source&quot;,&quot;confluence.frontend.live-search&quot;:true,&quot;confluence.frontend.macro.analytics.tracker&quot;:true,&quot;confluence.frontend.macrobrowser.app.discovery&quot;:&quot;not-enrolled&quot;,&quot;confluence.frontend.marketplace-emcee-native-spa-enable&quot;:true,&quot;confluence.frontend.media.cards.new.experience&quot;:true,&quot;confluence.frontend.media.cards.server.side.rendering&quot;:true,&quot;confluence.frontend.media.poll.backoff.factor&quot;:&quot;1.25&quot;,&quot;confluence.frontend.media.poll.intervalms&quot;:&quot;3000.0&quot;,&quot;confluence.frontend.media.poll.maxIntervalms&quot;:&quot;200000.0&quot;,&quot;confluence.frontend.media.poll.maxattempts&quot;:&quot;30.0&quot;,&quot;confluence.frontend.media.viewer.zip.previews&quot;:true,&quot;confluence.frontend.mobile.web.full.page.takeover.variation&quot;:&quot;concrete&quot;,&quot;confluence.frontend.ncs.disconnected.delay.ms&quot;:&quot;0.0&quot;,&quot;confluence.frontend.ncs.use.404&quot;:true,&quot;confluence.frontend.network-status-listener.with-ui&quot;:true,&quot;confluence.frontend.new.feed.cards.observed.analytics&quot;:true,&quot;confluence.frontend.new.feed.rollout&quot;:&quot;on&quot;,&quot;confluence.frontend.newSitePerms&quot;:true,&quot;confluence.frontend.onboarding.account-setup-modal&quot;:&quot;not-enrolled&quot;,&quot;confluence.frontend.onboarding.account-setup-modal.calibration&quot;:&quot;experiment&quot;,&quot;confluence.frontend.onboarding.admin-quickstart-v2&quot;:&quot;enrolled&quot;,&quot;confluence.frontend.onboarding.cache.state&quot;:true,&quot;confluence.frontend.onboarding.editor-onboarding.draft-publish-2&quot;:&quot;enrolled&quot;,&quot;confluence.frontend.onboarding.editor-onboarding.tutorial-template&quot;:&quot;experiment&quot;,&quot;confluence.frontend.onboarding.editor-onboarding.user-tagging&quot;:true,&quot;confluence.frontend.onboarding.established.user&quot;:true,&quot;confluence.frontend.onboarding.experience&quot;:true,&quot;confluence.frontend.onboarding.migrations.quickstart&quot;:&quot;enrolled&quot;,&quot;confluence.frontend.onboarding.migrations.quickstart.calibration&quot;:&quot;control&quot;,&quot;confluence.frontend.onboarding.migrations.site-traits&quot;:true,&quot;confluence.frontend.onboarding.migrations.user-tagging&quot;:true,&quot;confluence.frontend.onboarding.nth-user-quickstart-v2&quot;:&quot;experiment&quot;,&quot;confluence.frontend.onboarding.nth-user-quickstart-v2.calibration&quot;:&quot;experiment&quot;,&quot;confluence.frontend.onboarding.nth.user.quickstart&quot;:&quot;enrolled&quot;,&quot;confluence.frontend.onboarding.nudges&quot;:&quot;enrolled&quot;,&quot;confluence.frontend.onboarding.onboarding-state-refactor&quot;:&quot;not-enrolled&quot;,&quot;confluence.frontend.onboarding.persistent-invite&quot;:&quot;not-enrolled&quot;,&quot;confluence.frontend.onboarding.persistent-invite.calibration&quot;:&quot;not-enrolled&quot;,&quot;confluence.frontend.onboarding.quickstart&quot;:&quot;enrolled&quot;,&quot;confluence.frontend.onboarding.quickstart.nudge&quot;:&quot;enrolled&quot;,&quot;confluence.frontend.onboarding.remove.role.screen&quot;:&quot;experiment&quot;,&quot;confluence.frontend.onboarding.segment&quot;:&quot;control&quot;,&quot;confluence.frontend.onboarding.simplify-admin-setup.test&quot;:&quot;control&quot;,&quot;confluence.frontend.onboarding.simplify.admin.setup&quot;:&quot;not-enrolled&quot;,&quot;confluence.frontend.onboarding.simplify.admin.setup.skip-invite&quot;:&quot;enrolled&quot;,&quot;confluence.frontend.onboarding.simplify.admin.setup.skip-invite.calibration&quot;:&quot;control&quot;,&quot;confluence.frontend.onboarding.xflow.jsw&quot;:&quot;experiment&quot;,&quot;confluence.frontend.org.people.picker.expansion&quot;:&quot;variation&quot;,&quot;confluence.frontend.org.people.picker.in.core.invites&quot;:true,&quot;confluence.frontend.org.people.picker.in.core.invites.prerequisite&quot;:true,&quot;confluence.frontend.page-cards-on-hover&quot;:true,&quot;confluence.frontend.page.comments.new.api&quot;:true,&quot;confluence.frontend.page.history.version&quot;:&quot;v2&quot;,&quot;confluence.frontend.page.statuses&quot;:true,&quot;confluence.frontend.personal.space.backfill&quot;:true,&quot;confluence.frontend.personal.space.backfill.onboarding&quot;:true,&quot;confluence.frontend.presentation.mode&quot;:true,&quot;confluence.frontend.presenter.mode.navigation.menu&quot;:true,&quot;confluence.frontend.pubsub.integration&quot;:true,&quot;confluence.frontend.quick-edit&quot;:true,&quot;confluence.frontend.quick-search.bitbucket&quot;:true,&quot;confluence.frontend.quick-search.google-drive&quot;:true,&quot;confluence.frontend.quick-search.opsgenie&quot;:true,&quot;confluence.frontend.quick-search.trello&quot;:true,&quot;confluence.frontend.quick.reload.strategy&quot;:&quot;SUBSCRIPTIONS&quot;,&quot;confluence.frontend.reactions&quot;:&quot;reactions&quot;,&quot;confluence.frontend.reactions.for.email&quot;:true,&quot;confluence.frontend.related.pages.space.settings&quot;:true,&quot;confluence.frontend.remove.adg3.home.feedback.button&quot;:&quot;v2&quot;,&quot;confluence.frontend.restrictions-dialog-smart-picker&quot;:true,&quot;confluence.frontend.revert.page-migrated.reload.tinymce&quot;:true,&quot;confluence.frontend.rich.ld.test.flag&quot;:&quot;not-enrolled&quot;,&quot;confluence.frontend.search-dialog.use-urs-for-people-search&quot;:true,&quot;confluence.frontend.search.experiment.rollout&quot;:&quot;off&quot;,&quot;confluence.frontend.set.collab.init.timeout&quot;:&quot;0&quot;,&quot;confluence.frontend.shortcuts-experiment&quot;:&quot;off&quot;,&quot;confluence.frontend.show-existing-labels-in-dialog&quot;:true,&quot;confluence.frontend.show.standard.upsell&quot;:true,&quot;confluence.frontend.sort.resolved.comments&quot;:true,&quot;confluence.frontend.space-pages.relevant&quot;:&quot;variant&quot;,&quot;confluence.frontend.space-quick-links&quot;:true,&quot;confluence.frontend.space-settings-v2&quot;:true,&quot;confluence.frontend.space-shortcuts.link-picker&quot;:&quot;off&quot;,&quot;confluence.frontend.space.team.mapping&quot;:&quot;experiment&quot;,&quot;confluence.frontend.spaces-dropdown.create-a-space-move&quot;:&quot;off&quot;,&quot;confluence.frontend.stein.v2&quot;:&quot;not-enrolled&quot;,&quot;confluence.frontend.support.unsupported.fabric.migration&quot;:true,&quot;confluence.frontend.sw.disable.base-and-wiki&quot;:true,&quot;confluence.frontend.sw.disable.home&quot;:true,&quot;confluence.frontend.table-visualization&quot;:true,&quot;confluence.frontend.task.batching.interval&quot;:&quot;3000.0&quot;,&quot;confluence.frontend.template-recommendations-by-title-experiment&quot;:&quot;not-enrolled&quot;,&quot;confluence.frontend.template.editor.media.support&quot;:true,&quot;confluence.frontend.throttle.legacy.macro.query&quot;:true,&quot;confluence.frontend.ufo.enable-smart-links-experience&quot;:true,&quot;confluence.frontend.ufo.rate&quot;:&quot;{}&quot;,&quot;confluence.frontend.ufo.search-dialog&quot;:true,&quot;confluence.frontend.view.all.inline.comments&quot;:&quot;not-enrolled&quot;},&quot;duration&quot;:13051.799999999814,&quot;navVersion&quot;:&quot;3&quot;},&quot;tags&quot;:[&quot;performance&quot;],&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;Navigation done&quot;,&quot;messageId&quot;:&quot;ajs-294e3771-4777-478b-bd69-64b5d534bc1d&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:48.928Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:43.220Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;confluence-frontend&quot;,&quot;actionSubject&quot;:&quot;navigation-fmp&quot;,&quot;action&quot;:&quot;done&quot;,&quot;actionSubjectId&quot;:&quot;NavigationFMP&quot;,&quot;attributes&quot;:{&quot;featureFlags&quot;:{&quot;confluence.frontend-delete-own-permission-spotlight&quot;:true,&quot;confluence.frontend-delete-own-permission-spotlight-delay-duration&quot;:&quot;3000.0&quot;,&quot;confluence.frontend.add.labels&quot;:true,&quot;confluence.frontend.advanced-search.archive-search-filters&quot;:true,&quot;confluence.frontend.advanced-search.smart-contributor-filter&quot;:true,&quot;confluence.frontend.archive.and.delete.space&quot;:true,&quot;confluence.frontend.archive.pages&quot;:true,&quot;confluence.frontend.archive.pages.allow.bulk&quot;:true,&quot;confluence.frontend.archive.pages.allow.bulk.ui.multi-select&quot;:true,&quot;confluence.frontend.archive.pages.selection-limit&quot;:&quot;500.0&quot;,&quot;confluence.frontend.archive.recommendation.email&quot;:true,&quot;confluence.frontend.bandana.client.short.socket.timeout&quot;:&quot;50.0&quot;,&quot;confluence.frontend.batch.tasks&quot;:true,&quot;confluence.frontend.branch.deployment&quot;:&quot;off&quot;,&quot;confluence.frontend.collab.ncs.max.participants&quot;:&quot;12.0&quot;,&quot;confluence.frontend.conditional.inline.comments&quot;:true,&quot;confluence.frontend.connect.macro.save-as-forge&quot;:true,&quot;confluence.frontend.connect.macro.view-as-forge&quot;:true,&quot;confluence.frontend.convert-page-to-blog&quot;:&quot;v1&quot;,&quot;confluence.frontend.copy-page-tree&quot;:true,&quot;confluence.frontend.core.invites.optimisation&quot;:&quot;layout-rearrangement-and-nth-users-product-selector-variation&quot;,&quot;confluence.frontend.cql.metadata&quot;:true,&quot;confluence.frontend.create-content.blog-shortcut&quot;:true,&quot;confluence.frontend.create-content.discrete-route&quot;:true,&quot;confluence.frontend.create-team-on-behalf-of-others&quot;:true,&quot;confluence.frontend.creator-studio.personal-space-side-nav.baseline-metrics&quot;:true,&quot;confluence.frontend.debounce.mentions&quot;:&quot;150.0&quot;,&quot;confluence.frontend.delay.comment.button&quot;:true,&quot;confluence.frontend.delay.page.comments.render&quot;:&quot;delay-render&quot;,&quot;confluence.frontend.disable.invalid.extension.warning&quot;:&quot;renderer&quot;,&quot;confluence.frontend.editor.same-file-name-flag&quot;:true,&quot;confluence.frontend.eliminate.macro.context.to.link.conversion&quot;:true,&quot;confluence.frontend.embedded-confluence.enable.migration&quot;:&quot;JSM,msteams&quot;,&quot;confluence.frontend.embedded-confluence.enable.nfpe&quot;:true,&quot;confluence.frontend.enable-remote-switcher-admin-configuration&quot;:true,&quot;confluence.frontend.enable-remote-switcher-product-configuration&quot;:true,&quot;confluence.frontend.enable-ufo&quot;:true,&quot;confluence.frontend.enable.archive.permission&quot;:true,&quot;confluence.frontend.enable.ccp.seq3.upflow.transition&quot;:true,&quot;confluence.frontend.enable.ccp.seq4.upflow.transition&quot;:true,&quot;confluence.frontend.enable.help-menu.global-feedback-collector&quot;:true,&quot;confluence.frontend.enable.media.upload.api.v2&quot;:true,&quot;confluence.frontend.enduser-emcee-discover&quot;:true,&quot;confluence.frontend.engage-platform.engagekit&quot;:true,&quot;confluence.frontend.eop.recommendations.rollout&quot;:&quot;on&quot;,&quot;confluence.frontend.eop.suggestion-reason&quot;:true,&quot;confluence.frontend.extension.api-v2.macros&quot;:true,&quot;confluence.frontend.extension.chart&quot;:true,&quot;confluence.frontend.extension.chart.render&quot;:true,&quot;confluence.frontend.extension.config-panel&quot;:true,&quot;confluence.frontend.extension.config-panel.opt-out&quot;:&quot;{\&quot;macros\&quot;:[\&quot;create-from-template\&quot;,\&quot;auibutton\&quot;,\&quot;cfm-progress-bar-hyperlink-step\&quot;,\&quot;decisionreport\&quot;,\&quot;viewpdf\&quot;,\&quot;viewdoc\&quot;,\&quot;viewxls\&quot;,\&quot;viewppt\&quot;,\&quot;detailssummary\&quot;,\&quot;contentbylabel\&quot;,\&quot;blog-posts\&quot;],\&quot;on\&quot;:true}&quot;,&quot;confluence.frontend.extension.element-browser&quot;:true,&quot;confluence.frontend.extension.floatingToolbar&quot;:true,&quot;confluence.frontend.extension.plus-menu&quot;:true,&quot;confluence.frontend.external-share&quot;:&quot;not-enrolled&quot;,&quot;confluence.frontend.exus.import-from-slack&quot;:true,&quot;confluence.frontend.fabric-editor.predictable-list.enabled&quot;:true,&quot;confluence.frontend.fabric.editor.allow.synchrony.recovery&quot;:true,&quot;confluence.frontend.fabric.editor.analytics-instance-name-attribute&quot;:&quot;Production&quot;,&quot;confluence.frontend.fabric.editor.autonomy-tables&quot;:true,&quot;confluence.frontend.fabric.editor.blank.blogpost&quot;:true,&quot;confluence.frontend.fabric.editor.blank.page&quot;:true,&quot;confluence.frontend.fabric.editor.breadcrumbs.call.close&quot;:true,&quot;confluence.frontend.fabric.editor.collab-disconnect-tracking&quot;:true,&quot;confluence.frontend.fabric.editor.collapsed-breadcrumbs&quot;:&quot;collapse-and-remove-people&quot;,&quot;confluence.frontend.fabric.editor.custom-panel&quot;:true,&quot;confluence.frontend.fabric.editor.custom-panel.edit&quot;:true,&quot;confluence.frontend.fabric.editor.data-consumer-mark&quot;:true,&quot;confluence.frontend.fabric.editor.disable-spellcheck-by-browser&quot;:&quot;{}&quot;,&quot;confluence.frontend.fabric.editor.distribute-columns&quot;:true,&quot;confluence.frontend.fabric.editor.draft-in-page-tree.allowed-spaces&quot;:&quot;_ALL_SPACES_&quot;,&quot;confluence.frontend.fabric.editor.draft-in-page-tree.show-changeboarding-community-post&quot;:true,&quot;confluence.frontend.fabric.editor.edit-overlay&quot;:true,&quot;confluence.frontend.fabric.editor.embed-preview-size&quot;:&quot;control&quot;,&quot;confluence.frontend.fabric.editor.enable-sticky-table-headers&quot;:true,&quot;confluence.frontend.fabric.editor.enable.heartbeat-activity&quot;:true,&quot;confluence.frontend.fabric.editor.enable.new.editor.flags&quot;:true,&quot;confluence.frontend.fabric.editor.find-and-replace&quot;:true,&quot;confluence.frontend.fabric.editor.find-and-replace.allow-match-case&quot;:true,&quot;confluence.frontend.fabric.editor.inline.comments&quot;:&quot;fabric&quot;,&quot;confluence.frontend.fabric.editor.linking.new.activity.provider&quot;:true,&quot;confluence.frontend.fabric.editor.local-id-generation-on-tables&quot;:true,&quot;confluence.frontend.fabric.editor.maxUnsafeChromeSpellcheckingVersion&quot;:&quot;0.0&quot;,&quot;confluence.frontend.fabric.editor.media.captions&quot;:true,&quot;confluence.frontend.fabric.editor.on-close-draft-redirect-to-parent.allowed-spaces&quot;:&quot;_ALL_SPACES_&quot;,&quot;confluence.frontend.fabric.editor.page-cover-pictures&quot;:true,&quot;confluence.frontend.fabric.editor.performance-tracking&quot;:&quot;{\&quot;pasteTracking\&quot;:{\&quot;enabled\&quot;:true},\&quot;bFreezeTracking\&quot;:{\&quot;trackInteractionType\&quot;:true,\&quot;trackSeverity\&quot;:true},\&quot;contentRetrievalTracking\&quot;:{\&quot;successSamplingRate\&quot;:5.0,\&quot;failureSamplingRate\&quot;:1.0,\&quot;reportErrorStack\&quot;:false,\&quot;enabled\&quot;:true},\&quot;onEditorReadyCallbackTracking\&quot;:{\&quot;enabled\&quot;:true},\&quot;inputTracking\&quot;:{\&quot;trackSeverity\&quot;:true,\&quot;severityDegradedThreshold\&quot;:273.0,\&quot;samplingRate\&quot;:100.0,\&quot;countNodes\&quot;:true,\&quot;severityNormalThreshold\&quot;:143.0,\&quot;enabled\&quot;:true},\&quot;renderTracking\&quot;:{\&quot;editor\&quot;:{\&quot;useShallow\&quot;:false,\&quot;enabled\&quot;:true},\&quot;reactEditorView\&quot;:{\&quot;useShallow\&quot;:true,\&quot;enabled\&quot;:true}},\&quot;uiTracking\&quot;:{\&quot;samplingRate\&quot;:100.0,\&quot;enabled\&quot;:true},\&quot;ttiTracking\&quot;:{\&quot;trackSeverity\&quot;:true,\&quot;ttiSeverityNormalThreshold\&quot;:8000.0,\&quot;ttiFromInvocationSeverityDegradedThreshold\&quot;:7813.0,\&quot;ttiSeverityDegradedThreshold\&quot;:10000.0,\&quot;ttiFromInvocationSeverityNormalThreshold\&quot;:4804.0,\&quot;enabled\&quot;:true},\&quot;transactionTracking\&quot;:{\&quot;usePerformanceMarks\&quot;:true,\&quot;samplingRate\&quot;:100.0,\&quot;enabled\&quot;:true},\&quot;onChangeCallbackTracking\&quot;:{\&quot;enabled\&quot;:true},\&quot;catchAllTracking\&quot;:{\&quot;enabled\&quot;:false}}&quot;,&quot;confluence.frontend.fabric.editor.plainTextPasteLinkification&quot;:true,&quot;confluence.frontend.fabric.editor.preload.timeout&quot;:&quot;0.0&quot;,&quot;confluence.frontend.fabric.editor.queue-analytics&quot;:true,&quot;confluence.frontend.fabric.editor.referentiality&quot;:true,&quot;confluence.frontend.fabric.editor.renderer-render-tracking&quot;:&quot;{}&quot;,&quot;confluence.frontend.fabric.editor.satisfaction.survey&quot;:true,&quot;confluence.frontend.fabric.editor.satisfaction.survey.delay&quot;:&quot;28.0&quot;,&quot;confluence.frontend.fabric.editor.save-indicator-1point5&quot;:true,&quot;confluence.frontend.fabric.editor.show-hover-preview&quot;:true,&quot;confluence.frontend.fabric.editor.show.persistent.save.status&quot;:true,&quot;confluence.frontend.fabric.editor.showAvatarGroupAsPlugin&quot;:true,&quot;confluence.frontend.fabric.editor.smartcards.macro-override&quot;:&quot;jira,jiraroadmap,google-drive-sheets,google-drive-docs,OneDrive,google-drive-slides&quot;,&quot;confluence.frontend.fabric.editor.synchrony.long-polling&quot;:true,&quot;confluence.frontend.fabric.editor.synchrony.websocket-worker&quot;:true,&quot;confluence.frontend.fabric.editor.table-cell-optimisation&quot;:true,&quot;confluence.frontend.fabric.editor.table-initial-render-optimisation&quot;:true,&quot;confluence.frontend.fabric.editor.table-mousemove-optimisation&quot;:true,&quot;confluence.frontend.fabric.editor.table-overflow-shadows-optimization&quot;:true,&quot;confluence.frontend.fabric.editor.table-render-optimisation&quot;:true,&quot;confluence.frontend.fabric.editor.tooltip-discard-on-close.allowed-spaces&quot;:&quot;_ALL_SPACES_&quot;,&quot;confluence.frontend.fabric.editor.tti-tracking&quot;:&quot;{\&quot;enabled\&quot;:true}&quot;,&quot;confluence.frontend.fabric.editor.twoLineEditorToolbar&quot;:true,&quot;confluence.frontend.fabric.editor.user.internet.connection.indicator&quot;:true,&quot;confluence.frontend.fabric.editor.valid-transactions-tracking&quot;:&quot;{\&quot;samplingRate\&quot;:300.0}&quot;,&quot;confluence.frontend.fabric.editor.view-changing-experiment-toolbar-style&quot;:&quot;toolbarIcons&quot;,&quot;confluence.frontend.fabric.page.optin.migration&quot;:true,&quot;confluence.frontend.fabric.renderer.ttr-severity-tracking&quot;:&quot;{\&quot;severityDegradedThreshold\&quot;:4747.0,\&quot;severityNormalThreshold\&quot;:3775.0,\&quot;enabled\&quot;:true}&quot;,&quot;confluence.frontend.fabric.renderer.unsupported-content-levels-tracking&quot;:&quot;{\&quot;thresholds\&quot;:{\&quot;blocking\&quot;:1.5,\&quot;degraded\&quot;:1.0},\&quot;enabled\&quot;:true}&quot;,&quot;confluence.frontend.fabric.share.published&quot;:true,&quot;confluence.frontend.feed.content.query.field.test&quot;:&quot;off&quot;,&quot;confluence.frontend.feed.profile-card.follow&quot;:true,&quot;confluence.frontend.feed.reactions&quot;:&quot;not-enrolled&quot;,&quot;confluence.frontend.feed.recommendations&quot;:true,&quot;confluence.frontend.feed.recommendations-third-position&quot;:true,&quot;confluence.frontend.filter-events.exemptions&quot;:&quot;[]&quot;,&quot;confluence.frontend.focus.mode&quot;:true,&quot;confluence.frontend.focused.inline.comment.performance&quot;:&quot;variation&quot;,&quot;confluence.frontend.forge-custom-content&quot;:true,&quot;confluence.frontend.forge.extension-point.blueprint&quot;:true,&quot;confluence.frontend.forge.keyboardshortcuts.contentaction&quot;:true,&quot;confluence.frontend.forge.keyboardshortcuts.contentbylineitem&quot;:true,&quot;confluence.frontend.forge.keyboardshortcuts.contextmenu&quot;:true,&quot;confluence.frontend.forge.keyboardshortcuts.globalpage&quot;:true,&quot;confluence.frontend.forge.keyboardshortcuts.globalsettings&quot;:true,&quot;confluence.frontend.forge.keyboardshortcuts.homepagefeed&quot;:true,&quot;confluence.frontend.forge.keyboardshortcuts.spacepage&quot;:true,&quot;confluence.frontend.forge.keyboardshortcuts.spacesettings&quot;:true,&quot;confluence.frontend.full-width-templates&quot;:true,&quot;confluence.frontend.generic.comment.editor&quot;:true,&quot;confluence.frontend.global-feedback-collector-in-editor-help-center&quot;:true,&quot;confluence.frontend.growth.infi-slack-platform&quot;:true,&quot;confluence.frontend.heartbeat&quot;:true,&quot;confluence.frontend.hide-blank-drafts.allowed-spaces&quot;:&quot;_ALL_SPACES_&quot;,&quot;confluence.frontend.hide.gadgets.on.macro.selector&quot;:true,&quot;confluence.frontend.home-1.5&quot;:true,&quot;confluence.frontend.import-from-sources.tabs-enabled&quot;:true,&quot;confluence.frontend.in-editor-templates.backend-recovery&quot;:true,&quot;confluence.frontend.in-editor-templates.query-params-state&quot;:true,&quot;confluence.frontend.in-product.help&quot;:true,&quot;confluence.frontend.infi.interaction.notification.updates&quot;:true,&quot;confluence.frontend.inline.comments.nudge&quot;:&quot;variation&quot;,&quot;confluence.frontend.inline.highlights.performance&quot;:&quot;variation&quot;,&quot;confluence.frontend.invite-from-github.cohort&quot;:&quot;not-enrolled&quot;,&quot;confluence.frontend.invite.from.mention&quot;:&quot;variation-source&quot;,&quot;confluence.frontend.live-search&quot;:true,&quot;confluence.frontend.macro.analytics.tracker&quot;:true,&quot;confluence.frontend.macrobrowser.app.discovery&quot;:&quot;not-enrolled&quot;,&quot;confluence.frontend.marketplace-emcee-native-spa-enable&quot;:true,&quot;confluence.frontend.media.cards.new.experience&quot;:true,&quot;confluence.frontend.media.cards.server.side.rendering&quot;:true,&quot;confluence.frontend.media.poll.backoff.factor&quot;:&quot;1.25&quot;,&quot;confluence.frontend.media.poll.intervalms&quot;:&quot;3000.0&quot;,&quot;confluence.frontend.media.poll.maxIntervalms&quot;:&quot;200000.0&quot;,&quot;confluence.frontend.media.poll.maxattempts&quot;:&quot;30.0&quot;,&quot;confluence.frontend.media.viewer.zip.previews&quot;:true,&quot;confluence.frontend.mobile.web.full.page.takeover.variation&quot;:&quot;concrete&quot;,&quot;confluence.frontend.ncs.disconnected.delay.ms&quot;:&quot;0.0&quot;,&quot;confluence.frontend.ncs.use.404&quot;:true,&quot;confluence.frontend.network-status-listener.with-ui&quot;:true,&quot;confluence.frontend.new.feed.cards.observed.analytics&quot;:true,&quot;confluence.frontend.new.feed.rollout&quot;:&quot;on&quot;,&quot;confluence.frontend.newSitePerms&quot;:true,&quot;confluence.frontend.onboarding.account-setup-modal&quot;:&quot;not-enrolled&quot;,&quot;confluence.frontend.onboarding.account-setup-modal.calibration&quot;:&quot;experiment&quot;,&quot;confluence.frontend.onboarding.admin-quickstart-v2&quot;:&quot;enrolled&quot;,&quot;confluence.frontend.onboarding.cache.state&quot;:true,&quot;confluence.frontend.onboarding.editor-onboarding.draft-publish-2&quot;:&quot;enrolled&quot;,&quot;confluence.frontend.onboarding.editor-onboarding.tutorial-template&quot;:&quot;experiment&quot;,&quot;confluence.frontend.onboarding.editor-onboarding.user-tagging&quot;:true,&quot;confluence.frontend.onboarding.established.user&quot;:true,&quot;confluence.frontend.onboarding.experience&quot;:true,&quot;confluence.frontend.onboarding.migrations.quickstart&quot;:&quot;enrolled&quot;,&quot;confluence.frontend.onboarding.migrations.quickstart.calibration&quot;:&quot;control&quot;,&quot;confluence.frontend.onboarding.migrations.site-traits&quot;:true,&quot;confluence.frontend.onboarding.migrations.user-tagging&quot;:true,&quot;confluence.frontend.onboarding.nth-user-quickstart-v2&quot;:&quot;experiment&quot;,&quot;confluence.frontend.onboarding.nth-user-quickstart-v2.calibration&quot;:&quot;experiment&quot;,&quot;confluence.frontend.onboarding.nth.user.quickstart&quot;:&quot;enrolled&quot;,&quot;confluence.frontend.onboarding.nudges&quot;:&quot;enrolled&quot;,&quot;confluence.frontend.onboarding.onboarding-state-refactor&quot;:&quot;not-enrolled&quot;,&quot;confluence.frontend.onboarding.persistent-invite&quot;:&quot;not-enrolled&quot;,&quot;confluence.frontend.onboarding.persistent-invite.calibration&quot;:&quot;not-enrolled&quot;,&quot;confluence.frontend.onboarding.quickstart&quot;:&quot;enrolled&quot;,&quot;confluence.frontend.onboarding.quickstart.nudge&quot;:&quot;enrolled&quot;,&quot;confluence.frontend.onboarding.remove.role.screen&quot;:&quot;experiment&quot;,&quot;confluence.frontend.onboarding.segment&quot;:&quot;control&quot;,&quot;confluence.frontend.onboarding.simplify-admin-setup.test&quot;:&quot;control&quot;,&quot;confluence.frontend.onboarding.simplify.admin.setup&quot;:&quot;not-enrolled&quot;,&quot;confluence.frontend.onboarding.simplify.admin.setup.skip-invite&quot;:&quot;enrolled&quot;,&quot;confluence.frontend.onboarding.simplify.admin.setup.skip-invite.calibration&quot;:&quot;control&quot;,&quot;confluence.frontend.onboarding.xflow.jsw&quot;:&quot;experiment&quot;,&quot;confluence.frontend.org.people.picker.expansion&quot;:&quot;variation&quot;,&quot;confluence.frontend.org.people.picker.in.core.invites&quot;:true,&quot;confluence.frontend.org.people.picker.in.core.invites.prerequisite&quot;:true,&quot;confluence.frontend.page-cards-on-hover&quot;:true,&quot;confluence.frontend.page.comments.new.api&quot;:true,&quot;confluence.frontend.page.history.version&quot;:&quot;v2&quot;,&quot;confluence.frontend.page.statuses&quot;:true,&quot;confluence.frontend.personal.space.backfill&quot;:true,&quot;confluence.frontend.personal.space.backfill.onboarding&quot;:true,&quot;confluence.frontend.presentation.mode&quot;:true,&quot;confluence.frontend.presenter.mode.navigation.menu&quot;:true,&quot;confluence.frontend.pubsub.integration&quot;:true,&quot;confluence.frontend.quick-edit&quot;:true,&quot;confluence.frontend.quick-search.bitbucket&quot;:true,&quot;confluence.frontend.quick-search.google-drive&quot;:true,&quot;confluence.frontend.quick-search.opsgenie&quot;:true,&quot;confluence.frontend.quick-search.trello&quot;:true,&quot;confluence.frontend.quick.reload.strategy&quot;:&quot;SUBSCRIPTIONS&quot;,&quot;confluence.frontend.reactions&quot;:&quot;reactions&quot;,&quot;confluence.frontend.reactions.for.email&quot;:true,&quot;confluence.frontend.related.pages.space.settings&quot;:true,&quot;confluence.frontend.remove.adg3.home.feedback.button&quot;:&quot;v2&quot;,&quot;confluence.frontend.restrictions-dialog-smart-picker&quot;:true,&quot;confluence.frontend.revert.page-migrated.reload.tinymce&quot;:true,&quot;confluence.frontend.rich.ld.test.flag&quot;:&quot;not-enrolled&quot;,&quot;confluence.frontend.search-dialog.use-urs-for-people-search&quot;:true,&quot;confluence.frontend.search.experiment.rollout&quot;:&quot;off&quot;,&quot;confluence.frontend.set.collab.init.timeout&quot;:&quot;0&quot;,&quot;confluence.frontend.shortcuts-experiment&quot;:&quot;off&quot;,&quot;confluence.frontend.show-existing-labels-in-dialog&quot;:true,&quot;confluence.frontend.show.standard.upsell&quot;:true,&quot;confluence.frontend.sort.resolved.comments&quot;:true,&quot;confluence.frontend.space-pages.relevant&quot;:&quot;variant&quot;,&quot;confluence.frontend.space-quick-links&quot;:true,&quot;confluence.frontend.space-settings-v2&quot;:true,&quot;confluence.frontend.space-shortcuts.link-picker&quot;:&quot;off&quot;,&quot;confluence.frontend.space.team.mapping&quot;:&quot;experiment&quot;,&quot;confluence.frontend.spaces-dropdown.create-a-space-move&quot;:&quot;off&quot;,&quot;confluence.frontend.stein.v2&quot;:&quot;not-enrolled&quot;,&quot;confluence.frontend.support.unsupported.fabric.migration&quot;:true,&quot;confluence.frontend.sw.disable.base-and-wiki&quot;:true,&quot;confluence.frontend.sw.disable.home&quot;:true,&quot;confluence.frontend.table-visualization&quot;:true,&quot;confluence.frontend.task.batching.interval&quot;:&quot;3000.0&quot;,&quot;confluence.frontend.template-recommendations-by-title-experiment&quot;:&quot;not-enrolled&quot;,&quot;confluence.frontend.template.editor.media.support&quot;:true,&quot;confluence.frontend.throttle.legacy.macro.query&quot;:true,&quot;confluence.frontend.ufo.enable-smart-links-experience&quot;:true,&quot;confluence.frontend.ufo.rate&quot;:&quot;{}&quot;,&quot;confluence.frontend.ufo.search-dialog&quot;:true,&quot;confluence.frontend.view.all.inline.comments&quot;:&quot;not-enrolled&quot;},&quot;duration&quot;:14482},&quot;tags&quot;:[&quot;performance&quot;],&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;navigation-fmp done&quot;,&quot;messageId&quot;:&quot;ajs-81fe8e0c-aabc-4894-95e7-dff1040f0026&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:48.928Z&quot;}],&quot;sentAt&quot;:&quot;2022-09-26T05:58:48.928Z&quot;,&quot;metadata&quot;:{&quot;eventCount&quot;:19,&quot;resilienceMechanism&quot;:&quot;indexeddb&quot;,&quot;httpRetryCount&quot;:1}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/gasv3/api/v1/batch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Login-364" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;batch&quot;:[{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:43.993Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;performance&quot;,&quot;actionSubject&quot;:&quot;performance&quot;,&quot;action&quot;:&quot;measured&quot;,&quot;attributes&quot;:{&quot;task&quot;:&quot;confluence.fe.page-segment-load.app-navigation&quot;,&quot;properties&quot;:{&quot;event:key&quot;:&quot;confluence.fe.page-segment-load.app-navigation&quot;,&quot;event:type&quot;:&quot;page-segment-load&quot;,&quot;event:product&quot;:&quot;confluence&quot;,&quot;event:route&quot;:&quot;HOME&quot;,&quot;event:id&quot;:&quot;app-navigation&quot;,&quot;event:localHour&quot;:11,&quot;event:localDayOfWeek&quot;:1,&quot;event:region&quot;:&quot;confluence-prod-ap-8-3.prod.atl-paas.net&quot;,&quot;app:framework:name&quot;:&quot;react&quot;,&quot;app:framework:version&quot;:&quot;16.14.0&quot;,&quot;app:web:version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;bm:version&quot;:3,&quot;telemetry:browser:name&quot;:&quot;Chrome&quot;,&quot;telemetry:browser:version&quot;:&quot;105.0.0.0&quot;,&quot;telemetry:cpus&quot;:3,&quot;telemetry:memory&quot;:8,&quot;telemetry:network:effectiveType&quot;:&quot;4g&quot;,&quot;telemetry:network:rtt&quot;:200,&quot;telemetry:network:downlink&quot;:4.35,&quot;custom:pageLoadInfo&quot;:{&quot;uuid&quot;:&quot;HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;isInitial&quot;:true,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:13087.700000000186},&quot;featureFlags&quot;:{&quot;confluence.frontend.pollinator.synthetic.check.tenants&quot;:false,&quot;confluence.frontend.delay.comment.button&quot;:true,&quot;confluence.frontend.delay.page.comments.render&quot;:&quot;delay-render&quot;,&quot;confluence.frontend.enable.external.collab&quot;:false,&quot;confluence.frontend.eop.recommendations.rollout&quot;:&quot;on&quot;,&quot;confluence.frontend.focused.inline.comment.performance&quot;:&quot;variation&quot;,&quot;confluence.frontend.live-search&quot;:true,&quot;confluence.frontend.presentation.mode&quot;:true,&quot;confluence.ssr.fabric.macros&quot;:null,&quot;confluence.ssr.page-tree&quot;:null,&quot;confluence.ssr.page-tree.best.effort&quot;:null,&quot;confluence.ssr.read-time&quot;:null,&quot;confluence.ssr.page-statuses&quot;:null,&quot;confluence.ssr.home.feed.best-effort&quot;:null,&quot;confluence.ssr.shortcuts&quot;:null,&quot;confluence.ssr.shortcuts.link-filter&quot;:null,&quot;confluence.ssr.smartlinks&quot;:null,&quot;confluence.ssr.page-share-and-perms-button&quot;:null,&quot;confluence.frontend.page-share-and-permissions&quot;:false,&quot;confluence.frontend.economy-growth.discover-apps-in-sidebar.experiment&quot;:false,&quot;confluence.frontend.top.level.body.content.query&quot;:false,&quot;confluence.ssr.integrating.public.links.to.nsd&quot;:null,&quot;confluence.frontend.integrating.public.links.to.nsd&quot;:false,&quot;confluence.frontend.fabric.editor.macro.adf.frontend.render&quot;:false,&quot;confluence.frontend.bandana.client.short.socket.timeout&quot;:&quot;50.0&quot;},&quot;hostname&quot;:&quot;thinktimetechnology.atlassian.net&quot;,&quot;confluence:cloudId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;confluence:environment&quot;:&quot;PRODUCTION&quot;,&quot;confluence:shard&quot;:&quot;confluence-prod-ap-8-3.prod.atl-paas.net&quot;,&quot;confluence:ssr&quot;:&quot;false&quot;,&quot;confluence:uniqueIdentifier&quot;:&quot;undefined&quot;,&quot;confluence:initial&quot;:true,&quot;confluence:criticalAssets&quot;:{&quot;cachedRate&quot;:1.3157894736842104,&quot;count&quot;:76,&quot;size&quot;:4047874,&quot;cachedSize&quot;:12473,&quot;nonCachedSize&quot;:4035401,&quot;sizeBasedCachedRate&quot;:0.0030813706157849776},&quot;timings:resource&quot;:{&quot;query-preloader.js&quot;:{&quot;startTime&quot;:1555,&quot;duration&quot;:1448,&quot;workerStart&quot;:0,&quot;fetchStart&quot;:1555,&quot;type&quot;:&quot;script&quot;},&quot;unknown&quot;:{&quot;startTime&quot;:1557,&quot;duration&quot;:1445,&quot;workerStart&quot;:0,&quot;fetchStart&quot;:1557,&quot;type&quot;:&quot;script&quot;},&quot;cgraphql&quot;:{&quot;startTime&quot;:3076,&quot;duration&quot;:320,&quot;workerStart&quot;:0,&quot;fetchStart&quot;:3076,&quot;type&quot;:&quot;fetch&quot;,&quot;ttfb&quot;:3395,&quot;size&quot;:44167},&quot;in-product-messages&quot;:{&quot;startTime&quot;:4343,&quot;duration&quot;:672,&quot;workerStart&quot;:0,&quot;fetchStart&quot;:4343,&quot;type&quot;:&quot;fetch&quot;,&quot;ttfb&quot;:5014,&quot;size&quot;:2127},&quot;force-update.json&quot;:{&quot;startTime&quot;:4683,&quot;duration&quot;:750,&quot;workerStart&quot;:0,&quot;fetchStart&quot;:4683,&quot;type&quot;:&quot;fetch&quot;,&quot;ttfb&quot;:0,&quot;size&quot;:0}},&quot;metric:fmp&quot;:17871,&quot;metric:tti&quot;:17871,&quot;metric:fmp:histogramBuckets&quot;:&quot;1000_2000_2500_3000_4000_5000&quot;,&quot;metric:tti:histogramBuckets&quot;:&quot;2000_2500_3000_3500_4000_5000_6000&quot;,&quot;pageVisible:state&quot;:&quot;visible&quot;,&quot;pageVisible:value&quot;:true,&quot;event:initial&quot;:true,&quot;timings:bundleEval&quot;:{&quot;SiteHomepageRedirectLoader(0)&quot;:{&quot;startTime&quot;:3921,&quot;duration&quot;:599},&quot;GoToHomeLoader(0)&quot;:{&quot;startTime&quot;:3919,&quot;duration&quot;:624},&quot;MainLayout(0)&quot;:{&quot;startTime&quot;:4492,&quot;duration&quot;:258},&quot;LazyHome1Point5(0)&quot;:{&quot;startTime&quot;:4817,&quot;duration&quot;:209},&quot;Overview(0)&quot;:{&quot;startTime&quot;:5204,&quot;duration&quot;:6673},&quot;LazySpaces(0)&quot;:{&quot;startTime&quot;:12019,&quot;duration&quot;:148},&quot;LegacyCssOverridesLoader(1)&quot;:{&quot;startTime&quot;:12526,&quot;duration&quot;:1577},&quot;packages.confluence-frontend-server.src.components.ReduxError.src.index(1)&quot;:{&quot;startTime&quot;:12540,&quot;duration&quot;:1579},&quot;ShortcutsProvider(1)&quot;:{&quot;startTime&quot;:12535,&quot;duration&quot;:1586},&quot;ConnectSupport(1)&quot;:{&quot;startTime&quot;:12542,&quot;duration&quot;:2228},&quot;AppNavigationBaseLoader(1)&quot;:{&quot;startTime&quot;:12568,&quot;duration&quot;:5006},&quot;packages.confluence-frontend-server.src.components.EngagementMessages.EngagementMessages(1)&quot;:{&quot;startTime&quot;:12555,&quot;duration&quot;:6052}}}},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;performance measured&quot;,&quot;messageId&quot;:&quot;ajs-1a925a91-73c3-444d-9fc6-495c6a31d05b&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:49.365Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:46.834Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;@atlaskit/feature-flag-client&quot;,&quot;actionSubject&quot;:&quot;feature&quot;,&quot;action&quot;:&quot;exposed&quot;,&quot;attributes&quot;:{&quot;flagKey&quot;:&quot;confluence.frontend.quick-search.prequery.filters&quot;,&quot;reason&quot;:&quot;OFF&quot;,&quot;ruleId&quot;:null,&quot;value&quot;:false},&quot;tags&quot;:[&quot;defaultExposure&quot;,&quot;measurement&quot;],&quot;highPriority&quot;:true,&quot;eventType&quot;:&quot;track&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;feature exposed&quot;,&quot;messageId&quot;:&quot;ajs-47b7e789-02c3-4355-a984-46dee4dd96a8&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:49.365Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:47.210Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;searchDialog&quot;,&quot;actionSubject&quot;:&quot;experiment&quot;,&quot;action&quot;:&quot;loaded&quot;,&quot;attributes&quot;:{&quot;abTest&quot;:{&quot;abTestId&quot;:&quot;google-drive-ab&quot;,&quot;controlId&quot;:&quot;google-drive-hidden&quot;,&quot;experimentId&quot;:&quot;google-drive-hidden&quot;},&quot;experimentRequestDuration&quot;:263,&quot;isMultiProduct&quot;:false,&quot;frontend&quot;:&quot;@atlassian/product-search-dialog@8.69.0&quot;,&quot;isSticky&quot;:true,&quot;isStickyUpdated&quot;:false,&quot;stickyQueryUpdated&quot;:false},&quot;nonPrivacySafeAttributes&quot;:{},&quot;tags&quot;:[&quot;fabricElements&quot;],&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;experiment loaded&quot;,&quot;messageId&quot;:&quot;ajs-8978bb5e-5cbf-4942-a53f-3dcdaec60525&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:49.365Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:47.212Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;measured&quot;,&quot;actionSubject&quot;:&quot;experience&quot;,&quot;action&quot;:&quot;measured&quot;,&quot;attributes&quot;:{&quot;properties&quot;:{&quot;event:source&quot;:{&quot;name&quot;:&quot;ufo/web&quot;,&quot;version&quot;:&quot;0.1.5&quot;},&quot;event:schema&quot;:&quot;0.1.7&quot;,&quot;event:product&quot;:&quot;confluence&quot;,&quot;event:region&quot;:&quot;confluence-prod-ap-8-3.prod.atl-paas.net&quot;,&quot;event:hostname&quot;:&quot;thinktimetechnology.atlassian.net&quot;,&quot;event:route&quot;:&quot;&quot;,&quot;event:browser:name&quot;:&quot;Chrome&quot;,&quot;event:browser:version&quot;:&quot;105.0.0.0&quot;,&quot;event:cpus&quot;:3,&quot;event:memory&quot;:8,&quot;event:network:effectiveType&quot;:&quot;4g&quot;,&quot;event:network:rtt&quot;:200,&quot;event:network:downlink&quot;:4.35,&quot;app:framework:name&quot;:&quot;react&quot;,&quot;app:framework:version&quot;:&quot;16.14.0&quot;,&quot;app:web:version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;experience:name&quot;:&quot;intialisation&quot;,&quot;experience:key&quot;:&quot;platform.fe.load.search-dialog.intialisation&quot;,&quot;experience:status&quot;:&quot;SUCCEEDED&quot;,&quot;experience:duration&quot;:380,&quot;experience:startTime&quot;:21453,&quot;experience:spanId&quot;:&quot;9f702668-a688-4b47-a526-9ecdb9838c12&quot;,&quot;experience:pageVisible&quot;:&quot;visible&quot;},&quot;performance&quot;:{&quot;event:key&quot;:&quot;platform.fe.page-segment-load.search-dialog.intialisation&quot;,&quot;event:type&quot;:&quot;page-segment-load&quot;,&quot;metric:tti&quot;:380,&quot;metric:fmp&quot;:380,&quot;payloadTime&quot;:1.8999999994412065},&quot;task&quot;:&quot;intialisation&quot;},&quot;tags&quot;:[&quot;observability&quot;],&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;experience measured&quot;,&quot;messageId&quot;:&quot;ajs-cfdd79d8-ccbd-4f1e-9d6b-2d75bba7f32f&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:49.365Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:47.213Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;@atlaskit/feature-flag-client&quot;,&quot;actionSubject&quot;:&quot;feature&quot;,&quot;action&quot;:&quot;exposed&quot;,&quot;attributes&quot;:{&quot;flagKey&quot;:&quot;confluence.frontend.enable-ufo-reactions-experiences&quot;,&quot;reason&quot;:&quot;FALLTHROUGH&quot;,&quot;ruleId&quot;:null,&quot;value&quot;:false},&quot;tags&quot;:[&quot;defaultExposure&quot;,&quot;measurement&quot;],&quot;highPriority&quot;:true,&quot;eventType&quot;:&quot;track&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;feature exposed&quot;,&quot;messageId&quot;:&quot;ajs-fd5fa87b-ff37-4cf4-a53d-9c54e51a6a73&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:49.365Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:47.213Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;@atlaskit/feature-flag-client&quot;,&quot;actionSubject&quot;:&quot;feature&quot;,&quot;action&quot;:&quot;exposed&quot;,&quot;attributes&quot;:{&quot;flagKey&quot;:&quot;confluence.frontend.enable-ufo-emoji-experiences&quot;,&quot;reason&quot;:&quot;FALLTHROUGH&quot;,&quot;ruleId&quot;:null,&quot;value&quot;:false},&quot;tags&quot;:[&quot;defaultExposure&quot;,&quot;measurement&quot;],&quot;highPriority&quot;:true,&quot;eventType&quot;:&quot;track&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;feature exposed&quot;,&quot;messageId&quot;:&quot;ajs-42e12d72-4859-4887-a086-7b91f40acd6c&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:49.365Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:47.228Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;performance&quot;,&quot;actionSubject&quot;:&quot;performance&quot;,&quot;action&quot;:&quot;measured&quot;,&quot;attributes&quot;:{&quot;task&quot;:&quot;confluence.fe.page-segment-load.search-box&quot;,&quot;properties&quot;:{&quot;event:key&quot;:&quot;confluence.fe.page-segment-load.search-box&quot;,&quot;event:type&quot;:&quot;page-segment-load&quot;,&quot;event:product&quot;:&quot;confluence&quot;,&quot;event:route&quot;:&quot;HOME&quot;,&quot;event:id&quot;:&quot;search-box&quot;,&quot;event:localHour&quot;:11,&quot;event:localDayOfWeek&quot;:1,&quot;event:region&quot;:&quot;confluence-prod-ap-8-3.prod.atl-paas.net&quot;,&quot;app:framework:name&quot;:&quot;react&quot;,&quot;app:framework:version&quot;:&quot;16.14.0&quot;,&quot;app:web:version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;bm:version&quot;:3,&quot;telemetry:browser:name&quot;:&quot;Chrome&quot;,&quot;telemetry:browser:version&quot;:&quot;105.0.0.0&quot;,&quot;telemetry:cpus&quot;:3,&quot;telemetry:memory&quot;:8,&quot;telemetry:network:effectiveType&quot;:&quot;4g&quot;,&quot;telemetry:network:rtt&quot;:200,&quot;telemetry:network:downlink&quot;:4.35,&quot;custom:pageLoadInfo&quot;:{&quot;uuid&quot;:&quot;HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;isInitial&quot;:true,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:17049.89999999944},&quot;featureFlags&quot;:{&quot;confluence.frontend.pollinator.synthetic.check.tenants&quot;:false,&quot;confluence.frontend.delay.comment.button&quot;:true,&quot;confluence.frontend.delay.page.comments.render&quot;:&quot;delay-render&quot;,&quot;confluence.frontend.enable.external.collab&quot;:false,&quot;confluence.frontend.eop.recommendations.rollout&quot;:&quot;on&quot;,&quot;confluence.frontend.focused.inline.comment.performance&quot;:&quot;variation&quot;,&quot;confluence.frontend.live-search&quot;:true,&quot;confluence.frontend.presentation.mode&quot;:true,&quot;confluence.ssr.fabric.macros&quot;:null,&quot;confluence.ssr.page-tree&quot;:null,&quot;confluence.ssr.page-tree.best.effort&quot;:null,&quot;confluence.ssr.read-time&quot;:null,&quot;confluence.ssr.page-statuses&quot;:null,&quot;confluence.ssr.home.feed.best-effort&quot;:null,&quot;confluence.ssr.shortcuts&quot;:null,&quot;confluence.ssr.shortcuts.link-filter&quot;:null,&quot;confluence.ssr.smartlinks&quot;:null,&quot;confluence.ssr.page-share-and-perms-button&quot;:null,&quot;confluence.frontend.page-share-and-permissions&quot;:false,&quot;confluence.frontend.economy-growth.discover-apps-in-sidebar.experiment&quot;:false,&quot;confluence.frontend.top.level.body.content.query&quot;:false,&quot;confluence.ssr.integrating.public.links.to.nsd&quot;:null,&quot;confluence.frontend.integrating.public.links.to.nsd&quot;:false,&quot;confluence.frontend.fabric.editor.macro.adf.frontend.render&quot;:false,&quot;confluence.frontend.bandana.client.short.socket.timeout&quot;:&quot;50.0&quot;},&quot;hostname&quot;:&quot;thinktimetechnology.atlassian.net&quot;,&quot;confluence:cloudId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;confluence:environment&quot;:&quot;PRODUCTION&quot;,&quot;confluence:shard&quot;:&quot;confluence-prod-ap-8-3.prod.atl-paas.net&quot;,&quot;confluence:ssr&quot;:&quot;false&quot;,&quot;confluence:uniqueIdentifier&quot;:&quot;undefined&quot;,&quot;confluence:initial&quot;:true,&quot;confluence:criticalAssets&quot;:{&quot;cachedRate&quot;:0.6711409395973155,&quot;count&quot;:149,&quot;size&quot;:5940442,&quot;cachedSize&quot;:12473,&quot;nonCachedSize&quot;:5927969,&quot;sizeBasedCachedRate&quot;:0.0020996754113582795},&quot;timings:resource&quot;:{&quot;query-preloader.js&quot;:{&quot;startTime&quot;:1555,&quot;duration&quot;:1448,&quot;workerStart&quot;:0,&quot;fetchStart&quot;:1555,&quot;type&quot;:&quot;script&quot;},&quot;unknown&quot;:{&quot;startTime&quot;:1557,&quot;duration&quot;:1445,&quot;workerStart&quot;:0,&quot;fetchStart&quot;:1557,&quot;type&quot;:&quot;script&quot;},&quot;cgraphql&quot;:{&quot;startTime&quot;:3076,&quot;duration&quot;:320,&quot;workerStart&quot;:0,&quot;fetchStart&quot;:3076,&quot;type&quot;:&quot;fetch&quot;,&quot;ttfb&quot;:3395,&quot;size&quot;:44167},&quot;in-product-messages&quot;:{&quot;startTime&quot;:4343,&quot;duration&quot;:672,&quot;workerStart&quot;:0,&quot;fetchStart&quot;:4343,&quot;type&quot;:&quot;fetch&quot;,&quot;ttfb&quot;:5014,&quot;size&quot;:2127},&quot;force-update.json&quot;:{&quot;startTime&quot;:4683,&quot;duration&quot;:750,&quot;workerStart&quot;:0,&quot;fetchStart&quot;:4683,&quot;type&quot;:&quot;fetch&quot;,&quot;ttfb&quot;:0,&quot;size&quot;:0}},&quot;metric:fmp&quot;:21834,&quot;metric:tti&quot;:21834,&quot;metric:fmp:histogramBuckets&quot;:&quot;1000_2000_2500_3000_4000_5000&quot;,&quot;metric:tti:histogramBuckets&quot;:&quot;2000_2500_3000_3500_4000_5000_6000&quot;,&quot;pageVisible:state&quot;:&quot;visible&quot;,&quot;pageVisible:value&quot;:true,&quot;event:initial&quot;:true,&quot;timings:bundleEval&quot;:{&quot;SiteHomepageRedirectLoader(0)&quot;:{&quot;startTime&quot;:3921,&quot;duration&quot;:599},&quot;GoToHomeLoader(0)&quot;:{&quot;startTime&quot;:3919,&quot;duration&quot;:624},&quot;MainLayout(0)&quot;:{&quot;startTime&quot;:4492,&quot;duration&quot;:258},&quot;LazyHome1Point5(0)&quot;:{&quot;startTime&quot;:4817,&quot;duration&quot;:209},&quot;Overview(0)&quot;:{&quot;startTime&quot;:5204,&quot;duration&quot;:6673},&quot;LazySpaces(0)&quot;:{&quot;startTime&quot;:12019,&quot;duration&quot;:148},&quot;LegacyCssOverridesLoader(1)&quot;:{&quot;startTime&quot;:12526,&quot;duration&quot;:1577},&quot;packages.confluence-frontend-server.src.components.ReduxError.src.index(1)&quot;:{&quot;startTime&quot;:12540,&quot;duration&quot;:1579},&quot;ShortcutsProvider(1)&quot;:{&quot;startTime&quot;:12535,&quot;duration&quot;:1586},&quot;ConnectSupport(1)&quot;:{&quot;startTime&quot;:12542,&quot;duration&quot;:2228},&quot;AppNavigationBaseLoader(1)&quot;:{&quot;startTime&quot;:12568,&quot;duration&quot;:5006},&quot;packages.confluence-frontend-server.src.components.EngagementMessages.EngagementMessages(1)&quot;:{&quot;startTime&quot;:12555,&quot;duration&quot;:6052},&quot;WatchDialog(1)&quot;:{&quot;startTime&quot;:12606,&quot;duration&quot;:6349},&quot;RenderForFeatureFlag(1)&quot;:{&quot;startTime&quot;:12610,&quot;duration&quot;:6361},&quot;CreateSpaceStandardButton(1)&quot;:{&quot;startTime&quot;:12614,&quot;duration&quot;:6359},&quot;ShareButtonLiteLoader(1)&quot;:{&quot;startTime&quot;:12582,&quot;duration&quot;:6426},&quot;LazyAppSwitcher(1)&quot;:{&quot;startTime&quot;:19736,&quot;duration&quot;:869},&quot;LazyPeopleMenu(1)&quot;:{&quot;startTime&quot;:19738,&quot;duration&quot;:876},&quot;LazyCreate(1)&quot;:{&quot;startTime&quot;:19757,&quot;duration&quot;:863},&quot;LazyNotifications(1)&quot;:{&quot;startTime&quot;:19887,&quot;duration&quot;:756},&quot;LazyHelp(1)&quot;:{&quot;startTime&quot;:19895,&quot;duration&quot;:775},&quot;LazySearch(1)&quot;:{&quot;startTime&quot;:19775,&quot;duration&quot;:966},&quot;LazySettings(1)&quot;:{&quot;startTime&quot;:19907,&quot;duration&quot;:859},&quot;LazyProfile(1)&quot;:{&quot;startTime&quot;:19910,&quot;duration&quot;:863},&quot;next.packages.forge-ui.src.lazy.ts(1)&quot;:{&quot;startTime&quot;:19955,&quot;duration&quot;:830},&quot;PersistentUpgradeBanner(1)&quot;:{&quot;startTime&quot;:21166,&quot;duration&quot;:397},&quot;BannerSpacer(1)&quot;:{&quot;startTime&quot;:21169,&quot;duration&quot;:395},&quot;SuperAdminBanner(1)&quot;:{&quot;startTime&quot;:21148,&quot;duration&quot;:423}}}},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;performance measured&quot;,&quot;messageId&quot;:&quot;ajs-0dd6ecdf-eb15-40d7-b881-687d3aecb8fc&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:49.365Z&quot;}],&quot;sentAt&quot;:&quot;2022-09-26T05:58:49.365Z&quot;,&quot;metadata&quot;:{&quot;resilienceMechanism&quot;:&quot;indexeddb&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/gasv3/api/v1/batch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="03_Project_New_Born" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-365" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;batch&quot;:[{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:47.409Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;@atlaskit/feature-flag-client&quot;,&quot;actionSubject&quot;:&quot;feature&quot;,&quot;action&quot;:&quot;exposed&quot;,&quot;attributes&quot;:{&quot;flagKey&quot;:&quot;confluence.frontend.onboarding.nudges&quot;,&quot;reason&quot;:&quot;FALLTHROUGH&quot;,&quot;ruleId&quot;:null,&quot;value&quot;:&quot;enrolled&quot;},&quot;tags&quot;:[&quot;optInExposure&quot;,&quot;measurement&quot;],&quot;highPriority&quot;:true,&quot;eventType&quot;:&quot;track&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;feature exposed&quot;,&quot;messageId&quot;:&quot;ajs-87443de7-bb17-4072-adbd-f739fbc58bf6&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:50.220Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:47.539Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskStart&quot;,&quot;attributes&quot;:{&quot;quickstartType&quot;:&quot;nthUserQuickstartV2&quot;,&quot;uuid&quot;:&quot;HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;isInitial&quot;:true,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:17432.200000000186,&quot;startTime&quot;:22215.800000000745,&quot;task&quot;:&quot;onboarding-quickstart&quot;,&quot;taskId&quot;:&quot;ba746c0d-8300-4055-accb-ef5d800582d0&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskStart&quot;,&quot;messageId&quot;:&quot;ajs-26ad41b8-3b2f-417a-a836-2db26aa7f111&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:50.220Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:47.539Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;@atlaskit/feature-flag-client&quot;,&quot;actionSubject&quot;:&quot;feature&quot;,&quot;action&quot;:&quot;exposed&quot;,&quot;attributes&quot;:{&quot;flagKey&quot;:&quot;confluence.frontend.onboarding.migrations.quickstart.calibration&quot;,&quot;reason&quot;:&quot;FALLTHROUGH&quot;,&quot;ruleId&quot;:null,&quot;value&quot;:&quot;control&quot;},&quot;tags&quot;:[&quot;optInExposure&quot;,&quot;measurement&quot;],&quot;highPriority&quot;:true,&quot;eventType&quot;:&quot;track&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;feature exposed&quot;,&quot;messageId&quot;:&quot;ajs-3543f9d9-967d-408b-971c-f9a7214bda13&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:50.220Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:47.540Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskSuccess&quot;,&quot;attributes&quot;:{&quot;quickstartType&quot;:&quot;nthUserQuickstartV2&quot;,&quot;uuid&quot;:&quot;HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;isInitial&quot;:true,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:17432.5,&quot;startTime&quot;:22215.800000000745,&quot;duration&quot;:0,&quot;activeDuration&quot;:0,&quot;adjustedDuration&quot;:0,&quot;task&quot;:&quot;onboarding-quickstart&quot;,&quot;taskId&quot;:&quot;ba746c0d-8300-4055-accb-ef5d800582d0&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskSuccess&quot;,&quot;messageId&quot;:&quot;ajs-34634214-49b3-4625-b4b5-2c3088b9fcae&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:50.220Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:47.539Z&quot;,&quot;type&quot;:&quot;page&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;title&quot;:&quot;&quot;,&quot;path&quot;:&quot;&quot;,&quot;url&quot;:&quot;&quot;,&quot;referrer&quot;:&quot;&quot;,&quot;search&quot;:&quot;&quot;,&quot;eventType&quot;:&quot;screen&quot;,&quot;attributes&quot;:{&quot;quickstartType&quot;:&quot;nthUserQuickstartV2&quot;},&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;name&quot;:&quot;confluenceOnboardingQuickstartButtonDrawer&quot;,&quot;messageId&quot;:&quot;ajs-b75ad94e-a4e7-4908-8304-46e385d5c297&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:50.220Z&quot;}],&quot;sentAt&quot;:&quot;2022-09-26T05:58:50.220Z&quot;,&quot;metadata&quot;:{&quot;resilienceMechanism&quot;:&quot;indexeddb&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/gasv3/api/v1/batch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-367" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;batch&quot;:[{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:52.086Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;home&quot;,&quot;actionSubject&quot;:&quot;home-v1.5&quot;,&quot;action&quot;:&quot;dwelled&quot;,&quot;attributes&quot;:{&quot;dwellTime&quot;:20009,&quot;finalDwellEvent&quot;:false,&quot;homeVersion&quot;:&quot;chicago&quot;},&quot;eventType&quot;:&quot;track&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;home-v1.5 dwelled&quot;,&quot;messageId&quot;:&quot;ajs-544491b4-f0e0-400e-aa9f-ee354810b43b&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:52.597Z&quot;}],&quot;sentAt&quot;:&quot;2022-09-26T05:58:52.597Z&quot;,&quot;metadata&quot;:{&quot;eventCount&quot;:1,&quot;resilienceMechanism&quot;:&quot;indexeddb&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/gasv3/api/v1/batch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-371" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument" enabled="true">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;ScreenQuery&quot;,&quot;variables&quot;:{&quot;spaceKey&quot;:&quot;PN&quot;},&quot;query&quot;:&quot;query ScreenQuery($spaceKey: String!) {\n  space(key: $spaceKey) {\n    __typename\n    id\n    homepage {\n      __typename\n      id\n    }\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cgraphql?q=ScreenQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="GraphQLHTTPSampler.operationName">ScreenQuery</stringProp>
            <stringProp name="GraphQLHTTPSampler.query">query ScreenQuery($spaceKey: String!) {
  space(key: $spaceKey) {
    __typename
    id
    homepage {
      __typename
      id
    }
  }
}
</stringProp>
            <stringProp name="GraphQLHTTPSampler.variables">{&quot;spaceKey&quot;:&quot;PN&quot;}</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/wiki/home?cloudId=f21b70d0-8bad-458e-9a03-d1d9544e0e8c</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-APOLLO-OPERATION-NAME" elementType="Header">
                  <stringProp name="Header.name">X-APOLLO-OPERATION-NAME</stringProp>
                  <stringProp name="Header.value">ScreenQuery</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-370" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument" enabled="true">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SpaceOverviewQuery&quot;,&quot;variables&quot;:{&quot;spaceKey&quot;:&quot;PN&quot;},&quot;query&quot;:&quot;query SpaceOverviewQuery($spaceKey: String!) {\n  space(key: $spaceKey) {\n    __typename\n    id\n    name\n    homepage {\n      __typename\n      id\n      properties(keys: [\&quot;emoji-title-published\&quot;]) {\n        __typename\n        nodes {\n          __typename\n          id\n          key\n          value\n        }\n      }\n    }\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cgraphql?q=SpaceOverviewQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="GraphQLHTTPSampler.operationName">SpaceOverviewQuery</stringProp>
            <stringProp name="GraphQLHTTPSampler.query">query SpaceOverviewQuery($spaceKey: String!) {
  space(key: $spaceKey) {
    __typename
    id
    name
    homepage {
      __typename
      id
      properties(keys: [&quot;emoji-title-published&quot;]) {
        __typename
        nodes {
          __typename
          id
          key
          value
        }
      }
    }
  }
}
</stringProp>
            <stringProp name="GraphQLHTTPSampler.variables">{&quot;spaceKey&quot;:&quot;PN&quot;}</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/wiki/home?cloudId=f21b70d0-8bad-458e-9a03-d1d9544e0e8c</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-APOLLO-OPERATION-NAME" elementType="Header">
                  <stringProp name="Header.name">X-APOLLO-OPERATION-NAME</stringProp>
                  <stringProp name="Header.value">SpaceOverviewQuery</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-372" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument" enabled="true">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;spaceForBaseSpaceQuery&quot;,&quot;variables&quot;:{&quot;spaceKey&quot;:&quot;PN&quot;},&quot;query&quot;:&quot;query spaceForBaseSpaceQuery($spaceKey: String) {\n  spaces(spaceKey: $spaceKey) {\n    __typename\n    nodes {\n      __typename\n      id\n      key\n      name\n      homepage {\n        __typename\n        id\n      }\n      icon {\n        __typename\n        ...iconDetails\n      }\n      type\n      settings {\n        __typename\n        routeOverrideEnabled\n      }\n      theme {\n        __typename\n        themeKey\n      }\n      lookAndFeel {\n        __typename\n        headings {\n          __typename\n          key\n          value\n        }\n        menus {\n          __typename\n          hoverOrFocus {\n            __typename\n            key\n            value\n          }\n          color\n        }\n        header {\n          __typename\n          backgroundColor\n          button {\n            __typename\n            backgroundColor\n            color\n          }\n          primaryNavigation {\n            __typename\n            color\n            hoverOrFocus {\n              __typename\n              key\n              value\n            }\n          }\n          secondaryNavigation {\n            __typename\n            color\n            hoverOrFocus {\n              __typename\n              key\n              value\n            }\n          }\n          search {\n            __typename\n            backgroundColor\n            color\n          }\n        }\n        content {\n          __typename\n          screen {\n            __typename\n            background\n            backgroundColor\n            backgroundImage\n            backgroundPosition\n            backgroundSize\n            backgroundRepeat\n            backgroundOrigin\n            backgroundClip\n            backgroundAttachment\n            backgroundBlendMode\n            layer {\n              __typename\n              background\n              backgroundColor\n              backgroundImage\n              backgroundPosition\n              backgroundSize\n              backgroundRepeat\n              backgroundOrigin\n              backgroundClip\n              backgroundAttachment\n              backgroundBlendMode\n              width\n              height\n            }\n            gutterTop\n            gutterRight\n            gutterBottom\n            gutterLeft\n          }\n          container {\n            __typename\n            background\n            backgroundColor\n            backgroundImage\n            backgroundPosition\n            backgroundSize\n            backgroundRepeat\n            backgroundOrigin\n            backgroundClip\n            backgroundAttachment\n            backgroundBlendMode\n            padding\n            borderRadius\n          }\n          header {\n            __typename\n            background\n            backgroundColor\n            backgroundImage\n            backgroundPosition\n            backgroundSize\n            backgroundRepeat\n            backgroundOrigin\n            backgroundClip\n            backgroundAttachment\n            backgroundBlendMode\n            padding\n            borderRadius\n          }\n          body {\n            __typename\n            background\n            backgroundColor\n            backgroundImage\n            backgroundPosition\n            backgroundSize\n            backgroundRepeat\n            backgroundOrigin\n            backgroundClip\n            backgroundAttachment\n            backgroundBlendMode\n            padding\n            borderRadius\n          }\n        }\n      }\n      metadata {\n        __typename\n        labels {\n          __typename\n          nodes {\n            __typename\n            prefix\n            name\n            id\n          }\n        }\n      }\n      operations {\n        __typename\n        operation\n        targetType\n      }\n    }\n  }\n}\n\nfragment iconDetails on Icon {\n  __typename\n  path\n  width\n  height\n  isDefault\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cgraphql?q=spaceForBaseSpaceQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="GraphQLHTTPSampler.operationName">spaceForBaseSpaceQuery</stringProp>
            <stringProp name="GraphQLHTTPSampler.query">query spaceForBaseSpaceQuery($spaceKey: String) {
  spaces(spaceKey: $spaceKey) {
    __typename
    nodes {
      __typename
      id
      key
      name
      homepage {
        __typename
        id
      }
      icon {
        __typename
        ...iconDetails
      }
      type
      settings {
        __typename
        routeOverrideEnabled
      }
      theme {
        __typename
        themeKey
      }
      lookAndFeel {
        __typename
        headings {
          __typename
          key
          value
        }
        menus {
          __typename
          hoverOrFocus {
            __typename
            key
            value
          }
          color
        }
        header {
          __typename
          backgroundColor
          button {
            __typename
            backgroundColor
            color
          }
          primaryNavigation {
            __typename
            color
            hoverOrFocus {
              __typename
              key
              value
            }
          }
          secondaryNavigation {
            __typename
            color
            hoverOrFocus {
              __typename
              key
              value
            }
          }
          search {
            __typename
            backgroundColor
            color
          }
        }
        content {
          __typename
          screen {
            __typename
            background
            backgroundColor
            backgroundImage
            backgroundPosition
            backgroundSize
            backgroundRepeat
            backgroundOrigin
            backgroundClip
            backgroundAttachment
            backgroundBlendMode
            layer {
              __typename
              background
              backgroundColor
              backgroundImage
              backgroundPosition
              backgroundSize
              backgroundRepeat
              backgroundOrigin
              backgroundClip
              backgroundAttachment
              backgroundBlendMode
              width
              height
            }
            gutterTop
            gutterRight
            gutterBottom
            gutterLeft
          }
          container {
            __typename
            background
            backgroundColor
            backgroundImage
            backgroundPosition
            backgroundSize
            backgroundRepeat
            backgroundOrigin
            backgroundClip
            backgroundAttachment
            backgroundBlendMode
            padding
            borderRadius
          }
          header {
            __typename
            background
            backgroundColor
            backgroundImage
            backgroundPosition
            backgroundSize
            backgroundRepeat
            backgroundOrigin
            backgroundClip
            backgroundAttachment
            backgroundBlendMode
            padding
            borderRadius
          }
          body {
            __typename
            background
            backgroundColor
            backgroundImage
            backgroundPosition
            backgroundSize
            backgroundRepeat
            backgroundOrigin
            backgroundClip
            backgroundAttachment
            backgroundBlendMode
            padding
            borderRadius
          }
        }
      }
      metadata {
        __typename
        labels {
          __typename
          nodes {
            __typename
            prefix
            name
            id
          }
        }
      }
      operations {
        __typename
        operation
        targetType
      }
    }
  }
}

fragment iconDetails on Icon {
  __typename
  path
  width
  height
  isDefault
}
</stringProp>
            <stringProp name="GraphQLHTTPSampler.variables">{&quot;spaceKey&quot;:&quot;PN&quot;}</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/wiki/home?cloudId=f21b70d0-8bad-458e-9a03-d1d9544e0e8c</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-APOLLO-OPERATION-NAME" elementType="Header">
                  <stringProp name="Header.name">X-APOLLO-OPERATION-NAME</stringProp>
                  <stringProp name="Header.value">spaceForBaseSpaceQuery</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-369" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="detailed" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">detailed</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="origin" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">origin</stringProp>
                  <stringProp name="Argument.value">extension-provider</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/wiki/plugins/macrobrowser/browse-macros.action</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-373" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;type&quot;:&quot;metric&quot;,&quot;meta&quot;:{&quot;globalTags&quot;:[&quot;page:HOME&quot;,&quot;cloudId:f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;shard:confluence-prod-ap-8-3.prod.atl-paas.net&quot;,&quot;product:confluence&quot;,&quot;version:CLASSIC-master-12091&quot;,&quot;track:prod&quot;]},&quot;data&quot;:[{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:onboarding-editor/recent-draft-spotlight&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskStart&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:true&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:13085.700000000186&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:43.191Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:navigation/app-nav-global-navigation&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskSuccess&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:true&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:13087.599999999627&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:43.193Z&quot;},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;experience-tracker:navigation/app-nav-global-navigation.performance&quot;,&quot;value&quot;:13046,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskSuccess&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:true&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:13087.599999999627&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:43.193Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:onboarding-quickstart&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskStart&quot;,&quot;isActiveTab:true&quot;,&quot;quickstartType:nthUserQuickstartV2&quot;,&quot;uuid:HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:true&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:17432.200000000186&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:47.537Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:onboarding-quickstart&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskSuccess&quot;,&quot;isActiveTab:true&quot;,&quot;quickstartType:nthUserQuickstartV2&quot;,&quot;uuid:HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:true&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:17432.5&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:47.538Z&quot;},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;experience-tracker:onboarding-quickstart.performance&quot;,&quot;value&quot;:0,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskSuccess&quot;,&quot;isActiveTab:true&quot;,&quot;quickstartType:nthUserQuickstartV2&quot;,&quot;uuid:HOME-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171910105&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:true&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:17432.5&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:47.538Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:view-content&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskStart&quot;,&quot;isActiveTab:true&quot;,&quot;contentType:space&quot;,&quot;isFromExternal:false&quot;,&quot;uuid:SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:false&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:0.20000000018626451&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:52.743Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:space-overview&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskStart&quot;,&quot;isActiveTab:true&quot;,&quot;contentType:space&quot;,&quot;isFromExternal:false&quot;,&quot;uuid:SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:false&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:0.20000000018626451&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:52.744Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:view-page:complete&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskStart&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:false&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:0.40000000037252903&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:52.744Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;session&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;type:transition&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:52.744Z&quot;}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/telemetry</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-381" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="experience" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">experience</stringProp>
                  <stringProp name="Argument.value">product-search-dialog</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="productId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">productId</stringProp>
                  <stringProp name="Argument.value">bitbucket</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/xpsearch-aggregator/scopes/v1/f21b70d0-8bad-458e-9a03-d1d9544e0e8c</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-380" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="accountId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">accountId</stringProp>
                  <stringProp name="Argument.value">${acc}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="expand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">expand</stringProp>
                  <stringProp name="Argument.value">applicationRoles</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/rest/api/3/user</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-382" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="source" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">source</stringProp>
                  <stringProp name="Argument.value">atlaskitNotificationLogClient</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/notification-log/api/3/notifications/count/unseen</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="x-app-version" elementType="Header">
                  <stringProp name="Header.name">x-app-version</stringProp>
                  <stringProp name="Header.value">6.0.0-atlaskitNotificationLogClient</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-391" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">confluence-v1.prod.atl-paas.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/master/force-update.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-390" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;cloudId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;scopes&quot;:[&quot;confluence.page,blogpost,attachment&quot;],&quot;experience&quot;:&quot;product-search-dialog&quot;,&quot;product&quot;:&quot;confluence&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/xpsearch-aggregator/experiment/v1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-389" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="source" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">source</stringProp>
                  <stringProp name="Argument.value">atlaskitNotificationLogClient</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currentCount" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentCount</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/notification-log/api/3/notifications/count/unseen</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="x-app-version" elementType="Header">
                  <stringProp name="Header.name">x-app-version</stringProp>
                  <stringProp name="Header.value">6.0.0-atlaskitNotificationLogClient</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-388" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/session/heartbeat</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-392" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="promotedSpacesLimit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">promotedSpacesLimit</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="otherSpacesLimit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">otherSpacesLimit</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="promotedSpaceKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">promotedSpaceKey</stringProp>
                  <stringProp name="Argument.value">PN</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/wiki/rest/create-dialog/1.0/spaces</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-394" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="experience" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">experience</stringProp>
                  <stringProp name="Argument.value">product-search-dialog</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="productId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">productId</stringProp>
                  <stringProp name="Argument.value">jira</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="productId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">productId</stringProp>
                  <stringProp name="Argument.value">opsgenie</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="productId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">productId</stringProp>
                  <stringProp name="Argument.value">townsquare</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="productId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">productId</stringProp>
                  <stringProp name="Argument.value">trello</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/xpsearch-aggregator/scopes/v1/f21b70d0-8bad-458e-9a03-d1d9544e0e8c</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-393" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;operationName&quot;:&quot;MainLayoutQuery&quot;,&quot;variables&quot;:{&quot;spaceKey&quot;:&quot;PN&quot;},&quot;query&quot;:&quot;query MainLayoutQuery($spaceKey: String!) {\n  space(key: $spaceKey) {\n    id\n    lookAndFeel {\n      content {\n        screen {\n          background\n          backgroundColor\n          backgroundImage\n          backgroundPosition\n          backgroundSize\n          backgroundRepeat\n          backgroundOrigin\n          backgroundClip\n          backgroundAttachment\n          backgroundBlendMode\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;},{&quot;operationName&quot;:&quot;GetQuickstartState&quot;,&quot;variables&quot;:{&quot;key&quot;:[&quot;quickstart-state:isPanelOpen&quot;,&quot;quickstart-state:isDismissed&quot;,&quot;quickstart-state:openTaskId&quot;,&quot;quickstart-state:openComponentId&quot;,&quot;quickstart-state:jswConfIntroCompleted&quot;,&quot;quickstart-state:helpCompleted&quot;,&quot;quickstart-state:spaceModalCompleted&quot;,&quot;quickstart-state:spaceTourCompleted&quot;,&quot;quickstart-state:collaborateCompleted&quot;,&quot;quickstart-state:homeModalCompleted&quot;,&quot;quickstart-state:homeTourCompleted&quot;,&quot;quickstart-state:mobileCompleted&quot;,&quot;quickstart-state:hasSeenDismissedFlag&quot;,&quot;quickstart-state:isMigratedUserV2&quot;,&quot;quickstart-state:isMigratedUserCalibrationState&quot;,&quot;quickstart-state:jswXflowSwitcherTourCompleted&quot;,&quot;onboarding-origin-state:attributes&quot;,&quot;quickstart-state:jswXFlowModalCompleted&quot;,&quot;quickstart-state:jswXflowInvitePeopleModalOpen&quot;,&quot;quickstart-state:jswXflowInvitePeopleNudgeCompleted&quot;,&quot;quickstart-state:jswXFlowInvitedEmails&quot;,&quot;quickstart-state:editorTutorialTaskCompleted&quot;,&quot;quickstart-state:qsv2ReadConfluenceGuideCompleted&quot;,&quot;quickstart-state:qsv2InviteTeammateCompleted&quot;,&quot;quickstart-state:qsv2IntegrationCompleted&quot;,&quot;quickstart-state:qsv2SiteVideoTourCompleted&quot;,&quot;quickstart-state:qsv2SpotlightCompleted&quot;,&quot;quickstart-state:migrationsWelcomeCompleted&quot;,&quot;quickstart-state:migrationsNewPageCompleted&quot;,&quot;quickstart-state:migrationsCollaborateCompleted&quot;,&quot;quickstart-state:migrationsFindAndOrganizePagesCompleted&quot;,&quot;quickstart-state:migrationsEditAndCustomizeContentCompleted&quot;,&quot;quickstart-state:simplifyAdminRenameSiteCompleted&quot;,&quot;quickstart-state:nqsv2HelpCompleted&quot;,&quot;quickstart-state:nqsv2CreateCompleted&quot;,&quot;quickstart-state:nqsv2CollaborateCompleted&quot;,&quot;quickstart-state:nqsv2Confluence101Completed&quot;]},&quot;query&quot;:&quot;query GetQuickstartState($key: [String]) {\n  onboardingState(key: $key) {\n    key\n    value\n    __typename\n  }\n  ...UserPermissionFragment\n}\n\nfragment UserPermissionFragment on Query {\n  user(current: true) {\n    id\n    confluence {\n      permissionType\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n&quot;},{&quot;operationName&quot;:&quot;WebItemLocationQuery&quot;,&quot;variables&quot;:{&quot;location&quot;:&quot;system.header/left&quot;,&quot;locations&quot;:[],&quot;contentId&quot;:null,&quot;spaceKey&quot;:null,&quot;version&quot;:null},&quot;query&quot;:&quot;query WebItemLocationQuery($location: String, $locations: [String], $contentId: ID, $spaceKey: String, $version: Int) {\n  webItemSections(location: $location, locations: $locations, contentId: $contentId, key: $spaceKey, version: $version) {\n    id\n    label\n    cacheKey\n    styleClass\n    items {\n      accessKey\n      completeKey\n      hasCondition\n      id\n      icon {\n        path\n        __typename\n      }\n      params {\n        key\n        value\n        __typename\n      }\n      label\n      moduleKey\n      section\n      styleClass\n      tooltip\n      url\n      urlWithoutContextPath\n      weight\n      __typename\n    }\n    __typename\n  }\n}\n&quot;},{&quot;operationName&quot;:&quot;SettingsComponentQuery&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SettingsComponentQuery {\n  user(current: true) {\n    id\n    confluence {\n      operations {\n        operation\n        targetType\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;},{&quot;operationName&quot;:&quot;WebPanelLocationQuery&quot;,&quot;variables&quot;:{&quot;spaceKey&quot;:&quot;PN&quot;,&quot;location&quot;:&quot;atl.general&quot;},&quot;query&quot;:&quot;query WebPanelLocationQuery($location: String, $contentId: ID, $spaceKey: String) {\n  webPanels(location: $location, contentId: $contentId, key: $spaceKey) {\n    moduleKey\n    completeKey\n    html\n    location\n    label\n    weight\n    name\n    __typename\n  }\n}\n&quot;},{&quot;operationName&quot;:&quot;WebPanelLocationQuery&quot;,&quot;variables&quot;:{&quot;spaceKey&quot;:&quot;PN&quot;,&quot;location&quot;:&quot;atl.footer&quot;},&quot;query&quot;:&quot;query WebPanelLocationQuery($location: String, $contentId: ID, $spaceKey: String) {\n  webPanels(location: $location, contentId: $contentId, key: $spaceKey) {\n    moduleKey\n    completeKey\n    html\n    location\n    label\n    weight\n    name\n    __typename\n  }\n}\n&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cgraphql?q=MainLayoutQuery,GetQuickstartState,WebItemLocationQuery:system.header/left,SettingsComponentQuery,WebPanelLocationQuery,WebPanelLocationQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/wiki/spaces/PN/overview</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-APOLLO-OPERATION-NAME" elementType="Header">
                  <stringProp name="Header.name">X-APOLLO-OPERATION-NAME</stringProp>
                  <stringProp name="Header.value">MainLayoutQuery,GetQuickstartState,WebItemLocationQuery:system.header/left,SettingsComponentQuery,WebPanelLocationQuery,WebPanelLocationQuery</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-395" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;type&quot;:&quot;metric&quot;,&quot;meta&quot;:{&quot;synthetic&quot;:&quot;false&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;env&quot;:&quot;prod&quot;,&quot;os&quot;:&quot;windows&quot;,&quot;platform&quot;:&quot;desktop&quot;,&quot;browser&quot;:&quot;chrome&quot;},&quot;metalId&quot;:&quot;88dcca98-e854-4063-954c-eabe3aeb25d2&quot;,&quot;data&quot;:[{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.first_meaningful_paint&quot;,&quot;tags&quot;:[&quot;active_tab:true&quot;,&quot;initial_load:false&quot;,&quot;page:segment-app-navigation&quot;,&quot;gsd_histogram:500_1000_1500_2000_2500_3000&quot;],&quot;value&quot;:254,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.time_to_interactive&quot;,&quot;tags&quot;:[&quot;active_tab:true&quot;,&quot;initial_load:false&quot;,&quot;page:segment-app-navigation&quot;,&quot;gsd_histogram:1000_1500_2000_2500_3000_4000&quot;],&quot;value&quot;:254,&quot;sampleRate&quot;:1}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/metal/ingest</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-398" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument" enabled="true">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;WebItemLocationQuery&quot;,&quot;variables&quot;:{&quot;location&quot;:&quot;system.content.button&quot;,&quot;locations&quot;:[],&quot;contentId&quot;:&quot;33329&quot;,&quot;spaceKey&quot;:null,&quot;version&quot;:null},&quot;query&quot;:&quot;query WebItemLocationQuery($location: String, $locations: [String], $contentId: ID, $spaceKey: String, $version: Int) {\n  webItemSections(location: $location, locations: $locations, contentId: $contentId, key: $spaceKey, version: $version) {\n    __typename\n    id\n    label\n    cacheKey\n    styleClass\n    items {\n      __typename\n      accessKey\n      completeKey\n      hasCondition\n      id\n      icon {\n        __typename\n        path\n      }\n      params {\n        __typename\n        key\n        value\n      }\n      label\n      moduleKey\n      section\n      styleClass\n      tooltip\n      url\n      urlWithoutContextPath\n      weight\n    }\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cgraphql?q=WebItemLocationQuery:system.content.button</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="GraphQLHTTPSampler.operationName">WebItemLocationQuery</stringProp>
            <stringProp name="GraphQLHTTPSampler.query">query WebItemLocationQuery($location: String, $locations: [String], $contentId: ID, $spaceKey: String, $version: Int) {
  webItemSections(location: $location, locations: $locations, contentId: $contentId, key: $spaceKey, version: $version) {
    __typename
    id
    label
    cacheKey
    styleClass
    items {
      __typename
      accessKey
      completeKey
      hasCondition
      id
      icon {
        __typename
        path
      }
      params {
        __typename
        key
        value
      }
      label
      moduleKey
      section
      styleClass
      tooltip
      url
      urlWithoutContextPath
      weight
    }
  }
}
</stringProp>
            <stringProp name="GraphQLHTTPSampler.variables">{&quot;location&quot;:&quot;system.content.button&quot;,&quot;locations&quot;:[],&quot;contentId&quot;:&quot;33329&quot;,&quot;spaceKey&quot;:null,&quot;version&quot;:null}</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/wiki/spaces/PN/overview</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-APOLLO-OPERATION-NAME" elementType="Header">
                  <stringProp name="Header.name">X-APOLLO-OPERATION-NAME</stringProp>
                  <stringProp name="Header.value">WebItemLocationQuery:system.content.button</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-397" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument" enabled="true">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;EditButtonQuery&quot;,&quot;variables&quot;:{&quot;contentId&quot;:&quot;33329&quot;},&quot;query&quot;:&quot;query EditButtonQuery($contentId: ID!) {\n  content(id: $contentId) {\n    __typename\n    nodes {\n      __typename\n      ...ContentOperationsFragment\n      metadata {\n        __typename\n        frontend {\n          __typename\n          fabricEditorSupported\n          embedded\n        }\n      }\n      space {\n        __typename\n        id\n        key\n      }\n    }\n  }\n}\n\nfragment ContentOperationsFragment on Content {\n  __typename\n  id\n  type\n  operations {\n    __typename\n    operation\n    targetType\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cgraphql?q=EditButtonQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="GraphQLHTTPSampler.operationName">EditButtonQuery</stringProp>
            <stringProp name="GraphQLHTTPSampler.query">query EditButtonQuery($contentId: ID!) {
  content(id: $contentId) {
    __typename
    nodes {
      __typename
      ...ContentOperationsFragment
      metadata {
        __typename
        frontend {
          __typename
          fabricEditorSupported
          embedded
        }
      }
      space {
        __typename
        id
        key
      }
    }
  }
}

fragment ContentOperationsFragment on Content {
  __typename
  id
  type
  operations {
    __typename
    operation
    targetType
  }
}
</stringProp>
            <stringProp name="GraphQLHTTPSampler.variables">{&quot;contentId&quot;:&quot;33329&quot;}</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/wiki/spaces/PN/overview</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-APOLLO-OPERATION-NAME" elementType="Header">
                  <stringProp name="Header.name">X-APOLLO-OPERATION-NAME</stringProp>
                  <stringProp name="Header.value">EditButtonQuery</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-400" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;operationName&quot;:&quot;PageRestrictionsQuery&quot;,&quot;variables&quot;:{&quot;contentId&quot;:&quot;33329&quot;,&quot;status&quot;:[&quot;current&quot;,&quot;draft&quot;,&quot;archived&quot;]},&quot;query&quot;:&quot;query PageRestrictionsQuery($contentId: ID!, $status: [String]) {\n  singleContent(id: $contentId, status: $status) {\n    id\n    hasInheritedRestrictions\n    hasViewRestrictions\n    hasRestrictions\n    ancestors {\n      id\n      title\n      hasRestrictions\n      links {\n        webui\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;},{&quot;operationName&quot;:&quot;WebPanelLocationQuery&quot;,&quot;variables&quot;:{&quot;contentId&quot;:&quot;33329&quot;,&quot;location&quot;:&quot;atl.general&quot;},&quot;query&quot;:&quot;query WebPanelLocationQuery($location: String, $contentId: ID, $spaceKey: String) {\n  webPanels(location: $location, contentId: $contentId, key: $spaceKey) {\n    moduleKey\n    completeKey\n    html\n    location\n    label\n    weight\n    name\n    __typename\n  }\n}\n&quot;},{&quot;operationName&quot;:&quot;WebPanelLocationQuery&quot;,&quot;variables&quot;:{&quot;contentId&quot;:&quot;33329&quot;,&quot;location&quot;:&quot;atl.footer&quot;},&quot;query&quot;:&quot;query WebPanelLocationQuery($location: String, $contentId: ID, $spaceKey: String) {\n  webPanels(location: $location, contentId: $contentId, key: $spaceKey) {\n    moduleKey\n    completeKey\n    html\n    location\n    label\n    weight\n    name\n    __typename\n  }\n}\n&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cgraphql?q=PageRestrictionsQuery,WebPanelLocationQuery,WebPanelLocationQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/wiki/spaces/PN/overview</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-APOLLO-OPERATION-NAME" elementType="Header">
                  <stringProp name="Header.name">X-APOLLO-OPERATION-NAME</stringProp>
                  <stringProp name="Header.value">PageRestrictionsQuery,WebPanelLocationQuery,WebPanelLocationQuery</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-396" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument" enabled="true">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;ContentUnifiedQuery&quot;,&quot;variables&quot;:{&quot;spaceKey&quot;:&quot;PN&quot;,&quot;contentId&quot;:&quot;33329&quot;,&quot;versionOverride&quot;:null},&quot;query&quot;:&quot;query ContentUnifiedQuery($contentId: ID!, $spaceKey: String = null, $versionOverride: Int) @SLA {\n  content(id: $contentId, version: $versionOverride) {\n    __typename\n    nodes {\n      __typename\n      id\n      type\n      space {\n        __typename\n        id\n        key\n      }\n      version {\n        __typename\n        confRev\n      }\n      properties(key: \&quot;cover-picture-id-published\&quot;) {\n        __typename\n        nodes {\n          __typename\n          id\n          key\n          value\n          version {\n            __typename\n            number\n          }\n        }\n      }\n      metadata {\n        __typename\n        lastModifiedDate\n        frontend {\n          __typename\n          fabricEditorSupported\n          spaFriendly\n        }\n      }\n      body {\n        __typename\n        dynamic {\n          __typename\n          representation\n          value\n          webresource {\n            __typename\n            superbatch {\n              __typename\n              tags {\n                __typename\n                js\n                css\n              }\n            }\n            tags {\n              __typename\n              js\n              css\n            }\n          }\n        }\n      }\n      ...contentAppearancePublishedFragment\n    }\n  }\n  space(key: $spaceKey) {\n    __typename\n    id\n    theme {\n      __typename\n      name\n      themeKey\n    }\n    lookAndFeel {\n      __typename\n      content {\n        __typename\n        screen {\n          __typename\n          background\n          backgroundColor\n          backgroundImage\n          backgroundPosition\n          backgroundSize\n          backgroundRepeat\n          backgroundOrigin\n          backgroundClip\n          backgroundAttachment\n          backgroundBlendMode\n          layer {\n            __typename\n            background\n            backgroundColor\n            backgroundImage\n            backgroundPosition\n            backgroundSize\n            backgroundRepeat\n            backgroundOrigin\n            backgroundClip\n            backgroundAttachment\n            backgroundBlendMode\n            width\n            height\n          }\n          gutterTop\n          gutterRight\n          gutterBottom\n          gutterLeft\n        }\n        container {\n          __typename\n          background\n          backgroundColor\n          backgroundImage\n          backgroundPosition\n          backgroundSize\n          backgroundRepeat\n          backgroundOrigin\n          backgroundClip\n          backgroundAttachment\n          backgroundBlendMode\n          padding\n          borderRadius\n        }\n      }\n    }\n    settings {\n      __typename\n      routeOverrideEnabled\n    }\n  }\n}\n\nfragment contentAppearancePublishedFragment on Content {\n  __typename\n  appearancePublished: properties(key: \&quot;content-appearance-published\&quot;) {\n    __typename\n    ...contentAppearanceInnerFragment\n  }\n}\n\nfragment contentAppearanceInnerFragment on PaginatedJsonContentPropertyList {\n  __typename\n  nodes {\n    __typename\n    id\n    key\n    value\n    version {\n      __typename\n      number\n    }\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cgraphql?q=ContentUnifiedQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="GraphQLHTTPSampler.operationName">ContentUnifiedQuery</stringProp>
            <stringProp name="GraphQLHTTPSampler.query">query ContentUnifiedQuery($contentId: ID!, $spaceKey: String = null, $versionOverride: Int) @SLA {
  content(id: $contentId, version: $versionOverride) {
    __typename
    nodes {
      __typename
      id
      type
      space {
        __typename
        id
        key
      }
      version {
        __typename
        confRev
      }
      properties(key: &quot;cover-picture-id-published&quot;) {
        __typename
        nodes {
          __typename
          id
          key
          value
          version {
            __typename
            number
          }
        }
      }
      metadata {
        __typename
        lastModifiedDate
        frontend {
          __typename
          fabricEditorSupported
          spaFriendly
        }
      }
      body {
        __typename
        dynamic {
          __typename
          representation
          value
          webresource {
            __typename
            superbatch {
              __typename
              tags {
                __typename
                js
                css
              }
            }
            tags {
              __typename
              js
              css
            }
          }
        }
      }
      ...contentAppearancePublishedFragment
    }
  }
  space(key: $spaceKey) {
    __typename
    id
    theme {
      __typename
      name
      themeKey
    }
    lookAndFeel {
      __typename
      content {
        __typename
        screen {
          __typename
          background
          backgroundColor
          backgroundImage
          backgroundPosition
          backgroundSize
          backgroundRepeat
          backgroundOrigin
          backgroundClip
          backgroundAttachment
          backgroundBlendMode
          layer {
            __typename
            background
            backgroundColor
            backgroundImage
            backgroundPosition
            backgroundSize
            backgroundRepeat
            backgroundOrigin
            backgroundClip
            backgroundAttachment
            backgroundBlendMode
            width
            height
          }
          gutterTop
          gutterRight
          gutterBottom
          gutterLeft
        }
        container {
          __typename
          background
          backgroundColor
          backgroundImage
          backgroundPosition
          backgroundSize
          backgroundRepeat
          backgroundOrigin
          backgroundClip
          backgroundAttachment
          backgroundBlendMode
          padding
          borderRadius
        }
      }
    }
    settings {
      __typename
      routeOverrideEnabled
    }
  }
}

fragment contentAppearancePublishedFragment on Content {
  __typename
  appearancePublished: properties(key: &quot;content-appearance-published&quot;) {
    __typename
    ...contentAppearanceInnerFragment
  }
}

fragment contentAppearanceInnerFragment on PaginatedJsonContentPropertyList {
  __typename
  nodes {
    __typename
    id
    key
    value
    version {
      __typename
      number
    }
  }
}
</stringProp>
            <stringProp name="GraphQLHTTPSampler.variables">{&quot;spaceKey&quot;:&quot;PN&quot;,&quot;contentId&quot;:&quot;33329&quot;,&quot;versionOverride&quot;:null}</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/wiki/spaces/PN/overview</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-APOLLO-OPERATION-NAME" elementType="Header">
                  <stringProp name="Header.name">X-APOLLO-OPERATION-NAME</stringProp>
                  <stringProp name="Header.value">ContentUnifiedQuery</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="X-Atl-Experience" elementType="Header">
                  <stringProp name="Header.name">X-Atl-Experience</stringProp>
                  <stringProp name="Header.value">space-overview</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-399" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument" enabled="true">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;InlineCommentsQuery&quot;,&quot;variables&quot;:{&quot;pageId&quot;:&quot;33329&quot;},&quot;query&quot;:&quot;query InlineCommentsQuery($pageId: ID!) {\n  content(id: $pageId) {\n    __typename\n    nodes {\n      __typename\n      id\n      type\n      space {\n        __typename\n        id\n      }\n      operations {\n        __typename\n        operation\n        targetType\n      }\n    }\n  }\n  comments(pageId: $pageId, type: UNRESOLVED, depth: ROOT, first: 1000) {\n    __typename\n    nodes {\n      __typename\n      ...inlineCommentFragment\n      replies {\n        __typename\n        ...inlineCommentFragment\n      }\n    }\n  }\n}\n\nfragment inlineCommentFragment on Comment {\n  __typename\n  id\n  body(representation: ATLAS_DOC_FORMAT) {\n    __typename\n    value\n  }\n  contentStatus\n  isLikedByCurrentUser\n  likeCount\n  links {\n    __typename\n    webui\n  }\n  location {\n    __typename\n    ... on InlineComment {\n      type\n      inlineMarkerRef\n      inlineResolveProperties {\n        __typename\n        resolvedTime\n        resolvedUser\n      }\n      __typename\n    }\n  }\n  parentId\n  permissions {\n    __typename\n    isEditable\n    isRemovable\n    isResolvable\n  }\n  version {\n    __typename\n    when\n    number\n  }\n  author {\n    __typename\n    displayName\n    profilePicture {\n      __typename\n      path\n    }\n    permissionType\n    ... on KnownUser {\n      accountId\n      __typename\n    }\n    ... on User {\n      accountId\n      __typename\n    }\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cgraphql?q=InlineCommentsQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="GraphQLHTTPSampler.operationName">InlineCommentsQuery</stringProp>
            <stringProp name="GraphQLHTTPSampler.query">query InlineCommentsQuery($pageId: ID!) {
  content(id: $pageId) {
    __typename
    nodes {
      __typename
      id
      type
      space {
        __typename
        id
      }
      operations {
        __typename
        operation
        targetType
      }
    }
  }
  comments(pageId: $pageId, type: UNRESOLVED, depth: ROOT, first: 1000) {
    __typename
    nodes {
      __typename
      ...inlineCommentFragment
      replies {
        __typename
        ...inlineCommentFragment
      }
    }
  }
}

fragment inlineCommentFragment on Comment {
  __typename
  id
  body(representation: ATLAS_DOC_FORMAT) {
    __typename
    value
  }
  contentStatus
  isLikedByCurrentUser
  likeCount
  links {
    __typename
    webui
  }
  location {
    __typename
    ... on InlineComment {
      type
      inlineMarkerRef
      inlineResolveProperties {
        __typename
        resolvedTime
        resolvedUser
      }
      __typename
    }
  }
  parentId
  permissions {
    __typename
    isEditable
    isRemovable
    isResolvable
  }
  version {
    __typename
    when
    number
  }
  author {
    __typename
    displayName
    profilePicture {
      __typename
      path
    }
    permissionType
    ... on KnownUser {
      accountId
      __typename
    }
    ... on User {
      accountId
      __typename
    }
  }
}
</stringProp>
            <stringProp name="GraphQLHTTPSampler.variables">{&quot;pageId&quot;:&quot;33329&quot;}</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/wiki/spaces/PN/overview</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-APOLLO-OPERATION-NAME" elementType="Header">
                  <stringProp name="Header.name">X-APOLLO-OPERATION-NAME</stringProp>
                  <stringProp name="Header.value">InlineCommentsQuery</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-401" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;type&quot;:&quot;metric&quot;,&quot;meta&quot;:{&quot;subproduct&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;0.1&quot;,&quot;env&quot;:&quot;prod&quot;,&quot;os&quot;:&quot;windows&quot;,&quot;platform&quot;:&quot;desktop&quot;,&quot;browser&quot;:&quot;chrome&quot;},&quot;metalId&quot;:&quot;74fe5415-a93b-4197-bb9b-294dc9439cd7&quot;,&quot;data&quot;:[{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;fe.perf.component.time_to_ready.slo&quot;,&quot;tags&quot;:[&quot;component:useExtensionList&quot;,&quot;page:confluence:globalPage&quot;,&quot;success:true&quot;],&quot;value&quot;:1,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.component.time_to_ready&quot;,&quot;tags&quot;:[&quot;component:useExtensionList&quot;,&quot;page:confluence:globalPage&quot;],&quot;value&quot;:159.29999999981374,&quot;sampleRate&quot;:1}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/metal/ingest</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-408" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/wiki/rest/api/space/PN/settings</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-410" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;type&quot;:&quot;metric&quot;,&quot;meta&quot;:{&quot;synthetic&quot;:&quot;false&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;env&quot;:&quot;prod&quot;,&quot;os&quot;:&quot;windows&quot;,&quot;platform&quot;:&quot;desktop&quot;,&quot;browser&quot;:&quot;chrome&quot;},&quot;metalId&quot;:&quot;88dcca98-e854-4063-954c-eabe3aeb25d2&quot;,&quot;data&quot;:[{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.first_meaningful_paint&quot;,&quot;tags&quot;:[&quot;active_tab:true&quot;,&quot;initial_load:false&quot;,&quot;page:segment-search-box&quot;,&quot;gsd_histogram:500_1000_1500_2000_2500_3000&quot;],&quot;value&quot;:1204,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.time_to_interactive&quot;,&quot;tags&quot;:[&quot;active_tab:true&quot;,&quot;initial_load:false&quot;,&quot;page:segment-search-box&quot;,&quot;gsd_histogram:1000_1500_2000_2500_3000_4000&quot;],&quot;value&quot;:1204,&quot;sampleRate&quot;:1}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/metal/ingest</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-416" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument" enabled="true">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;ContentRedirectQuery&quot;,&quot;variables&quot;:{&quot;contentId&quot;:&quot;33329&quot;},&quot;query&quot;:&quot;query ContentRedirectQuery($contentId: ID) {\n  content(id: $contentId) {\n    nodes {\n      id\n      title\n      space {\n        id\n        homepageId\n        key\n        __typename\n      }\n      history {\n        createdDate\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cgraphql?q=ContentRedirectQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="GraphQLHTTPSampler.operationName">ContentRedirectQuery</stringProp>
            <stringProp name="GraphQLHTTPSampler.query">query ContentRedirectQuery($contentId: ID) {
  content(id: $contentId) {
    nodes {
      id
      title
      space {
        id
        homepageId
        key
        __typename
      }
      history {
        createdDate
        __typename
      }
      __typename
    }
    __typename
  }
}
</stringProp>
            <stringProp name="GraphQLHTTPSampler.variables">{&quot;contentId&quot;:&quot;33329&quot;}</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/wiki/spaces/PN/overview</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-APOLLO-OPERATION-NAME" elementType="Header">
                  <stringProp name="Header.name">X-APOLLO-OPERATION-NAME</stringProp>
                  <stringProp name="Header.value">ContentRedirectQuery</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-418" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;batch&quot;:[{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:52.741Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;containerType&quot;:&quot;spaceKey&quot;,&quot;containerId&quot;:&quot;PN&quot;,&quot;source&quot;:&quot;overviewScreen&quot;,&quot;objectType&quot;:&quot;page&quot;,&quot;objectId&quot;:&quot;33329&quot;,&quot;actionSubject&quot;:&quot;homeRecentWorkItem&quot;,&quot;action&quot;:&quot;clicked&quot;,&quot;attributes&quot;:{&quot;ranking&quot;:0,&quot;navdexPointType&quot;:&quot;navigationSessionTouch&quot;,&quot;lastAction&quot;:&quot;VIEWED&quot;,&quot;homeVersion&quot;:&quot;chicago&quot;,&quot;navigationSessionId&quot;:&quot;fc7f8d76-acc7-4d26-a397-f0d7357e3ff2&quot;},&quot;eventType&quot;:&quot;ui&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;homeRecentWorkItem clicked&quot;,&quot;messageId&quot;:&quot;ajs-6604993b-c9a8-49a5-af4f-d2c2539370e7&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:54.988Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:53.168Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskStart&quot;,&quot;attributes&quot;:{&quot;contentType&quot;:&quot;space&quot;,&quot;isFromExternal&quot;:false,&quot;uuid&quot;:&quot;SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;isInitial&quot;:false,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:0.20000000018626451,&quot;startTime&quot;:27422.200000000186,&quot;timeout&quot;:60000,&quot;task&quot;:&quot;view-content&quot;,&quot;taskId&quot;:&quot;PN&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskStart&quot;,&quot;messageId&quot;:&quot;ajs-103a8670-d8d2-4b25-a138-16c05ba66730&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:54.988Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:53.168Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskStart&quot;,&quot;attributes&quot;:{&quot;uuid&quot;:&quot;SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;isInitial&quot;:false,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:0.40000000037252903,&quot;startTime&quot;:27422.400000000373,&quot;timeout&quot;:60000,&quot;task&quot;:&quot;view-page:complete&quot;,&quot;taskId&quot;:&quot;PN&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskStart&quot;,&quot;messageId&quot;:&quot;ajs-dc93e2a4-ade2-4ea9-9270-3ab5f1245df4&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:54.988Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:53.168Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskStart&quot;,&quot;attributes&quot;:{&quot;contentType&quot;:&quot;space&quot;,&quot;isFromExternal&quot;:false,&quot;uuid&quot;:&quot;SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;isInitial&quot;:false,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:0.20000000018626451,&quot;startTime&quot;:27422.200000000186,&quot;timeout&quot;:60000,&quot;task&quot;:&quot;space-overview&quot;,&quot;taskId&quot;:&quot;PN&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskStart&quot;,&quot;messageId&quot;:&quot;ajs-b0c00ea3-27d6-460a-8d99-3e692f456e50&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:54.988Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:53.235Z&quot;,&quot;type&quot;:&quot;page&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;title&quot;:&quot;&quot;,&quot;path&quot;:&quot;&quot;,&quot;url&quot;:&quot;&quot;,&quot;referrer&quot;:&quot;&quot;,&quot;search&quot;:&quot;&quot;,&quot;eventType&quot;:&quot;screen&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;name&quot;:&quot;spaceOverviewScreen&quot;,&quot;messageId&quot;:&quot;ajs-0bb77208-376b-480a-938f-a4d09227d2a0&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:54.988Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:53.238Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskStart&quot;,&quot;attributes&quot;:{&quot;uuid&quot;:&quot;SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;isInitial&quot;:false,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:226.20000000018626,&quot;startTime&quot;:27648.200000000186,&quot;timeout&quot;:30000,&quot;task&quot;:&quot;navigation/app-nav-global-navigation&quot;,&quot;taskId&quot;:&quot;2537afc9-99b3-40d1-b978-c7266eba6161&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskStart&quot;,&quot;messageId&quot;:&quot;ajs-207b3740-08f9-462d-a598-10834972b256&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:54.988Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:53.238Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskAbort&quot;,&quot;attributes&quot;:{&quot;startTime&quot;:17869.300000000745,&quot;duration&quot;:9783,&quot;activeDuration&quot;:9783,&quot;adjustedDuration&quot;:9783,&quot;reason&quot;:&quot;Aborted because the same experience was started with a new id&quot;,&quot;checkForTimeout&quot;:true,&quot;task&quot;:&quot;onboarding-editor/recent-draft-spotlight&quot;,&quot;taskId&quot;:&quot;4065ae9a-1534-408c-aa21-b0064d66843a&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskAbort&quot;,&quot;messageId&quot;:&quot;ajs-bfd7dc30-6bf8-4e48-9b2a-2b51cb0a6141&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:54.988Z&quot;}],&quot;sentAt&quot;:&quot;2022-09-26T05:58:54.988Z&quot;,&quot;metadata&quot;:{&quot;eventCount&quot;:34,&quot;resilienceMechanism&quot;:&quot;indexeddb&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/gasv3/api/v1/batch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-417" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;operationName&quot;:&quot;FavouriteSpaceQuery&quot;,&quot;variables&quot;:{&quot;spaceKey&quot;:&quot;PN&quot;},&quot;query&quot;:&quot;query FavouriteSpaceQuery($spaceKey: String!) {\n  space(key: $spaceKey) {\n    id\n    currentUser {\n      isFavourited\n      __typename\n    }\n    __typename\n  }\n}\n&quot;},{&quot;operationName&quot;:&quot;GetQuickstartState&quot;,&quot;variables&quot;:{&quot;key&quot;:[&quot;quickstart-state:isPanelOpen&quot;,&quot;quickstart-state:isDismissed&quot;,&quot;quickstart-state:openTaskId&quot;,&quot;quickstart-state:openComponentId&quot;,&quot;quickstart-state:jswConfIntroCompleted&quot;,&quot;quickstart-state:helpCompleted&quot;,&quot;quickstart-state:spaceModalCompleted&quot;,&quot;quickstart-state:spaceTourCompleted&quot;,&quot;quickstart-state:collaborateCompleted&quot;,&quot;quickstart-state:homeModalCompleted&quot;,&quot;quickstart-state:homeTourCompleted&quot;,&quot;quickstart-state:mobileCompleted&quot;,&quot;quickstart-state:hasSeenDismissedFlag&quot;,&quot;quickstart-state:isMigratedUserV2&quot;,&quot;quickstart-state:isMigratedUserCalibrationState&quot;,&quot;quickstart-state:jswXflowSwitcherTourCompleted&quot;,&quot;onboarding-origin-state:attributes&quot;,&quot;quickstart-state:jswXFlowModalCompleted&quot;,&quot;quickstart-state:jswXflowInvitePeopleModalOpen&quot;,&quot;quickstart-state:jswXflowInvitePeopleNudgeCompleted&quot;,&quot;quickstart-state:jswXFlowInvitedEmails&quot;,&quot;quickstart-state:editorTutorialTaskCompleted&quot;,&quot;quickstart-state:qsv2ReadConfluenceGuideCompleted&quot;,&quot;quickstart-state:qsv2InviteTeammateCompleted&quot;,&quot;quickstart-state:qsv2IntegrationCompleted&quot;,&quot;quickstart-state:qsv2SiteVideoTourCompleted&quot;,&quot;quickstart-state:qsv2SpotlightCompleted&quot;,&quot;quickstart-state:migrationsWelcomeCompleted&quot;,&quot;quickstart-state:migrationsNewPageCompleted&quot;,&quot;quickstart-state:migrationsCollaborateCompleted&quot;,&quot;quickstart-state:migrationsFindAndOrganizePagesCompleted&quot;,&quot;quickstart-state:migrationsEditAndCustomizeContentCompleted&quot;,&quot;quickstart-state:simplifyAdminRenameSiteCompleted&quot;,&quot;quickstart-state:nqsv2HelpCompleted&quot;,&quot;quickstart-state:nqsv2CreateCompleted&quot;,&quot;quickstart-state:nqsv2CollaborateCompleted&quot;,&quot;quickstart-state:nqsv2Confluence101Completed&quot;]},&quot;query&quot;:&quot;query GetQuickstartState($key: [String]) {\n  onboardingState(key: $key) {\n    key\n    value\n    __typename\n  }\n  ...UserPermissionFragment\n}\n\nfragment UserPermissionFragment on Query {\n  user(current: true) {\n    id\n    confluence {\n      permissionType\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n&quot;},{&quot;operationName&quot;:&quot;CommentButtonQuery&quot;,&quot;variables&quot;:{&quot;pageId&quot;:&quot;33329&quot;},&quot;query&quot;:&quot;query CommentButtonQuery($pageId: ID!) {\n  comments(pageId: $pageId, type: UNRESOLVED, depth: ALL) {\n    count\n    nodes {\n      id\n      location {\n        type\n        ... on InlineComment {\n          inlineMarkerRef\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;},{&quot;operationName&quot;:&quot;WatchDialogQuery&quot;,&quot;variables&quot;:{&quot;contentId&quot;:&quot;33329&quot;},&quot;query&quot;:&quot;query WatchDialogQuery($contentId: ID!) {\n  singleContent(id: $contentId) {\n    id\n    ...WatchDialogContentFragment\n    __typename\n  }\n}\n\nfragment WatchDialogContentFragment on Content {\n  id\n  currentUserIsWatching\n  type\n  space {\n    id\n    key\n    currentUser {\n      isWatched\n      isWatchingBlogs\n      __typename\n    }\n    operations {\n      operation\n      targetType\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n&quot;},{&quot;operationName&quot;:&quot;ContentViewedEventQuery&quot;,&quot;variables&quot;:{&quot;contentId&quot;:&quot;33329&quot;},&quot;query&quot;:&quot;query ContentViewedEventQuery($contentId: ID) {\n  content(id: $contentId, trigger: \&quot;viewed\&quot;) {\n    nodes {\n      id\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cgraphql?q=FavouriteSpaceQuery,GetQuickstartState,CommentButtonQuery,WatchDialogQuery,ContentViewedEventQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/wiki/spaces/PN/overview</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-APOLLO-OPERATION-NAME" elementType="Header">
                  <stringProp name="Header.name">X-APOLLO-OPERATION-NAME</stringProp>
                  <stringProp name="Header.value">FavouriteSpaceQuery,GetQuickstartState,CommentButtonQuery,WatchDialogQuery,ContentViewedEventQuery</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-420" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="altScale" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">altScale</stringProp>
                  <stringProp name="Argument.value">XHDPI</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="preferredRepresentation" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">preferredRepresentation</stringProp>
                  <stringProp name="Argument.value">IMAGE</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/emoji/atlassian</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-421" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="altScale" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">altScale</stringProp>
                  <stringProp name="Argument.value">XHDPI</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="preferredRepresentation" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">preferredRepresentation</stringProp>
                  <stringProp name="Argument.value">IMAGE</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/emoji/f21b70d0-8bad-458e-9a03-d1d9544e0e8c/site</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-426" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;r&quot;:[],&quot;c&quot;:[&quot;com.atlassian.plugins.atlassian-connect-plugin:blueprint-css-resources&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:dynamic-css-resources&quot;],&quot;xc&quot;:[&quot;_super&quot;,&quot;confluence-keyboard-shortcuts-batch&quot;],&quot;xr&quot;:[&quot;com.atlassian.plugins.jquery:jquery&quot;,&quot;com.atlassian.auiplugin:dialog2&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:iframe-host-css-v5&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:confluence-macro-v5&quot;,&quot;confluence.web.resources:querystring&quot;,&quot;confluence.web.resources:navigator-context&quot;,&quot;com.atlassian.auiplugin:internal-@atlassian-aui-src-js-aui-dialog2&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:dialog-options-v5&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:iframe-host-utils-v5&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:ap-core-v5&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:ap-spa-context-v5&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:ap-navigator-v5&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:ap-extensions-v5&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:ap-user-v5&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:content-resolver-v5&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:ap-context-v5&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:module-loader-v5&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:iframe-insertion-v5&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:iframe-host-js-v5&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:confluence-content-property-api-v5&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:confluence-macro-api-v5&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:confluence-navigator-routes-v5&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:confluence-customcontent-v5&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:confluence-spa-inlinedialog-cleanup&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:confluence-request-marshal-v5&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:confluence-product-extensions-v5&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:confluence-module-loader-v5&quot;]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/wiki/rest/webResources/1.0/resources</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-424" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument" enabled="true">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;forge_ui_extensionList&quot;,&quot;variables&quot;:{&quot;contextIds&quot;:[&quot;ari:cloud:confluence::site/f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;],&quot;type&quot;:&quot;confluence:contextMenu&quot;},&quot;query&quot;:&quot;query forge_ui_extensionList($contextIds: [ID!]!, $type: String!) {\n  extensionContexts(contextIds: $contextIds) {\n    id\n    extensionsByType(type: $type) {\n      id\n      environmentId\n      environmentType\n      properties\n      type\n      appVersion\n      installationId\n      migrationKey\n      consentUrl\n      currentUserConsent {\n        user {\n          aaid\n          __typename\n        }\n        appEnvironmentVersion {\n          id\n          __typename\n        }\n        consentedAt\n        __typename\n      }\n      requiresUserConsent\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="GraphQLHTTPSampler.operationName">forge_ui_extensionList</stringProp>
            <stringProp name="GraphQLHTTPSampler.query">query forge_ui_extensionList($contextIds: [ID!]!, $type: String!) {
  extensionContexts(contextIds: $contextIds) {
    id
    extensionsByType(type: $type) {
      id
      environmentId
      environmentType
      properties
      type
      appVersion
      installationId
      migrationKey
      consentUrl
      currentUserConsent {
        user {
          aaid
          __typename
        }
        appEnvironmentVersion {
          id
          __typename
        }
        consentedAt
        __typename
      }
      requiresUserConsent
      __typename
    }
    __typename
  }
}
</stringProp>
            <stringProp name="GraphQLHTTPSampler.variables">{&quot;contextIds&quot;:[&quot;ari:cloud:confluence::site/f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;],&quot;type&quot;:&quot;confluence:contextMenu&quot;}</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-425" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument" enabled="true">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;WebItemLocationQuery&quot;,&quot;variables&quot;:{&quot;location&quot;:&quot;page.view.selection/action-panel&quot;,&quot;locations&quot;:[],&quot;contentId&quot;:&quot;33329&quot;,&quot;spaceKey&quot;:null,&quot;version&quot;:null},&quot;query&quot;:&quot;query WebItemLocationQuery($location: String, $locations: [String], $contentId: ID, $spaceKey: String, $version: Int) {\n  webItemSections(location: $location, locations: $locations, contentId: $contentId, key: $spaceKey, version: $version) {\n    id\n    label\n    cacheKey\n    styleClass\n    items {\n      accessKey\n      completeKey\n      hasCondition\n      id\n      icon {\n        path\n        __typename\n      }\n      params {\n        key\n        value\n        __typename\n      }\n      label\n      moduleKey\n      section\n      styleClass\n      tooltip\n      url\n      urlWithoutContextPath\n      weight\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cgraphql?q=WebItemLocationQuery:page.view.selection/action-panel</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="GraphQLHTTPSampler.operationName">WebItemLocationQuery</stringProp>
            <stringProp name="GraphQLHTTPSampler.query">query WebItemLocationQuery($location: String, $locations: [String], $contentId: ID, $spaceKey: String, $version: Int) {
  webItemSections(location: $location, locations: $locations, contentId: $contentId, key: $spaceKey, version: $version) {
    id
    label
    cacheKey
    styleClass
    items {
      accessKey
      completeKey
      hasCondition
      id
      icon {
        path
        __typename
      }
      params {
        key
        value
        __typename
      }
      label
      moduleKey
      section
      styleClass
      tooltip
      url
      urlWithoutContextPath
      weight
      __typename
    }
    __typename
  }
}
</stringProp>
            <stringProp name="GraphQLHTTPSampler.variables">{&quot;location&quot;:&quot;page.view.selection/action-panel&quot;,&quot;locations&quot;:[],&quot;contentId&quot;:&quot;33329&quot;,&quot;spaceKey&quot;:null,&quot;version&quot;:null}</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/wiki/spaces/PN/overview</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-APOLLO-OPERATION-NAME" elementType="Header">
                  <stringProp name="Header.name">X-APOLLO-OPERATION-NAME</stringProp>
                  <stringProp name="Header.value">WebItemLocationQuery:page.view.selection/action-panel</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-428" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;operationName&quot;:&quot;FeedFollowQuery&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query FeedFollowQuery {\n  getFeedUserConfig {\n    users {\n      ... on User {\n        accountId\n        __typename\n      }\n      ... on UnknownUser {\n        accountId\n        __typename\n      }\n      ... on KnownUser {\n        accountId\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cgraphql?q=FeedFollowQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/wiki/spaces/PN/overview</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-APOLLO-OPERATION-NAME" elementType="Header">
                  <stringProp name="Header.name">X-APOLLO-OPERATION-NAME</stringProp>
                  <stringProp name="Header.value">FeedFollowQuery</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-419" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="altScale" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">altScale</stringProp>
                  <stringProp name="Argument.value">XHDPI</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="preferredRepresentation" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">preferredRepresentation</stringProp>
                  <stringProp name="Argument.value">IMAGE</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/emoji/standard</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-429" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;operationName&quot;:&quot;EditButtonQuery&quot;,&quot;variables&quot;:{&quot;contentId&quot;:&quot;33329&quot;},&quot;query&quot;:&quot;query EditButtonQuery($contentId: ID!) {\n  content(id: $contentId) {\n    nodes {\n      ...ContentOperationsFragment\n      metadata {\n        frontend {\n          fabricEditorSupported\n          embedded\n          __typename\n        }\n        __typename\n      }\n      space {\n        id\n        key\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment ContentOperationsFragment on Content {\n  id\n  type\n  operations {\n    operation\n    targetType\n    __typename\n  }\n  __typename\n}\n&quot;},{&quot;operationName&quot;:&quot;WebItemLocationQuery&quot;,&quot;variables&quot;:{&quot;location&quot;:&quot;system.content.button&quot;,&quot;locations&quot;:[],&quot;contentId&quot;:&quot;33329&quot;,&quot;spaceKey&quot;:null,&quot;version&quot;:null},&quot;query&quot;:&quot;query WebItemLocationQuery($location: String, $locations: [String], $contentId: ID, $spaceKey: String, $version: Int) {\n  webItemSections(location: $location, locations: $locations, contentId: $contentId, key: $spaceKey, version: $version) {\n    id\n    label\n    cacheKey\n    styleClass\n    items {\n      accessKey\n      completeKey\n      hasCondition\n      id\n      icon {\n        path\n        __typename\n      }\n      params {\n        key\n        value\n        __typename\n      }\n      label\n      moduleKey\n      section\n      styleClass\n      tooltip\n      url\n      urlWithoutContextPath\n      weight\n      __typename\n    }\n    __typename\n  }\n}\n&quot;},{&quot;operationName&quot;:&quot;WebItemLocationQuery&quot;,&quot;variables&quot;:{&quot;location&quot;:&quot;system.content.action&quot;,&quot;locations&quot;:[],&quot;contentId&quot;:&quot;33329&quot;,&quot;spaceKey&quot;:null,&quot;version&quot;:null},&quot;query&quot;:&quot;query WebItemLocationQuery($location: String, $locations: [String], $contentId: ID, $spaceKey: String, $version: Int) {\n  webItemSections(location: $location, locations: $locations, contentId: $contentId, key: $spaceKey, version: $version) {\n    id\n    label\n    cacheKey\n    styleClass\n    items {\n      accessKey\n      completeKey\n      hasCondition\n      id\n      icon {\n        path\n        __typename\n      }\n      params {\n        key\n        value\n        __typename\n      }\n      label\n      moduleKey\n      section\n      styleClass\n      tooltip\n      url\n      urlWithoutContextPath\n      weight\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cgraphql?q=EditButtonQuery,WebItemLocationQuery:system.content.button,WebItemLocationQuery:system.content.action</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/wiki/spaces/PN/overview</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-APOLLO-OPERATION-NAME" elementType="Header">
                  <stringProp name="Header.name">X-APOLLO-OPERATION-NAME</stringProp>
                  <stringProp name="Header.value">EditButtonQuery,WebItemLocationQuery:system.content.button,WebItemLocationQuery:system.content.action</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-427" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;type&quot;:&quot;metric&quot;,&quot;meta&quot;:{&quot;synthetic&quot;:&quot;false&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;env&quot;:&quot;prod&quot;,&quot;os&quot;:&quot;windows&quot;,&quot;platform&quot;:&quot;desktop&quot;,&quot;browser&quot;:&quot;chrome&quot;},&quot;metalId&quot;:&quot;88dcca98-e854-4063-954c-eabe3aeb25d2&quot;,&quot;data&quot;:[{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.first_meaningful_paint&quot;,&quot;tags&quot;:[&quot;active_tab:true&quot;,&quot;initial_load:false&quot;,&quot;page:segment-edit-button&quot;,&quot;gsd_histogram:500_1000_1500_2000_2500_3000&quot;],&quot;value&quot;:2115,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.time_to_interactive&quot;,&quot;tags&quot;:[&quot;active_tab:true&quot;,&quot;initial_load:false&quot;,&quot;page:segment-edit-button&quot;,&quot;gsd_histogram:1000_1500_2000_2500_3000_4000&quot;],&quot;value&quot;:2115,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.first_meaningful_paint&quot;,&quot;tags&quot;:[&quot;active_tab:true&quot;,&quot;initial_load:false&quot;,&quot;page:segment-inline-comments&quot;,&quot;gsd_histogram:500_1000_1500_2000_2500_3000&quot;],&quot;value&quot;:2121,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.time_to_interactive&quot;,&quot;tags&quot;:[&quot;active_tab:true&quot;,&quot;initial_load:false&quot;,&quot;page:segment-inline-comments&quot;,&quot;gsd_histogram:1000_1500_2000_2500_3000_4000&quot;],&quot;value&quot;:2116,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.first_meaningful_paint&quot;,&quot;tags&quot;:[&quot;active_tab:true&quot;,&quot;initial_load:false&quot;,&quot;page:segment-watch-button&quot;,&quot;gsd_histogram:500_1000_1500_2000_2500_3000&quot;],&quot;value&quot;:2169,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.time_to_interactive&quot;,&quot;tags&quot;:[&quot;active_tab:true&quot;,&quot;initial_load:false&quot;,&quot;page:segment-watch-button&quot;,&quot;gsd_histogram:1000_1500_2000_2500_3000_4000&quot;],&quot;value&quot;:2169,&quot;sampleRate&quot;:1}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/metal/ingest</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-436" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;type&quot;:&quot;metric&quot;,&quot;meta&quot;:{&quot;synthetic&quot;:&quot;false&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;env&quot;:&quot;prod&quot;,&quot;os&quot;:&quot;windows&quot;,&quot;platform&quot;:&quot;desktop&quot;,&quot;browser&quot;:&quot;chrome&quot;},&quot;metalId&quot;:&quot;88dcca98-e854-4063-954c-eabe3aeb25d2&quot;,&quot;data&quot;:[{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.first_meaningful_paint&quot;,&quot;tags&quot;:[&quot;active_tab:true&quot;,&quot;initial_load:false&quot;,&quot;page:segment-content-renderer&quot;,&quot;gsd_histogram:500_1000_1500_2000_2500_3000&quot;],&quot;value&quot;:3044,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.time_to_interactive&quot;,&quot;tags&quot;:[&quot;active_tab:true&quot;,&quot;initial_load:false&quot;,&quot;page:segment-content-renderer&quot;,&quot;gsd_histogram:1000_1500_2000_2500_3000_4000&quot;],&quot;value&quot;:3044,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.first_meaningful_paint&quot;,&quot;tags&quot;:[&quot;active_tab:true&quot;,&quot;initial_load:false&quot;,&quot;page:segment-edit-button&quot;,&quot;gsd_histogram:500_1000_1500_2000_2500_3000&quot;],&quot;value&quot;:3102,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.time_to_interactive&quot;,&quot;tags&quot;:[&quot;active_tab:true&quot;,&quot;initial_load:false&quot;,&quot;page:segment-edit-button&quot;,&quot;gsd_histogram:1000_1500_2000_2500_3000_4000&quot;],&quot;value&quot;:3102,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.first_meaningful_paint&quot;,&quot;tags&quot;:[&quot;active_tab:true&quot;,&quot;initial_load:false&quot;,&quot;page:segment-watch-button&quot;,&quot;gsd_histogram:500_1000_1500_2000_2500_3000&quot;],&quot;value&quot;:3102,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.time_to_interactive&quot;,&quot;tags&quot;:[&quot;active_tab:true&quot;,&quot;initial_load:false&quot;,&quot;page:segment-watch-button&quot;,&quot;gsd_histogram:1000_1500_2000_2500_3000_4000&quot;],&quot;value&quot;:3102,&quot;sampleRate&quot;:1}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/metal/ingest</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-450" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument" enabled="true">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;contextIds&quot;:[&quot;ari:cloud:confluence::site/f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;],&quot;type&quot;:&quot;confluence:spacePage&quot;},&quot;query&quot;:&quot;query forge_ui_extensionList($contextIds: [ID!]!, $type: String!) {\n      extensionContexts(contextIds: $contextIds) {\n        id\n        extensionsByType(type: $type) {\n          id\n          environmentId\n          environmentType\n          properties\n          type\n          appVersion\n          installationId\n          consentUrl\n          currentUserConsent {\n            user {\n              aaid\n            }\n            appEnvironmentVersion {\n              id\n            }\n            consentedAt\n          }\n          requiresUserConsent\n          __typename\n        }\n        __typename\n      }\n    }&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
            <stringProp name="GraphQLHTTPSampler.query">
    query forge_ui_extensionList($contextIds: [ID!]!, $type: String!) {
      extensionContexts(contextIds: $contextIds) {
        id
        extensionsByType(type: $type) {
          id
          environmentId
          environmentType
          properties
          type
          appVersion
          installationId
          consentUrl
          currentUserConsent {
            user {
              aaid
            }
            appEnvironmentVersion {
              id
            }
            consentedAt
          }
          requiresUserConsent
          __typename
        }
        __typename
      }
    }</stringProp>
            <stringProp name="GraphQLHTTPSampler.variables">{&quot;contextIds&quot;:[&quot;ari:cloud:confluence::site/f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;],&quot;type&quot;:&quot;confluence:spacePage&quot;}</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-451" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument" enabled="true">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;forge_ui_extensionList&quot;,&quot;variables&quot;:{&quot;contextIds&quot;:[&quot;ari:cloud:confluence::site/f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;],&quot;type&quot;:&quot;xen:macro&quot;},&quot;query&quot;:&quot;query forge_ui_extensionList($contextIds: [ID!]!, $type: String!) {\n  extensionContexts(contextIds: $contextIds) {\n    id\n    extensionsByType(type: $type) {\n      id\n      appOwner {\n        name\n        __typename\n      }\n      environmentId\n      environmentType\n      properties\n      type\n      appVersion\n      installationId\n      migrationKey\n      consentUrl\n      currentUserConsent {\n        user {\n          aaid\n          __typename\n        }\n        appEnvironmentVersion {\n          id\n          __typename\n        }\n        consentedAt\n        __typename\n      }\n      requiresUserConsent\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="GraphQLHTTPSampler.operationName">forge_ui_extensionList</stringProp>
            <stringProp name="GraphQLHTTPSampler.query">query forge_ui_extensionList($contextIds: [ID!]!, $type: String!) {
  extensionContexts(contextIds: $contextIds) {
    id
    extensionsByType(type: $type) {
      id
      appOwner {
        name
        __typename
      }
      environmentId
      environmentType
      properties
      type
      appVersion
      installationId
      migrationKey
      consentUrl
      currentUserConsent {
        user {
          aaid
          __typename
        }
        appEnvironmentVersion {
          id
          __typename
        }
        consentedAt
        __typename
      }
      requiresUserConsent
      __typename
    }
    __typename
  }
}
</stringProp>
            <stringProp name="GraphQLHTTPSampler.variables">{&quot;contextIds&quot;:[&quot;ari:cloud:confluence::site/f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;],&quot;type&quot;:&quot;xen:macro&quot;}</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-452" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;operationName&quot;:&quot;SpaceNavigationQuery&quot;,&quot;variables&quot;:{&quot;spaceKey&quot;:&quot;PN&quot;,&quot;isLicensed&quot;:true},&quot;query&quot;:&quot;query SpaceNavigationQuery($spaceKey: String, $isLicensed: Boolean!) {\n  ...UserPermissionFragment\n  spaceSidebarLinks(spaceKey: $spaceKey) {\n    main(includeHidden: true) {\n      id\n      webItemKey\n      webItemCompleteKey\n      title\n      url\n      position\n      styleClass\n      icon {\n        path\n        width\n        height\n        isDefault\n        __typename\n      }\n      iconClass\n      hidden\n      canHide\n      tooltip\n      linkIdentifier\n      type\n      __typename\n    }\n    quick {\n      id\n      url\n      position\n      title\n      styleClass\n      __typename\n    }\n    __typename\n  }\n  space(key: $spaceKey) {\n    id\n    key\n    name\n    type\n    icon {\n      path(type: ABSOLUTE)\n      __typename\n    }\n    homepage {\n      id\n      __typename\n    }\n    currentUser @include(if: $isLicensed) {\n      isAdmin\n      __typename\n    }\n    operations {\n      operation\n      targetType\n      __typename\n    }\n    containsExternalCollaborators\n    __typename\n  }\n  tenant @include(if: $isLicensed) {\n    editions {\n      edition\n      __typename\n    }\n    __typename\n  }\n  entitlements @include(if: $isLicensed) {\n    teamCalendar {\n      isEntitled\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment UserPermissionFragment on Query {\n  user(current: true) {\n    id\n    confluence {\n      permissionType\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n&quot;},{&quot;operationName&quot;:&quot;ArchivedNavigationButtonQuery&quot;,&quot;variables&quot;:{&quot;spaceKey&quot;:&quot;PN&quot;},&quot;query&quot;:&quot;query ArchivedNavigationButtonQuery($spaceKey: String!) {\n  content(spaceKey: $spaceKey, status: [\&quot;archived\&quot;]) {\n    count\n    __typename\n  }\n  tenant {\n    editions {\n      edition\n      __typename\n    }\n    __typename\n  }\n}\n&quot;},{&quot;operationName&quot;:&quot;RendererContentState&quot;,&quot;variables&quot;:{&quot;contentId&quot;:&quot;33329&quot;,&quot;isDraft&quot;:false,&quot;format&quot;:&quot;USER_FRIENDLY&quot;},&quot;query&quot;:&quot;query RendererContentState($contentId: ID!, $isDraft: Boolean!, $format: GraphQLDateFormat) {\n  singleContent(id: $contentId) {\n    id\n    contentState(isDraft: $isDraft) {\n      id\n      name\n      color\n      __typename\n    }\n    contentStateLastUpdated(format: $format) {\n      value\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cgraphql?q=SpaceNavigationQuery,ArchivedNavigationButtonQuery,RendererContentState</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/wiki/spaces/PN/overview</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-APOLLO-OPERATION-NAME" elementType="Header">
                  <stringProp name="Header.name">X-APOLLO-OPERATION-NAME</stringProp>
                  <stringProp name="Header.value">SpaceNavigationQuery,ArchivedNavigationButtonQuery,RendererContentState</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-456" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;r&quot;:[&quot;com.atlassian.confluence.plugins.confluence-jira-content:confluence-jira-content-loader&quot;],&quot;c&quot;:[],&quot;xc&quot;:[&quot;_super&quot;,&quot;confluence-keyboard-shortcuts-batch&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:dynamic-css-resources&quot;],&quot;xr&quot;:[&quot;com.atlassian.plugins.jquery:jquery&quot;,&quot;com.atlassian.auiplugin:dialog2&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:iframe-host-css-v5&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:confluence-macro-v5&quot;,&quot;confluence.web.resources:querystring&quot;,&quot;confluence.web.resources:navigator-context&quot;,&quot;com.atlassian.auiplugin:internal-@atlassian-aui-src-js-aui-dialog2&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:dialog-options-v5&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:iframe-host-utils-v5&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:ap-core-v5&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:ap-spa-context-v5&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:ap-navigator-v5&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:ap-extensions-v5&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:ap-user-v5&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:content-resolver-v5&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:ap-context-v5&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:module-loader-v5&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:iframe-insertion-v5&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:iframe-host-js-v5&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:confluence-content-property-api-v5&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:confluence-macro-api-v5&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:confluence-navigator-routes-v5&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:confluence-customcontent-v5&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:confluence-spa-inlinedialog-cleanup&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:confluence-request-marshal-v5&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:confluence-product-extensions-v5&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:confluence-module-loader-v5&quot;]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/wiki/rest/webResources/1.0/resources</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-457" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;type&quot;:&quot;metric&quot;,&quot;meta&quot;:{&quot;subproduct&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;0.1&quot;,&quot;env&quot;:&quot;prod&quot;,&quot;os&quot;:&quot;windows&quot;,&quot;platform&quot;:&quot;desktop&quot;,&quot;browser&quot;:&quot;chrome&quot;},&quot;metalId&quot;:&quot;74fe5415-a93b-4197-bb9b-294dc9439cd7&quot;,&quot;data&quot;:[{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;fe.perf.component.time_to_ready.slo&quot;,&quot;tags&quot;:[&quot;component:useExtensionList&quot;,&quot;page:confluence:contextMenu&quot;,&quot;success:false&quot;],&quot;value&quot;:1,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.component.time_to_ready&quot;,&quot;tags&quot;:[&quot;component:useExtensionList&quot;,&quot;page:confluence:contextMenu&quot;],&quot;value&quot;:2134.699999999255,&quot;sampleRate&quot;:1}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/metal/ingest</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-459" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;operationName&quot;:&quot;SpaceViewsPersistenceQuery&quot;,&quot;variables&quot;:{&quot;spaceKey&quot;:&quot;PN&quot;},&quot;query&quot;:&quot;query SpaceViewsPersistenceQuery($spaceKey: String!) {\n  userPreferences {\n    spaceViewsPersistence(spaceKey: $spaceKey)\n    __typename\n  }\n}\n&quot;},{&quot;operationName&quot;:&quot;HoverPageCardsOptStatusQuery&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query HoverPageCardsOptStatusQuery {\n  userPreferences {\n    shouldShowCardOnPageTreeHover\n    __typename\n  }\n}\n&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cgraphql?q=SpaceViewsPersistenceQuery,HoverPageCardsOptStatusQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/wiki/spaces/PN/overview</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-APOLLO-OPERATION-NAME" elementType="Header">
                  <stringProp name="Header.name">X-APOLLO-OPERATION-NAME</stringProp>
                  <stringProp name="Header.value">SpaceViewsPersistenceQuery,HoverPageCardsOptStatusQuery</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-467" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;batch&quot;:[{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:53.238Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskStart&quot;,&quot;attributes&quot;:{&quot;uuid&quot;:&quot;SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;isInitial&quot;:false,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:226.1000000005588,&quot;startTime&quot;:27648,&quot;timeout&quot;:30000,&quot;task&quot;:&quot;navigation/app-nav-container-navigation&quot;,&quot;taskId&quot;:&quot;b87c0a3a-9976-4559-820f-d189efffad8d&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskStart&quot;,&quot;messageId&quot;:&quot;ajs-f1822323-e375-4d28-946f-094093ebf124&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:58.505Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:53.239Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskStart&quot;,&quot;attributes&quot;:{&quot;uuid&quot;:&quot;SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;isInitial&quot;:false,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:230.40000000037253,&quot;startTime&quot;:27652.400000000373,&quot;task&quot;:&quot;onboarding-editor/recent-draft-spotlight&quot;,&quot;taskId&quot;:&quot;0a0b412f-bf9f-406d-a78a-15d2975e85cb&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskStart&quot;,&quot;messageId&quot;:&quot;ajs-5dc0ce45-7c26-49df-85e4-e584c1b67842&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:58.505Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:53.254Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskSuccess&quot;,&quot;attributes&quot;:{&quot;uuid&quot;:&quot;SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;isInitial&quot;:false,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:253.90000000037253,&quot;startTime&quot;:27648.200000000186,&quot;duration&quot;:28,&quot;activeDuration&quot;:28,&quot;adjustedDuration&quot;:28,&quot;task&quot;:&quot;navigation/app-nav-global-navigation&quot;,&quot;taskId&quot;:&quot;2537afc9-99b3-40d1-b978-c7266eba6161&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskSuccess&quot;,&quot;messageId&quot;:&quot;ajs-607ddb89-2844-4f50-87af-42c99b4f88a2&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:58.505Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:53.259Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskStart&quot;,&quot;attributes&quot;:{&quot;quickstartType&quot;:&quot;nthUserQuickstartV2&quot;,&quot;uuid&quot;:&quot;SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;isInitial&quot;:false,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:419.5,&quot;startTime&quot;:27841.5,&quot;task&quot;:&quot;onboarding-quickstart&quot;,&quot;taskId&quot;:&quot;4bba1021-d9e3-4487-9abc-05b4b349666b&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskStart&quot;,&quot;messageId&quot;:&quot;ajs-0155ffd3-11ad-43c2-b292-71628a2ef8f2&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:58.505Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:53.259Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskStart&quot;,&quot;attributes&quot;:{&quot;uuid&quot;:&quot;SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;isInitial&quot;:false,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:286,&quot;startTime&quot;:27708,&quot;task&quot;:&quot;extension_point_home_header&quot;,&quot;taskId&quot;:&quot;40f30380-b8d7-423c-95b4-ae3930e36da0&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskStart&quot;,&quot;messageId&quot;:&quot;ajs-e772b19f-9f4e-41e3-81f5-5d160ac083f7&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:58.505Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:53.259Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskStart&quot;,&quot;attributes&quot;:{&quot;uuid&quot;:&quot;SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;isInitial&quot;:false,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:286.20000000018626,&quot;startTime&quot;:27708.200000000186,&quot;task&quot;:&quot;extension_point_home_footer&quot;,&quot;taskId&quot;:&quot;f14ebde2-d443-4d8b-98f4-d5654ef56ec4&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskStart&quot;,&quot;messageId&quot;:&quot;ajs-fd2cb443-250e-4e3e-b1f0-5fcde4cd1c18&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:58.505Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:53.260Z&quot;,&quot;type&quot;:&quot;page&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;title&quot;:&quot;&quot;,&quot;path&quot;:&quot;&quot;,&quot;url&quot;:&quot;&quot;,&quot;referrer&quot;:&quot;&quot;,&quot;search&quot;:&quot;&quot;,&quot;eventType&quot;:&quot;screen&quot;,&quot;attributes&quot;:{&quot;quickstartType&quot;:&quot;nthUserQuickstartV2&quot;},&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;name&quot;:&quot;confluenceOnboardingQuickstartButtonDrawer&quot;,&quot;messageId&quot;:&quot;ajs-4874770c-f795-4f39-8773-c1b2af830784&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:58:58.505Z&quot;}],&quot;sentAt&quot;:&quot;2022-09-26T05:58:58.505Z&quot;,&quot;metadata&quot;:{&quot;eventCount&quot;:30,&quot;resilienceMechanism&quot;:&quot;indexeddb&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/gasv3/api/v1/batch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-460" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;type&quot;:&quot;metric&quot;,&quot;meta&quot;:{&quot;synthetic&quot;:&quot;false&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;env&quot;:&quot;prod&quot;,&quot;os&quot;:&quot;windows&quot;,&quot;platform&quot;:&quot;desktop&quot;,&quot;browser&quot;:&quot;chrome&quot;},&quot;metalId&quot;:&quot;88dcca98-e854-4063-954c-eabe3aeb25d2&quot;,&quot;data&quot;:[{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.first_meaningful_paint&quot;,&quot;tags&quot;:[&quot;active_tab:true&quot;,&quot;initial_load:false&quot;,&quot;page:segment-space-navigation&quot;,&quot;gsd_histogram:500_1000_1500_2000_2500_3000&quot;],&quot;value&quot;:5672,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.time_to_interactive&quot;,&quot;tags&quot;:[&quot;active_tab:true&quot;,&quot;initial_load:false&quot;,&quot;page:segment-space-navigation&quot;,&quot;gsd_histogram:1000_1500_2000_2500_3000_4000&quot;],&quot;value&quot;:5672,&quot;sampleRate&quot;:1}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/metal/ingest</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-462" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;resourceUrl&quot;:&quot;${scheme}://thinktimetechnology.atlassian.net/wiki/spaces/PN/pages/33352&quot;},{&quot;resourceUrl&quot;:&quot;${scheme}://thinktimetechnology.atlassian.net/wiki/spaces/PN/pages/33361&quot;},{&quot;resourceUrl&quot;:&quot;${scheme}://thinktimetechnology.atlassian.net/wiki/spaces/PN/pages/33370&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/object-resolver/resolve/batch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-475" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument" enabled="true">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;forge_ui_extensionList&quot;,&quot;variables&quot;:{&quot;contextIds&quot;:[&quot;ari:cloud:confluence::site/f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;],&quot;type&quot;:&quot;confluence:contentAction&quot;},&quot;query&quot;:&quot;query forge_ui_extensionList($contextIds: [ID!]!, $type: String!) {\n  extensionContexts(contextIds: $contextIds) {\n    id\n    extensionsByType(type: $type) {\n      id\n      environmentId\n      environmentType\n      properties\n      type\n      appVersion\n      installationId\n      migrationKey\n      consentUrl\n      currentUserConsent {\n        user {\n          aaid\n          __typename\n        }\n        appEnvironmentVersion {\n          id\n          __typename\n        }\n        consentedAt\n        __typename\n      }\n      requiresUserConsent\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="GraphQLHTTPSampler.operationName">forge_ui_extensionList</stringProp>
            <stringProp name="GraphQLHTTPSampler.query">query forge_ui_extensionList($contextIds: [ID!]!, $type: String!) {
  extensionContexts(contextIds: $contextIds) {
    id
    extensionsByType(type: $type) {
      id
      environmentId
      environmentType
      properties
      type
      appVersion
      installationId
      migrationKey
      consentUrl
      currentUserConsent {
        user {
          aaid
          __typename
        }
        appEnvironmentVersion {
          id
          __typename
        }
        consentedAt
        __typename
      }
      requiresUserConsent
      __typename
    }
    __typename
  }
}
</stringProp>
            <stringProp name="GraphQLHTTPSampler.variables">{&quot;contextIds&quot;:[&quot;ari:cloud:confluence::site/f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;],&quot;type&quot;:&quot;confluence:contentAction&quot;}</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-458" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument" enabled="true">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;MacroContentRendererQueryWithTags&quot;,&quot;variables&quot;:{&quot;containedRender&quot;:false,&quot;mode&quot;:&quot;RENDERER&quot;,&quot;adf&quot;:&quot;{\&quot;type\&quot;:\&quot;extension\&quot;,\&quot;attrs\&quot;:{\&quot;extensionKey\&quot;:\&quot;recently-updated\&quot;,\&quot;extensionType\&quot;:\&quot;com.atlassian.confluence.macro.core\&quot;,\&quot;parameters\&quot;:{\&quot;macroParams\&quot;:{\&quot;types\&quot;:{\&quot;value\&quot;:\&quot;page\&quot;},\&quot;max\&quot;:{\&quot;value\&quot;:\&quot;5\&quot;},\&quot;hideHeading\&quot;:{\&quot;value\&quot;:\&quot;true\&quot;}},\&quot;macroMetadata\&quot;:{\&quot;schemaVersion\&quot;:{\&quot;value\&quot;:\&quot;1\&quot;},\&quot;title\&quot;:\&quot;Recently Updated\&quot;}},\&quot;localId\&quot;:null,\&quot;bodyType\&quot;:\&quot;none\&quot;}}&quot;,&quot;contentId&quot;:&quot;33329&quot;},&quot;query&quot;:&quot;query MacroContentRendererQueryWithTags($adf: String!, $containedRender: Boolean = false, $contentId: ID!, $mode: ContentRendererMode = RENDERER) {\n  contentRenderer(adf: $adf, containedRender: $containedRender, contentId: $contentId, mode: $mode) {\n    html\n    webResourceDependencies {\n      contexts\n      keys\n      tags {\n        js\n        css\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cgraphql?q=MacroContentRendererQueryWithTags</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="GraphQLHTTPSampler.operationName">MacroContentRendererQueryWithTags</stringProp>
            <stringProp name="GraphQLHTTPSampler.query">query MacroContentRendererQueryWithTags($adf: String!, $containedRender: Boolean = false, $contentId: ID!, $mode: ContentRendererMode = RENDERER) {
  contentRenderer(adf: $adf, containedRender: $containedRender, contentId: $contentId, mode: $mode) {
    html
    webResourceDependencies {
      contexts
      keys
      tags {
        js
        css
        __typename
      }
      __typename
    }
    __typename
  }
}
</stringProp>
            <stringProp name="GraphQLHTTPSampler.variables">{&quot;containedRender&quot;:false,&quot;mode&quot;:&quot;RENDERER&quot;,&quot;adf&quot;:&quot;{\&quot;type\&quot;:\&quot;extension\&quot;,\&quot;attrs\&quot;:{\&quot;extensionKey\&quot;:\&quot;recently-updated\&quot;,\&quot;extensionType\&quot;:\&quot;com.atlassian.confluence.macro.core\&quot;,\&quot;parameters\&quot;:{\&quot;macroParams\&quot;:{\&quot;types\&quot;:{\&quot;value\&quot;:\&quot;page\&quot;},\&quot;max\&quot;:{\&quot;value\&quot;:\&quot;5\&quot;},\&quot;hideHeading\&quot;:{\&quot;value\&quot;:\&quot;true\&quot;}},\&quot;macroMetadata\&quot;:{\&quot;schemaVersion\&quot;:{\&quot;value\&quot;:\&quot;1\&quot;},\&quot;title\&quot;:\&quot;Recently Updated\&quot;}},\&quot;localId\&quot;:null,\&quot;bodyType\&quot;:\&quot;none\&quot;}}&quot;,&quot;contentId&quot;:&quot;33329&quot;}</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/wiki/spaces/PN/overview</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-APOLLO-OPERATION-NAME" elementType="Header">
                  <stringProp name="Header.name">X-APOLLO-OPERATION-NAME</stringProp>
                  <stringProp name="Header.value">MacroContentRendererQueryWithTags</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-477" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/session/heartbeat</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-478" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;batch&quot;:[{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:53.260Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskSuccess&quot;,&quot;attributes&quot;:{&quot;quickstartType&quot;:&quot;nthUserQuickstartV2&quot;,&quot;uuid&quot;:&quot;SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;isInitial&quot;:false,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:419.6000000005588,&quot;startTime&quot;:27841.5,&quot;duration&quot;:0,&quot;activeDuration&quot;:0,&quot;adjustedDuration&quot;:0,&quot;task&quot;:&quot;onboarding-quickstart&quot;,&quot;taskId&quot;:&quot;4bba1021-d9e3-4487-9abc-05b4b349666b&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskSuccess&quot;,&quot;messageId&quot;:&quot;ajs-7a64be35-67e6-4359-867a-4ed01e9b57cd&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:00.121Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:53.262Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;measured&quot;,&quot;actionSubject&quot;:&quot;experience&quot;,&quot;action&quot;:&quot;measured&quot;,&quot;attributes&quot;:{&quot;properties&quot;:{&quot;event:source&quot;:{&quot;name&quot;:&quot;ufo/web&quot;,&quot;version&quot;:&quot;0.1.5&quot;},&quot;event:schema&quot;:&quot;0.1.7&quot;,&quot;event:product&quot;:&quot;confluence&quot;,&quot;event:region&quot;:&quot;confluence-prod-ap-8-3.prod.atl-paas.net&quot;,&quot;event:hostname&quot;:&quot;thinktimetechnology.atlassian.net&quot;,&quot;event:route&quot;:&quot;&quot;,&quot;event:browser:name&quot;:&quot;Chrome&quot;,&quot;event:browser:version&quot;:&quot;105.0.0.0&quot;,&quot;event:cpus&quot;:3,&quot;event:memory&quot;:8,&quot;event:network:effectiveType&quot;:&quot;4g&quot;,&quot;event:network:rtt&quot;:200,&quot;event:network:downlink&quot;:4.35,&quot;app:framework:name&quot;:&quot;react&quot;,&quot;app:framework:version&quot;:&quot;16.14.0&quot;,&quot;app:web:version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;experience:name&quot;:&quot;intialisation&quot;,&quot;experience:key&quot;:&quot;platform.fe.load.search-dialog.intialisation&quot;,&quot;experience:status&quot;:&quot;ABORTED&quot;,&quot;experience:duration&quot;:70,&quot;experience:startTime&quot;:27501,&quot;experience:spanId&quot;:&quot;36386970-ddd6-40ac-98ec-0b3ae33c8545&quot;,&quot;experience:pageVisible&quot;:&quot;visible&quot;},&quot;performance&quot;:{&quot;event:key&quot;:&quot;platform.fe.page-segment-load.search-dialog.intialisation&quot;,&quot;event:type&quot;:&quot;page-segment-load&quot;,&quot;metric:tti&quot;:70,&quot;metric:fmp&quot;:70,&quot;payloadTime&quot;:0.20000000018626451},&quot;task&quot;:&quot;intialisation&quot;},&quot;tags&quot;:[&quot;observability&quot;],&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;experience measured&quot;,&quot;messageId&quot;:&quot;ajs-10632eaf-dd9e-4093-a555-3df18dbc9da3&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:00.121Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:53.263Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;home&quot;,&quot;actionSubject&quot;:&quot;home-v1.5&quot;,&quot;action&quot;:&quot;dwelled&quot;,&quot;attributes&quot;:{&quot;dwellTime&quot;:21159,&quot;finalDwellEvent&quot;:true,&quot;homeVersion&quot;:&quot;chicago&quot;},&quot;eventType&quot;:&quot;track&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;home-v1.5 dwelled&quot;,&quot;messageId&quot;:&quot;ajs-fdfb6b79-b023-4505-abc5-a35054aeb823&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:00.121Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:53.265Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;confluence-frontend&quot;,&quot;actionSubject&quot;:&quot;Navigation&quot;,&quot;action&quot;:&quot;done&quot;,&quot;actionSubjectId&quot;:&quot;NavigationLoading&quot;,&quot;attributes&quot;:{&quot;featureFlags&quot;:{&quot;confluence.frontend-delete-own-permission-spotlight&quot;:true,&quot;confluence.frontend-delete-own-permission-spotlight-delay-duration&quot;:&quot;3000.0&quot;,&quot;confluence.frontend.add.labels&quot;:true,&quot;confluence.frontend.advanced-search.archive-search-filters&quot;:true,&quot;confluence.frontend.advanced-search.smart-contributor-filter&quot;:true,&quot;confluence.frontend.archive.and.delete.space&quot;:true,&quot;confluence.frontend.archive.pages&quot;:true,&quot;confluence.frontend.archive.pages.allow.bulk&quot;:true,&quot;confluence.frontend.archive.pages.allow.bulk.ui.multi-select&quot;:true,&quot;confluence.frontend.archive.pages.selection-limit&quot;:&quot;500.0&quot;,&quot;confluence.frontend.archive.recommendation.email&quot;:true,&quot;confluence.frontend.bandana.client.short.socket.timeout&quot;:&quot;50.0&quot;,&quot;confluence.frontend.batch.tasks&quot;:true,&quot;confluence.frontend.branch.deployment&quot;:&quot;off&quot;,&quot;confluence.frontend.collab.ncs.max.participants&quot;:&quot;12.0&quot;,&quot;confluence.frontend.conditional.inline.comments&quot;:true,&quot;confluence.frontend.connect.macro.save-as-forge&quot;:true,&quot;confluence.frontend.connect.macro.view-as-forge&quot;:true,&quot;confluence.frontend.convert-page-to-blog&quot;:&quot;v1&quot;,&quot;confluence.frontend.copy-page-tree&quot;:true,&quot;confluence.frontend.core.invites.optimisation&quot;:&quot;layout-rearrangement-and-nth-users-product-selector-variation&quot;,&quot;confluence.frontend.cql.metadata&quot;:true,&quot;confluence.frontend.create-content.blog-shortcut&quot;:true,&quot;confluence.frontend.create-content.discrete-route&quot;:true,&quot;confluence.frontend.create-team-on-behalf-of-others&quot;:true,&quot;confluence.frontend.creator-studio.personal-space-side-nav.baseline-metrics&quot;:true,&quot;confluence.frontend.debounce.mentions&quot;:&quot;150.0&quot;,&quot;confluence.frontend.delay.comment.button&quot;:true,&quot;confluence.frontend.delay.page.comments.render&quot;:&quot;delay-render&quot;,&quot;confluence.frontend.disable.invalid.extension.warning&quot;:&quot;renderer&quot;,&quot;confluence.frontend.editor.same-file-name-flag&quot;:true,&quot;confluence.frontend.eliminate.macro.context.to.link.conversion&quot;:true,&quot;confluence.frontend.embedded-confluence.enable.migration&quot;:&quot;JSM,msteams&quot;,&quot;confluence.frontend.embedded-confluence.enable.nfpe&quot;:true,&quot;confluence.frontend.enable-remote-switcher-admin-configuration&quot;:true,&quot;confluence.frontend.enable-remote-switcher-product-configuration&quot;:true,&quot;confluence.frontend.enable-ufo&quot;:true,&quot;confluence.frontend.enable.archive.permission&quot;:true,&quot;confluence.frontend.enable.ccp.seq3.upflow.transition&quot;:true,&quot;confluence.frontend.enable.ccp.seq4.upflow.transition&quot;:true,&quot;confluence.frontend.enable.help-menu.global-feedback-collector&quot;:true,&quot;confluence.frontend.enable.media.upload.api.v2&quot;:true,&quot;confluence.frontend.enduser-emcee-discover&quot;:true,&quot;confluence.frontend.engage-platform.engagekit&quot;:true,&quot;confluence.frontend.eop.recommendations.rollout&quot;:&quot;on&quot;,&quot;confluence.frontend.eop.suggestion-reason&quot;:true,&quot;confluence.frontend.extension.api-v2.macros&quot;:true,&quot;confluence.frontend.extension.chart&quot;:true,&quot;confluence.frontend.extension.chart.render&quot;:true,&quot;confluence.frontend.extension.config-panel&quot;:true,&quot;confluence.frontend.extension.config-panel.opt-out&quot;:&quot;{\&quot;macros\&quot;:[\&quot;create-from-template\&quot;,\&quot;auibutton\&quot;,\&quot;cfm-progress-bar-hyperlink-step\&quot;,\&quot;decisionreport\&quot;,\&quot;viewpdf\&quot;,\&quot;viewdoc\&quot;,\&quot;viewxls\&quot;,\&quot;viewppt\&quot;,\&quot;detailssummary\&quot;,\&quot;contentbylabel\&quot;,\&quot;blog-posts\&quot;],\&quot;on\&quot;:true}&quot;,&quot;confluence.frontend.extension.element-browser&quot;:true,&quot;confluence.frontend.extension.floatingToolbar&quot;:true,&quot;confluence.frontend.extension.plus-menu&quot;:true,&quot;confluence.frontend.external-share&quot;:&quot;not-enrolled&quot;,&quot;confluence.frontend.exus.import-from-slack&quot;:true,&quot;confluence.frontend.fabric-editor.predictable-list.enabled&quot;:true,&quot;confluence.frontend.fabric.editor.allow.synchrony.recovery&quot;:true,&quot;confluence.frontend.fabric.editor.analytics-instance-name-attribute&quot;:&quot;Production&quot;,&quot;confluence.frontend.fabric.editor.autonomy-tables&quot;:true,&quot;confluence.frontend.fabric.editor.blank.blogpost&quot;:true,&quot;confluence.frontend.fabric.editor.blank.page&quot;:true,&quot;confluence.frontend.fabric.editor.breadcrumbs.call.close&quot;:true,&quot;confluence.frontend.fabric.editor.collab-disconnect-tracking&quot;:true,&quot;confluence.frontend.fabric.editor.collapsed-breadcrumbs&quot;:&quot;collapse-and-remove-people&quot;,&quot;confluence.frontend.fabric.editor.custom-panel&quot;:true,&quot;confluence.frontend.fabric.editor.custom-panel.edit&quot;:true,&quot;confluence.frontend.fabric.editor.data-consumer-mark&quot;:true,&quot;confluence.frontend.fabric.editor.disable-spellcheck-by-browser&quot;:&quot;{}&quot;,&quot;confluence.frontend.fabric.editor.distribute-columns&quot;:true,&quot;confluence.frontend.fabric.editor.draft-in-page-tree.allowed-spaces&quot;:&quot;_ALL_SPACES_&quot;,&quot;confluence.frontend.fabric.editor.draft-in-page-tree.show-changeboarding-community-post&quot;:true,&quot;confluence.frontend.fabric.editor.edit-overlay&quot;:true,&quot;confluence.frontend.fabric.editor.embed-preview-size&quot;:&quot;control&quot;,&quot;confluence.frontend.fabric.editor.enable-sticky-table-headers&quot;:true,&quot;confluence.frontend.fabric.editor.enable.heartbeat-activity&quot;:true,&quot;confluence.frontend.fabric.editor.enable.new.editor.flags&quot;:true,&quot;confluence.frontend.fabric.editor.find-and-replace&quot;:true,&quot;confluence.frontend.fabric.editor.find-and-replace.allow-match-case&quot;:true,&quot;confluence.frontend.fabric.editor.inline.comments&quot;:&quot;fabric&quot;,&quot;confluence.frontend.fabric.editor.linking.new.activity.provider&quot;:true,&quot;confluence.frontend.fabric.editor.local-id-generation-on-tables&quot;:true,&quot;confluence.frontend.fabric.editor.maxUnsafeChromeSpellcheckingVersion&quot;:&quot;0.0&quot;,&quot;confluence.frontend.fabric.editor.media.captions&quot;:true,&quot;confluence.frontend.fabric.editor.on-close-draft-redirect-to-parent.allowed-spaces&quot;:&quot;_ALL_SPACES_&quot;,&quot;confluence.frontend.fabric.editor.page-cover-pictures&quot;:true,&quot;confluence.frontend.fabric.editor.performance-tracking&quot;:&quot;{\&quot;pasteTracking\&quot;:{\&quot;enabled\&quot;:true},\&quot;bFreezeTracking\&quot;:{\&quot;trackInteractionType\&quot;:true,\&quot;trackSeverity\&quot;:true},\&quot;contentRetrievalTracking\&quot;:{\&quot;successSamplingRate\&quot;:5.0,\&quot;failureSamplingRate\&quot;:1.0,\&quot;reportErrorStack\&quot;:false,\&quot;enabled\&quot;:true},\&quot;onEditorReadyCallbackTracking\&quot;:{\&quot;enabled\&quot;:true},\&quot;inputTracking\&quot;:{\&quot;trackSeverity\&quot;:true,\&quot;severityDegradedThreshold\&quot;:273.0,\&quot;samplingRate\&quot;:100.0,\&quot;countNodes\&quot;:true,\&quot;severityNormalThreshold\&quot;:143.0,\&quot;enabled\&quot;:true},\&quot;renderTracking\&quot;:{\&quot;editor\&quot;:{\&quot;useShallow\&quot;:false,\&quot;enabled\&quot;:true},\&quot;reactEditorView\&quot;:{\&quot;useShallow\&quot;:true,\&quot;enabled\&quot;:true}},\&quot;uiTracking\&quot;:{\&quot;samplingRate\&quot;:100.0,\&quot;enabled\&quot;:true},\&quot;ttiTracking\&quot;:{\&quot;trackSeverity\&quot;:true,\&quot;ttiSeverityNormalThreshold\&quot;:8000.0,\&quot;ttiFromInvocationSeverityDegradedThreshold\&quot;:7813.0,\&quot;ttiSeverityDegradedThreshold\&quot;:10000.0,\&quot;ttiFromInvocationSeverityNormalThreshold\&quot;:4804.0,\&quot;enabled\&quot;:true},\&quot;transactionTracking\&quot;:{\&quot;usePerformanceMarks\&quot;:true,\&quot;samplingRate\&quot;:100.0,\&quot;enabled\&quot;:true},\&quot;onChangeCallbackTracking\&quot;:{\&quot;enabled\&quot;:true},\&quot;catchAllTracking\&quot;:{\&quot;enabled\&quot;:false}}&quot;,&quot;confluence.frontend.fabric.editor.plainTextPasteLinkification&quot;:true,&quot;confluence.frontend.fabric.editor.preload.timeout&quot;:&quot;0.0&quot;,&quot;confluence.frontend.fabric.editor.queue-analytics&quot;:true,&quot;confluence.frontend.fabric.editor.referentiality&quot;:true,&quot;confluence.frontend.fabric.editor.renderer-render-tracking&quot;:&quot;{}&quot;,&quot;confluence.frontend.fabric.editor.satisfaction.survey&quot;:true,&quot;confluence.frontend.fabric.editor.satisfaction.survey.delay&quot;:&quot;28.0&quot;,&quot;confluence.frontend.fabric.editor.save-indicator-1point5&quot;:true,&quot;confluence.frontend.fabric.editor.show-hover-preview&quot;:true,&quot;confluence.frontend.fabric.editor.show.persistent.save.status&quot;:true,&quot;confluence.frontend.fabric.editor.showAvatarGroupAsPlugin&quot;:true,&quot;confluence.frontend.fabric.editor.smartcards.macro-override&quot;:&quot;jira,jiraroadmap,google-drive-sheets,google-drive-docs,OneDrive,google-drive-slides&quot;,&quot;confluence.frontend.fabric.editor.synchrony.long-polling&quot;:true,&quot;confluence.frontend.fabric.editor.synchrony.websocket-worker&quot;:true,&quot;confluence.frontend.fabric.editor.table-cell-optimisation&quot;:true,&quot;confluence.frontend.fabric.editor.table-initial-render-optimisation&quot;:true,&quot;confluence.frontend.fabric.editor.table-mousemove-optimisation&quot;:true,&quot;confluence.frontend.fabric.editor.table-overflow-shadows-optimization&quot;:true,&quot;confluence.frontend.fabric.editor.table-render-optimisation&quot;:true,&quot;confluence.frontend.fabric.editor.tooltip-discard-on-close.allowed-spaces&quot;:&quot;_ALL_SPACES_&quot;,&quot;confluence.frontend.fabric.editor.tti-tracking&quot;:&quot;{\&quot;enabled\&quot;:true}&quot;,&quot;confluence.frontend.fabric.editor.twoLineEditorToolbar&quot;:true,&quot;confluence.frontend.fabric.editor.user.internet.connection.indicator&quot;:true,&quot;confluence.frontend.fabric.editor.valid-transactions-tracking&quot;:&quot;{\&quot;samplingRate\&quot;:300.0}&quot;,&quot;confluence.frontend.fabric.editor.view-changing-experiment-toolbar-style&quot;:&quot;toolbarIcons&quot;,&quot;confluence.frontend.fabric.page.optin.migration&quot;:true,&quot;confluence.frontend.fabric.renderer.ttr-severity-tracking&quot;:&quot;{\&quot;severityDegradedThreshold\&quot;:4747.0,\&quot;severityNormalThreshold\&quot;:3775.0,\&quot;enabled\&quot;:true}&quot;,&quot;confluence.frontend.fabric.renderer.unsupported-content-levels-tracking&quot;:&quot;{\&quot;thresholds\&quot;:{\&quot;blocking\&quot;:1.5,\&quot;degraded\&quot;:1.0},\&quot;enabled\&quot;:true}&quot;,&quot;confluence.frontend.fabric.share.published&quot;:true,&quot;confluence.frontend.feed.content.query.field.test&quot;:&quot;off&quot;,&quot;confluence.frontend.feed.profile-card.follow&quot;:true,&quot;confluence.frontend.feed.reactions&quot;:&quot;not-enrolled&quot;,&quot;confluence.frontend.feed.recommendations&quot;:true,&quot;confluence.frontend.feed.recommendations-third-position&quot;:true,&quot;confluence.frontend.filter-events.exemptions&quot;:&quot;[]&quot;,&quot;confluence.frontend.focus.mode&quot;:true,&quot;confluence.frontend.focused.inline.comment.performance&quot;:&quot;variation&quot;,&quot;confluence.frontend.forge-custom-content&quot;:true,&quot;confluence.frontend.forge.extension-point.blueprint&quot;:true,&quot;confluence.frontend.forge.keyboardshortcuts.contentaction&quot;:true,&quot;confluence.frontend.forge.keyboardshortcuts.contentbylineitem&quot;:true,&quot;confluence.frontend.forge.keyboardshortcuts.contextmenu&quot;:true,&quot;confluence.frontend.forge.keyboardshortcuts.globalpage&quot;:true,&quot;confluence.frontend.forge.keyboardshortcuts.globalsettings&quot;:true,&quot;confluence.frontend.forge.keyboardshortcuts.homepagefeed&quot;:true,&quot;confluence.frontend.forge.keyboardshortcuts.spacepage&quot;:true,&quot;confluence.frontend.forge.keyboardshortcuts.spacesettings&quot;:true,&quot;confluence.frontend.full-width-templates&quot;:true,&quot;confluence.frontend.generic.comment.editor&quot;:true,&quot;confluence.frontend.global-feedback-collector-in-editor-help-center&quot;:true,&quot;confluence.frontend.growth.infi-slack-platform&quot;:true,&quot;confluence.frontend.heartbeat&quot;:true,&quot;confluence.frontend.hide-blank-drafts.allowed-spaces&quot;:&quot;_ALL_SPACES_&quot;,&quot;confluence.frontend.hide.gadgets.on.macro.selector&quot;:true,&quot;confluence.frontend.home-1.5&quot;:true,&quot;confluence.frontend.import-from-sources.tabs-enabled&quot;:true,&quot;confluence.frontend.in-editor-templates.backend-recovery&quot;:true,&quot;confluence.frontend.in-editor-templates.query-params-state&quot;:true,&quot;confluence.frontend.in-product.help&quot;:true,&quot;confluence.frontend.infi.interaction.notification.updates&quot;:true,&quot;confluence.frontend.inline.comments.nudge&quot;:&quot;variation&quot;,&quot;confluence.frontend.inline.highlights.performance&quot;:&quot;variation&quot;,&quot;confluence.frontend.invite-from-github.cohort&quot;:&quot;not-enrolled&quot;,&quot;confluence.frontend.invite.from.mention&quot;:&quot;variation-source&quot;,&quot;confluence.frontend.live-search&quot;:true,&quot;confluence.frontend.macro.analytics.tracker&quot;:true,&quot;confluence.frontend.macrobrowser.app.discovery&quot;:&quot;not-enrolled&quot;,&quot;confluence.frontend.marketplace-emcee-native-spa-enable&quot;:true,&quot;confluence.frontend.media.cards.new.experience&quot;:true,&quot;confluence.frontend.media.cards.server.side.rendering&quot;:true,&quot;confluence.frontend.media.poll.backoff.factor&quot;:&quot;1.25&quot;,&quot;confluence.frontend.media.poll.intervalms&quot;:&quot;3000.0&quot;,&quot;confluence.frontend.media.poll.maxIntervalms&quot;:&quot;200000.0&quot;,&quot;confluence.frontend.media.poll.maxattempts&quot;:&quot;30.0&quot;,&quot;confluence.frontend.media.viewer.zip.previews&quot;:true,&quot;confluence.frontend.mobile.web.full.page.takeover.variation&quot;:&quot;concrete&quot;,&quot;confluence.frontend.ncs.disconnected.delay.ms&quot;:&quot;0.0&quot;,&quot;confluence.frontend.ncs.use.404&quot;:true,&quot;confluence.frontend.network-status-listener.with-ui&quot;:true,&quot;confluence.frontend.new.feed.cards.observed.analytics&quot;:true,&quot;confluence.frontend.new.feed.rollout&quot;:&quot;on&quot;,&quot;confluence.frontend.newSitePerms&quot;:true,&quot;confluence.frontend.onboarding.account-setup-modal&quot;:&quot;not-enrolled&quot;,&quot;confluence.frontend.onboarding.account-setup-modal.calibration&quot;:&quot;experiment&quot;,&quot;confluence.frontend.onboarding.admin-quickstart-v2&quot;:&quot;enrolled&quot;,&quot;confluence.frontend.onboarding.cache.state&quot;:true,&quot;confluence.frontend.onboarding.editor-onboarding.draft-publish-2&quot;:&quot;enrolled&quot;,&quot;confluence.frontend.onboarding.editor-onboarding.tutorial-template&quot;:&quot;experiment&quot;,&quot;confluence.frontend.onboarding.editor-onboarding.user-tagging&quot;:true,&quot;confluence.frontend.onboarding.established.user&quot;:true,&quot;confluence.frontend.onboarding.experience&quot;:true,&quot;confluence.frontend.onboarding.migrations.quickstart&quot;:&quot;enrolled&quot;,&quot;confluence.frontend.onboarding.migrations.quickstart.calibration&quot;:&quot;control&quot;,&quot;confluence.frontend.onboarding.migrations.site-traits&quot;:true,&quot;confluence.frontend.onboarding.migrations.user-tagging&quot;:true,&quot;confluence.frontend.onboarding.nth-user-quickstart-v2&quot;:&quot;experiment&quot;,&quot;confluence.frontend.onboarding.nth-user-quickstart-v2.calibration&quot;:&quot;experiment&quot;,&quot;confluence.frontend.onboarding.nth.user.quickstart&quot;:&quot;enrolled&quot;,&quot;confluence.frontend.onboarding.nudges&quot;:&quot;enrolled&quot;,&quot;confluence.frontend.onboarding.onboarding-state-refactor&quot;:&quot;not-enrolled&quot;,&quot;confluence.frontend.onboarding.persistent-invite&quot;:&quot;not-enrolled&quot;,&quot;confluence.frontend.onboarding.persistent-invite.calibration&quot;:&quot;not-enrolled&quot;,&quot;confluence.frontend.onboarding.quickstart&quot;:&quot;enrolled&quot;,&quot;confluence.frontend.onboarding.quickstart.nudge&quot;:&quot;enrolled&quot;,&quot;confluence.frontend.onboarding.remove.role.screen&quot;:&quot;experiment&quot;,&quot;confluence.frontend.onboarding.segment&quot;:&quot;control&quot;,&quot;confluence.frontend.onboarding.simplify-admin-setup.test&quot;:&quot;control&quot;,&quot;confluence.frontend.onboarding.simplify.admin.setup&quot;:&quot;not-enrolled&quot;,&quot;confluence.frontend.onboarding.simplify.admin.setup.skip-invite&quot;:&quot;enrolled&quot;,&quot;confluence.frontend.onboarding.simplify.admin.setup.skip-invite.calibration&quot;:&quot;control&quot;,&quot;confluence.frontend.onboarding.xflow.jsw&quot;:&quot;experiment&quot;,&quot;confluence.frontend.org.people.picker.expansion&quot;:&quot;variation&quot;,&quot;confluence.frontend.org.people.picker.in.core.invites&quot;:true,&quot;confluence.frontend.org.people.picker.in.core.invites.prerequisite&quot;:true,&quot;confluence.frontend.page-cards-on-hover&quot;:true,&quot;confluence.frontend.page.comments.new.api&quot;:true,&quot;confluence.frontend.page.history.version&quot;:&quot;v2&quot;,&quot;confluence.frontend.page.statuses&quot;:true,&quot;confluence.frontend.personal.space.backfill&quot;:true,&quot;confluence.frontend.personal.space.backfill.onboarding&quot;:true,&quot;confluence.frontend.presentation.mode&quot;:true,&quot;confluence.frontend.presenter.mode.navigation.menu&quot;:true,&quot;confluence.frontend.pubsub.integration&quot;:true,&quot;confluence.frontend.quick-edit&quot;:true,&quot;confluence.frontend.quick-search.bitbucket&quot;:true,&quot;confluence.frontend.quick-search.google-drive&quot;:true,&quot;confluence.frontend.quick-search.opsgenie&quot;:true,&quot;confluence.frontend.quick-search.trello&quot;:true,&quot;confluence.frontend.quick.reload.strategy&quot;:&quot;SUBSCRIPTIONS&quot;,&quot;confluence.frontend.reactions&quot;:&quot;reactions&quot;,&quot;confluence.frontend.reactions.for.email&quot;:true,&quot;confluence.frontend.related.pages.space.settings&quot;:true,&quot;confluence.frontend.remove.adg3.home.feedback.button&quot;:&quot;v2&quot;,&quot;confluence.frontend.restrictions-dialog-smart-picker&quot;:true,&quot;confluence.frontend.revert.page-migrated.reload.tinymce&quot;:true,&quot;confluence.frontend.rich.ld.test.flag&quot;:&quot;not-enrolled&quot;,&quot;confluence.frontend.search-dialog.use-urs-for-people-search&quot;:true,&quot;confluence.frontend.search.experiment.rollout&quot;:&quot;off&quot;,&quot;confluence.frontend.set.collab.init.timeout&quot;:&quot;0&quot;,&quot;confluence.frontend.shortcuts-experiment&quot;:&quot;off&quot;,&quot;confluence.frontend.show-existing-labels-in-dialog&quot;:true,&quot;confluence.frontend.show.standard.upsell&quot;:true,&quot;confluence.frontend.sort.resolved.comments&quot;:true,&quot;confluence.frontend.space-pages.relevant&quot;:&quot;variant&quot;,&quot;confluence.frontend.space-quick-links&quot;:true,&quot;confluence.frontend.space-settings-v2&quot;:true,&quot;confluence.frontend.space-shortcuts.link-picker&quot;:&quot;off&quot;,&quot;confluence.frontend.space.team.mapping&quot;:&quot;experiment&quot;,&quot;confluence.frontend.spaces-dropdown.create-a-space-move&quot;:&quot;off&quot;,&quot;confluence.frontend.stein.v2&quot;:&quot;not-enrolled&quot;,&quot;confluence.frontend.support.unsupported.fabric.migration&quot;:true,&quot;confluence.frontend.sw.disable.base-and-wiki&quot;:true,&quot;confluence.frontend.sw.disable.home&quot;:true,&quot;confluence.frontend.table-visualization&quot;:true,&quot;confluence.frontend.task.batching.interval&quot;:&quot;3000.0&quot;,&quot;confluence.frontend.template-recommendations-by-title-experiment&quot;:&quot;not-enrolled&quot;,&quot;confluence.frontend.template.editor.media.support&quot;:true,&quot;confluence.frontend.throttle.legacy.macro.query&quot;:true,&quot;confluence.frontend.ufo.enable-smart-links-experience&quot;:true,&quot;confluence.frontend.ufo.rate&quot;:&quot;{}&quot;,&quot;confluence.frontend.ufo.search-dialog&quot;:true,&quot;confluence.frontend.view.all.inline.comments&quot;:&quot;not-enrolled&quot;},&quot;duration&quot;:1,&quot;navVersion&quot;:&quot;3&quot;},&quot;tags&quot;:[&quot;performance&quot;],&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;Navigation done&quot;,&quot;messageId&quot;:&quot;ajs-4dc49884-4d23-4a1e-aab5-54ed63e463e8&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:00.121Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:53.267Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;confluence-frontend&quot;,&quot;actionSubject&quot;:&quot;main-layout&quot;,&quot;action&quot;:&quot;done&quot;,&quot;actionSubjectId&quot;:&quot;&quot;,&quot;attributes&quot;:{&quot;featureFlags&quot;:{},&quot;duration&quot;:46.799999999813735},&quot;tags&quot;:[&quot;performance&quot;],&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;main-layout done&quot;,&quot;messageId&quot;:&quot;ajs-48a4c095-66ff-4ce5-b0c2-914423c99b4f&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:00.121Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:53.474Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;performance&quot;,&quot;actionSubject&quot;:&quot;performance&quot;,&quot;action&quot;:&quot;measured&quot;,&quot;attributes&quot;:{&quot;task&quot;:&quot;confluence.fe.page-segment-load.app-navigation&quot;,&quot;properties&quot;:{&quot;event:key&quot;:&quot;confluence.fe.page-segment-load.app-navigation&quot;,&quot;event:type&quot;:&quot;page-segment-load&quot;,&quot;event:product&quot;:&quot;confluence&quot;,&quot;event:route&quot;:&quot;SPACE_OVERVIEW&quot;,&quot;event:id&quot;:&quot;app-navigation&quot;,&quot;event:localHour&quot;:11,&quot;event:localDayOfWeek&quot;:1,&quot;event:region&quot;:&quot;confluence-prod-ap-8-3.prod.atl-paas.net&quot;,&quot;app:framework:name&quot;:&quot;react&quot;,&quot;app:framework:version&quot;:&quot;16.14.0&quot;,&quot;app:web:version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;bm:version&quot;:3,&quot;telemetry:browser:name&quot;:&quot;Chrome&quot;,&quot;telemetry:browser:version&quot;:&quot;105.0.0.0&quot;,&quot;telemetry:cpus&quot;:3,&quot;telemetry:memory&quot;:8,&quot;telemetry:network:effectiveType&quot;:&quot;4g&quot;,&quot;telemetry:network:rtt&quot;:200,&quot;telemetry:network:downlink&quot;:4.35,&quot;custom:pageLoadInfo&quot;:{&quot;uuid&quot;:&quot;SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;isInitial&quot;:false,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:254.1000000005588},&quot;featureFlags&quot;:{&quot;confluence.frontend.pollinator.synthetic.check.tenants&quot;:false,&quot;confluence.frontend.delay.comment.button&quot;:true,&quot;confluence.frontend.delay.page.comments.render&quot;:&quot;delay-render&quot;,&quot;confluence.frontend.enable.external.collab&quot;:false,&quot;confluence.frontend.eop.recommendations.rollout&quot;:&quot;on&quot;,&quot;confluence.frontend.focused.inline.comment.performance&quot;:&quot;variation&quot;,&quot;confluence.frontend.live-search&quot;:true,&quot;confluence.frontend.presentation.mode&quot;:true,&quot;confluence.ssr.fabric.macros&quot;:null,&quot;confluence.ssr.page-tree&quot;:null,&quot;confluence.ssr.page-tree.best.effort&quot;:null,&quot;confluence.ssr.read-time&quot;:null,&quot;confluence.ssr.page-statuses&quot;:null,&quot;confluence.ssr.home.feed.best-effort&quot;:null,&quot;confluence.ssr.shortcuts&quot;:null,&quot;confluence.ssr.shortcuts.link-filter&quot;:null,&quot;confluence.ssr.smartlinks&quot;:null,&quot;confluence.ssr.page-share-and-perms-button&quot;:null,&quot;confluence.frontend.page-share-and-permissions&quot;:false,&quot;confluence.frontend.economy-growth.discover-apps-in-sidebar.experiment&quot;:false,&quot;confluence.frontend.top.level.body.content.query&quot;:false,&quot;confluence.ssr.integrating.public.links.to.nsd&quot;:null,&quot;confluence.frontend.integrating.public.links.to.nsd&quot;:false,&quot;confluence.frontend.fabric.editor.macro.adf.frontend.render&quot;:false,&quot;confluence.frontend.bandana.client.short.socket.timeout&quot;:&quot;50.0&quot;},&quot;hostname&quot;:&quot;thinktimetechnology.atlassian.net&quot;,&quot;confluence:cloudId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;confluence:environment&quot;:&quot;PRODUCTION&quot;,&quot;confluence:shard&quot;:&quot;confluence-prod-ap-8-3.prod.atl-paas.net&quot;,&quot;confluence:ssr&quot;:&quot;false&quot;,&quot;confluence:uniqueIdentifier&quot;:&quot;undefined&quot;,&quot;confluence:initial&quot;:false,&quot;confluence:criticalAssets&quot;:{&quot;cachedRate&quot;:0.5952380952380952,&quot;count&quot;:168,&quot;size&quot;:6214831,&quot;cachedSize&quot;:12473,&quot;nonCachedSize&quot;:6202358,&quot;sizeBasedCachedRate&quot;:0.002006973319145766},&quot;metric:fmp&quot;:254,&quot;metric:tti&quot;:254,&quot;metric:fmp:histogramBuckets&quot;:&quot;500_1000_1500_2000_2500_3000&quot;,&quot;metric:tti:histogramBuckets&quot;:&quot;1000_1500_2000_2500_3000_4000&quot;,&quot;pageVisible:state&quot;:&quot;visible&quot;,&quot;pageVisible:value&quot;:true,&quot;event:initial&quot;:false}},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;performance measured&quot;,&quot;messageId&quot;:&quot;ajs-d92483f0-6b24-42b9-908d-a5b190f99fd8&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:00.121Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:53.957Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;searchDialog&quot;,&quot;actionSubject&quot;:&quot;experiment&quot;,&quot;action&quot;:&quot;loaded&quot;,&quot;attributes&quot;:{&quot;abTest&quot;:{&quot;abTestId&quot;:&quot;google-drive-ab&quot;,&quot;controlId&quot;:&quot;google-drive-hidden&quot;,&quot;experimentId&quot;:&quot;google-drive-hidden&quot;},&quot;experimentRequestDuration&quot;:688,&quot;isMultiProduct&quot;:false,&quot;frontend&quot;:&quot;@atlassian/product-search-dialog@8.69.0&quot;,&quot;isSticky&quot;:true,&quot;isStickyUpdated&quot;:false,&quot;stickyQueryUpdated&quot;:false},&quot;nonPrivacySafeAttributes&quot;:{},&quot;tags&quot;:[&quot;fabricElements&quot;],&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;experiment loaded&quot;,&quot;messageId&quot;:&quot;ajs-35df27c7-8f7e-4a4a-9885-119ab73ec61a&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:00.121Z&quot;}],&quot;sentAt&quot;:&quot;2022-09-26T05:59:00.121Z&quot;,&quot;metadata&quot;:{&quot;resilienceMechanism&quot;:&quot;indexeddb&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/gasv3/api/v1/batch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-463" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;type&quot;:&quot;metric&quot;,&quot;meta&quot;:{&quot;subproduct&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;0.1&quot;,&quot;env&quot;:&quot;prod&quot;,&quot;os&quot;:&quot;windows&quot;,&quot;platform&quot;:&quot;desktop&quot;,&quot;browser&quot;:&quot;chrome&quot;},&quot;metalId&quot;:&quot;74fe5415-a93b-4197-bb9b-294dc9439cd7&quot;,&quot;data&quot;:[{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;fe.perf.component.time_to_ready.slo&quot;,&quot;tags&quot;:[&quot;component:getForgeExtensionProvider&quot;,&quot;page:confluence:macroRenderer&quot;,&quot;success:true&quot;],&quot;value&quot;:1,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.component.time_to_ready&quot;,&quot;tags&quot;:[&quot;component:getForgeExtensionProvider&quot;,&quot;page:confluence:macroRenderer&quot;],&quot;value&quot;:345.19999999925494,&quot;sampleRate&quot;:1}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/metal/ingest</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-483" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;operationName&quot;:&quot;SpaceSettingsSidebarLinksQuery&quot;,&quot;variables&quot;:{&quot;location&quot;:&quot;system.space.tools&quot;,&quot;spaceKey&quot;:&quot;PN&quot;},&quot;query&quot;:&quot;query SpaceSettingsSidebarLinksQuery($location: String, $locations: [String], $contentId: ID, $spaceKey: String, $version: Int) {\n  webItemSections(location: $location, locations: $locations, contentId: $contentId, key: $spaceKey, version: $version) {\n    ...SpaceSettingsNavigationFragment\n    __typename\n  }\n  space(key: $spaceKey) {\n    ...IsCompanyConnectEnabledFragment\n    __typename\n  }\n}\n\nfragment IsCompanyConnectEnabledFragment on Space {\n  id\n  currentUser {\n    isAdmin\n    __typename\n  }\n  __typename\n}\n\nfragment SpaceSettingsNavigationFragment on WebSection {\n  id\n  label\n  cacheKey\n  items {\n    id\n    completeKey\n    label\n    url\n    icon {\n      path\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cgraphql?q=SpaceSettingsSidebarLinksQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/wiki/spaces/PN/overview</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-APOLLO-OPERATION-NAME" elementType="Header">
                  <stringProp name="Header.name">X-APOLLO-OPERATION-NAME</stringProp>
                  <stringProp name="Header.value">SpaceSettingsSidebarLinksQuery</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-482" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;type&quot;:&quot;metric&quot;,&quot;meta&quot;:{&quot;synthetic&quot;:&quot;false&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;env&quot;:&quot;prod&quot;,&quot;os&quot;:&quot;windows&quot;,&quot;platform&quot;:&quot;desktop&quot;,&quot;browser&quot;:&quot;chrome&quot;},&quot;metalId&quot;:&quot;88dcca98-e854-4063-954c-eabe3aeb25d2&quot;,&quot;data&quot;:[{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.first_meaningful_paint&quot;,&quot;tags&quot;:[&quot;active_tab:true&quot;,&quot;initial_load:false&quot;,&quot;page:space-overview&quot;,&quot;gsd_histogram:2000_2500_3000_3500_4000_4500_5000&quot;],&quot;value&quot;:7347,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;fe.perf.first_meaningful_paint.slo&quot;,&quot;tags&quot;:[&quot;active_tab:true&quot;,&quot;initial_load:false&quot;,&quot;page:space-overview&quot;,&quot;success:false&quot;],&quot;value&quot;:1,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.time_to_interactive&quot;,&quot;tags&quot;:[&quot;active_tab:true&quot;,&quot;initial_load:false&quot;,&quot;page:space-overview&quot;,&quot;gsd_histogram:2000_2500_3000_3500_4000_4500_5000&quot;],&quot;value&quot;:7347,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;fe.perf.time_to_interactive.slo&quot;,&quot;tags&quot;:[&quot;active_tab:true&quot;,&quot;initial_load:false&quot;,&quot;page:space-overview&quot;,&quot;success:false&quot;],&quot;value&quot;:1,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.first_meaningful_paint&quot;,&quot;tags&quot;:[&quot;active_tab:true&quot;,&quot;initial_load:false&quot;,&quot;page:segment-more-actions-dropdown&quot;,&quot;gsd_histogram:500_1000_1500_2000_2500_3000&quot;],&quot;value&quot;:7347,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.time_to_interactive&quot;,&quot;tags&quot;:[&quot;active_tab:true&quot;,&quot;initial_load:false&quot;,&quot;page:segment-more-actions-dropdown&quot;,&quot;gsd_histogram:1000_1500_2000_2500_3000_4000&quot;],&quot;value&quot;:7347,&quot;sampleRate&quot;:1}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/metal/ingest</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-488" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;r&quot;:[&quot;confluence.web.resources:view-content&quot;,&quot;confluence.macros.advanced:get-more&quot;],&quot;c&quot;:[],&quot;xc&quot;:[&quot;_super&quot;,&quot;confluence-keyboard-shortcuts-batch&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:dynamic-css-resources&quot;],&quot;xr&quot;:[&quot;com.atlassian.plugins.jquery:jquery&quot;,&quot;com.atlassian.auiplugin:dialog2&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:iframe-host-css-v5&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:confluence-macro-v5&quot;,&quot;confluence.web.resources:querystring&quot;,&quot;confluence.web.resources:navigator-context&quot;,&quot;com.atlassian.auiplugin:internal-@atlassian-aui-src-js-aui-dialog2&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:dialog-options-v5&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:iframe-host-utils-v5&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:ap-core-v5&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:ap-spa-context-v5&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:ap-navigator-v5&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:ap-extensions-v5&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:ap-user-v5&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:content-resolver-v5&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:ap-context-v5&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:module-loader-v5&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:iframe-insertion-v5&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:iframe-host-js-v5&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:confluence-content-property-api-v5&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:confluence-macro-api-v5&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:confluence-navigator-routes-v5&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:confluence-customcontent-v5&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:confluence-spa-inlinedialog-cleanup&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:confluence-request-marshal-v5&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:confluence-product-extensions-v5&quot;,&quot;com.atlassian.plugins.atlassian-connect-plugin:confluence-module-loader-v5&quot;,&quot;com.atlassian.confluence.plugins.confluence-highlight-actions:highlighting-experiment-resources&quot;,&quot;com.atlassian.confluence.plugins.confluence-jira-content:confluence-jira-content-loader&quot;,&quot;confluence.macros.advanced:common-resources&quot;,&quot;confluence.macros.advanced:recently-updated-concise-resources&quot;]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/wiki/rest/webResources/1.0/resources</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-489" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;operationName&quot;:&quot;FeedFollowQuery&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query FeedFollowQuery {\n  getFeedUserConfig {\n    users {\n      ... on User {\n        accountId\n        __typename\n      }\n      ... on UnknownUser {\n        accountId\n        __typename\n      }\n      ... on KnownUser {\n        accountId\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cgraphql?q=FeedFollowQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/wiki/spaces/PN/overview</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-APOLLO-OPERATION-NAME" elementType="Header">
                  <stringProp name="Header.name">X-APOLLO-OPERATION-NAME</stringProp>
                  <stringProp name="Header.value">FeedFollowQuery</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-490" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument" enabled="true">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;WebItemLocationQuery&quot;,&quot;variables&quot;:{&quot;location&quot;:&quot;system.header/left.button.group&quot;,&quot;locations&quot;:[],&quot;contentId&quot;:null,&quot;spaceKey&quot;:null,&quot;version&quot;:null},&quot;query&quot;:&quot;query WebItemLocationQuery($location: String, $locations: [String], $contentId: ID, $spaceKey: String, $version: Int) {\n  webItemSections(location: $location, locations: $locations, contentId: $contentId, key: $spaceKey, version: $version) {\n    id\n    label\n    cacheKey\n    styleClass\n    items {\n      accessKey\n      completeKey\n      hasCondition\n      id\n      icon {\n        path\n        __typename\n      }\n      params {\n        key\n        value\n        __typename\n      }\n      label\n      moduleKey\n      section\n      styleClass\n      tooltip\n      url\n      urlWithoutContextPath\n      weight\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cgraphql?q=WebItemLocationQuery:system.header/left.button.group</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="GraphQLHTTPSampler.operationName">WebItemLocationQuery</stringProp>
            <stringProp name="GraphQLHTTPSampler.query">query WebItemLocationQuery($location: String, $locations: [String], $contentId: ID, $spaceKey: String, $version: Int) {
  webItemSections(location: $location, locations: $locations, contentId: $contentId, key: $spaceKey, version: $version) {
    id
    label
    cacheKey
    styleClass
    items {
      accessKey
      completeKey
      hasCondition
      id
      icon {
        path
        __typename
      }
      params {
        key
        value
        __typename
      }
      label
      moduleKey
      section
      styleClass
      tooltip
      url
      urlWithoutContextPath
      weight
      __typename
    }
    __typename
  }
}
</stringProp>
            <stringProp name="GraphQLHTTPSampler.variables">{&quot;location&quot;:&quot;system.header/left.button.group&quot;,&quot;locations&quot;:[],&quot;contentId&quot;:null,&quot;spaceKey&quot;:null,&quot;version&quot;:null}</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/wiki/spaces/PN/overview</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-APOLLO-OPERATION-NAME" elementType="Header">
                  <stringProp name="Header.name">X-APOLLO-OPERATION-NAME</stringProp>
                  <stringProp name="Header.value">WebItemLocationQuery:system.header/left.button.group</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-494" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;batch&quot;:[{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:53.959Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;confluence-frontend&quot;,&quot;actionSubject&quot;:&quot;forceUpdateSPA&quot;,&quot;action&quot;:&quot;checked&quot;,&quot;attributes&quot;:{&quot;navigationStart&quot;:1664171905322,&quot;buildDate&quot;:1663854142232,&quot;forceUpdateTimestamp&quot;:1600714486414},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;forceUpdateSPA checked&quot;,&quot;messageId&quot;:&quot;ajs-77a073cf-4894-46fa-af51-19591f0514cd&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:00.688Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:54.152Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;performance&quot;,&quot;actionSubject&quot;:&quot;performance&quot;,&quot;action&quot;:&quot;measured&quot;,&quot;attributes&quot;:{&quot;task&quot;:&quot;confluence.fe.page-segment-load.search-box&quot;,&quot;properties&quot;:{&quot;event:key&quot;:&quot;confluence.fe.page-segment-load.search-box&quot;,&quot;event:type&quot;:&quot;page-segment-load&quot;,&quot;event:product&quot;:&quot;confluence&quot;,&quot;event:route&quot;:&quot;SPACE_OVERVIEW&quot;,&quot;event:id&quot;:&quot;search-box&quot;,&quot;event:localHour&quot;:11,&quot;event:localDayOfWeek&quot;:1,&quot;event:region&quot;:&quot;confluence-prod-ap-8-3.prod.atl-paas.net&quot;,&quot;app:framework:name&quot;:&quot;react&quot;,&quot;app:framework:version&quot;:&quot;16.14.0&quot;,&quot;app:web:version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;bm:version&quot;:3,&quot;telemetry:browser:name&quot;:&quot;Chrome&quot;,&quot;telemetry:browser:version&quot;:&quot;105.0.0.0&quot;,&quot;telemetry:cpus&quot;:3,&quot;telemetry:memory&quot;:8,&quot;telemetry:network:effectiveType&quot;:&quot;4g&quot;,&quot;telemetry:network:rtt&quot;:200,&quot;telemetry:network:downlink&quot;:4.35,&quot;custom:pageLoadInfo&quot;:{&quot;uuid&quot;:&quot;SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;isInitial&quot;:false,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:1204.1000000005588},&quot;featureFlags&quot;:{&quot;confluence.frontend.pollinator.synthetic.check.tenants&quot;:false,&quot;confluence.frontend.delay.comment.button&quot;:true,&quot;confluence.frontend.delay.page.comments.render&quot;:&quot;delay-render&quot;,&quot;confluence.frontend.enable.external.collab&quot;:false,&quot;confluence.frontend.eop.recommendations.rollout&quot;:&quot;on&quot;,&quot;confluence.frontend.focused.inline.comment.performance&quot;:&quot;variation&quot;,&quot;confluence.frontend.live-search&quot;:true,&quot;confluence.frontend.presentation.mode&quot;:true,&quot;confluence.ssr.fabric.macros&quot;:null,&quot;confluence.ssr.page-tree&quot;:null,&quot;confluence.ssr.page-tree.best.effort&quot;:null,&quot;confluence.ssr.read-time&quot;:null,&quot;confluence.ssr.page-statuses&quot;:null,&quot;confluence.ssr.home.feed.best-effort&quot;:null,&quot;confluence.ssr.shortcuts&quot;:null,&quot;confluence.ssr.shortcuts.link-filter&quot;:null,&quot;confluence.ssr.smartlinks&quot;:null,&quot;confluence.ssr.page-share-and-perms-button&quot;:null,&quot;confluence.frontend.page-share-and-permissions&quot;:false,&quot;confluence.frontend.economy-growth.discover-apps-in-sidebar.experiment&quot;:false,&quot;confluence.frontend.top.level.body.content.query&quot;:false,&quot;confluence.ssr.integrating.public.links.to.nsd&quot;:null,&quot;confluence.frontend.integrating.public.links.to.nsd&quot;:false,&quot;confluence.frontend.fabric.editor.macro.adf.frontend.render&quot;:false,&quot;confluence.frontend.bandana.client.short.socket.timeout&quot;:&quot;50.0&quot;},&quot;hostname&quot;:&quot;thinktimetechnology.atlassian.net&quot;,&quot;confluence:cloudId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;confluence:environment&quot;:&quot;PRODUCTION&quot;,&quot;confluence:shard&quot;:&quot;confluence-prod-ap-8-3.prod.atl-paas.net&quot;,&quot;confluence:ssr&quot;:&quot;false&quot;,&quot;confluence:uniqueIdentifier&quot;:&quot;undefined&quot;,&quot;confluence:initial&quot;:false,&quot;confluence:criticalAssets&quot;:{&quot;cachedRate&quot;:0.5952380952380952,&quot;count&quot;:168,&quot;size&quot;:6214831,&quot;cachedSize&quot;:12473,&quot;nonCachedSize&quot;:6202358,&quot;sizeBasedCachedRate&quot;:0.002006973319145766},&quot;metric:fmp&quot;:1204,&quot;metric:tti&quot;:1204,&quot;metric:fmp:histogramBuckets&quot;:&quot;500_1000_1500_2000_2500_3000&quot;,&quot;metric:tti:histogramBuckets&quot;:&quot;1000_1500_2000_2500_3000_4000&quot;,&quot;pageVisible:state&quot;:&quot;visible&quot;,&quot;pageVisible:value&quot;:true,&quot;event:initial&quot;:false,&quot;timings:bundleEval&quot;:{&quot;SpaceOverviewRouteComponent(0)&quot;:{&quot;startTime&quot;:181,&quot;duration&quot;:1151}}}},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;performance measured&quot;,&quot;messageId&quot;:&quot;ajs-ce9e6934-b6d0-4cfe-849c-f560f2d44d48&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:00.688Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:54.701Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;viewed&quot;,&quot;attributes&quot;:{&quot;lastScreenEvent&quot;:{&quot;name&quot;:&quot;confluenceOnboardingQuickstartButtonDrawer&quot;,&quot;attributes&quot;:{&quot;quickstartType&quot;:&quot;nthUserQuickstartV2&quot;}}},&quot;eventType&quot;:&quot;ui&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui viewed&quot;,&quot;messageId&quot;:&quot;ajs-da472372-5ac9-4cc4-8950-e4637962bcf4&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:00.688Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:54.754Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskSuccess&quot;,&quot;attributes&quot;:{&quot;uuid&quot;:&quot;SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;isInitial&quot;:false,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:2000.1000000005588,&quot;startTime&quot;:27708,&quot;duration&quot;:1714,&quot;activeDuration&quot;:1714,&quot;adjustedDuration&quot;:1714,&quot;task&quot;:&quot;extension_point_home_header&quot;,&quot;taskId&quot;:&quot;40f30380-b8d7-423c-95b4-ae3930e36da0&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskSuccess&quot;,&quot;messageId&quot;:&quot;ajs-015be272-4bf1-4e29-a18d-c1ab5babb0a8&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:00.688Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:54.773Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskSuccess&quot;,&quot;attributes&quot;:{&quot;uuid&quot;:&quot;SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;isInitial&quot;:false,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:2029.1000000005588,&quot;startTime&quot;:27708.200000000186,&quot;duration&quot;:1743,&quot;activeDuration&quot;:1743,&quot;adjustedDuration&quot;:1743,&quot;task&quot;:&quot;extension_point_home_footer&quot;,&quot;taskId&quot;:&quot;f14ebde2-d443-4d8b-98f4-d5654ef56ec4&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskSuccess&quot;,&quot;messageId&quot;:&quot;ajs-17958321-b2ce-49a1-87e0-39b739244bca&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:00.688Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:54.885Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskStart&quot;,&quot;attributes&quot;:{&quot;uuid&quot;:&quot;SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;isInitial&quot;:false,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:2084.5,&quot;startTime&quot;:29506.400000000373,&quot;timeout&quot;:10000,&quot;task&quot;:&quot;extension_point_space_buttons&quot;,&quot;taskId&quot;:&quot;cc4c17c6-9d61-4ea0-9fb8-ac5d86a5fb58&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskStart&quot;,&quot;messageId&quot;:&quot;ajs-c237adfb-1a4b-4ed8-b23e-6a6248638f1c&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:00.688Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:54.887Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;@atlaskit/feature-flag-client&quot;,&quot;actionSubject&quot;:&quot;feature&quot;,&quot;action&quot;:&quot;exposed&quot;,&quot;attributes&quot;:{&quot;flagKey&quot;:&quot;confluence.frontend.focused.inline.comment.performance&quot;,&quot;reason&quot;:&quot;FALLTHROUGH&quot;,&quot;ruleId&quot;:null,&quot;value&quot;:&quot;variation&quot;},&quot;tags&quot;:[&quot;optInExposure&quot;,&quot;measurement&quot;],&quot;highPriority&quot;:true,&quot;eventType&quot;:&quot;track&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;feature exposed&quot;,&quot;messageId&quot;:&quot;ajs-f224bc97-dc69-4dd7-8288-e7814a712f9f&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:00.688Z&quot;}],&quot;sentAt&quot;:&quot;2022-09-26T05:59:00.688Z&quot;,&quot;metadata&quot;:{&quot;eventCount&quot;:15,&quot;resilienceMechanism&quot;:&quot;indexeddb&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/gasv3/api/v1/batch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-493" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;operationName&quot;:&quot;PageTreeQuery&quot;,&quot;variables&quot;:{&quot;paginationLimit&quot;:500,&quot;spaceKey&quot;:&quot;PN&quot;,&quot;isSuperAdmin&quot;:false,&quot;statuses&quot;:[&quot;CURRENT&quot;,&quot;DRAFT&quot;],&quot;ptStatuses&quot;:[&quot;CURRENT&quot;,&quot;DRAFT&quot;],&quot;contentId&quot;:&quot;33329&quot;},&quot;query&quot;:&quot;query PageTreeQuery($spaceKey: String!, $statuses: [GraphQLPageStatus], $ptStatuses: [PTGraphQLPageStatus], $contentId: ID!, $paginationLimit: Int, $nearestAncestorCursor: String, $naPreviousSiblingsCursor: String, $naFollowingSiblingsCursor: String, $previousSiblingsCursor: String, $followingSiblingsCursor: String, $childrenCursor: String, $isSuperAdmin: Boolean!) {\n  currentPage: page(id: $contentId, spaceKey: $spaceKey, pageTree: $paginationLimit, status: $ptStatuses, enablePaging: true) {\n    ...PageInfoFragment\n    nearestAncestors(after: $nearestAncestorCursor) {\n      count\n      pageInfo {\n        hasNextPage\n        endCursor\n        __typename\n      }\n      nodes {\n        ...PageInfoFragment\n        previousSiblings(after: $naPreviousSiblingsCursor) {\n          ...PageListFragment\n          __typename\n        }\n        followingSiblings(after: $naFollowingSiblingsCursor) {\n          ...PageListFragment\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    previousSiblings(after: $previousSiblingsCursor) {\n      ...PageListFragment\n      __typename\n    }\n    followingSiblings(after: $followingSiblingsCursor) {\n      ...PageListFragment\n      __typename\n    }\n    children(after: $childrenCursor) {\n      ...PageListFragment\n      __typename\n    }\n    __typename\n  }\n  rootLevelPages: pages(spaceKey: $spaceKey, status: $statuses) {\n    nodes {\n      ...PageInfoFragment\n      __typename\n    }\n    __typename\n  }\n  space(key: $spaceKey) {\n    id\n    homepage {\n      id\n      __typename\n    }\n    operations {\n      operation\n      targetType\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageInfoFragment on Page {\n  id\n  title\n  status\n  hasChildren\n  blank\n  hasRestrictions @include(if: $isSuperAdmin)\n  hasInheritedRestrictions @include(if: $isSuperAdmin)\n  links {\n    webui\n    __typename\n  }\n  properties(keys: [\&quot;emoji-title-published\&quot;, \&quot;emoji-title-draft\&quot;]) {\n    nodes {\n      id\n      key\n      value\n      version {\n        number\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment PageListFragment on PaginatedPageList {\n  count\n  nodes {\n    ...PageInfoFragment\n    __typename\n  }\n  pageInfo {\n    hasNextPage\n    endCursor\n    __typename\n  }\n  __typename\n}\n&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cgraphql?q=PageTreeQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/wiki/spaces/PN/overview</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-APOLLO-OPERATION-NAME" elementType="Header">
                  <stringProp name="Header.name">X-APOLLO-OPERATION-NAME</stringProp>
                  <stringProp name="Header.value">PageTreeQuery</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-508" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;batch&quot;:[{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:54.888Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskStart&quot;,&quot;attributes&quot;:{&quot;mode&quot;:&quot;renderer&quot;,&quot;uuid&quot;:&quot;SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;isInitial&quot;:false,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:2113.300000000745,&quot;startTime&quot;:29535.300000000745,&quot;timeout&quot;:60000,&quot;task&quot;:&quot;view-all-macro&quot;,&quot;taskId&quot;:&quot;33329&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskStart&quot;,&quot;messageId&quot;:&quot;ajs-c99e9b9b-67d8-4f0a-ae79-0ced149220b9&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:00.953Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:54.889Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskStart&quot;,&quot;attributes&quot;:{&quot;uuid&quot;:&quot;SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;isInitial&quot;:false,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:2115.800000000745,&quot;startTime&quot;:29537.800000000745,&quot;task&quot;:&quot;header-items/group-load&quot;,&quot;taskId&quot;:&quot;6592f3b5-ab79-4b3d-8134-5741e4a64210&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskStart&quot;,&quot;messageId&quot;:&quot;ajs-e953101b-588b-44dd-9ff3-0472dc73478f&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:00.953Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:54.889Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskSuccess&quot;,&quot;attributes&quot;:{&quot;uuid&quot;:&quot;SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;isInitial&quot;:false,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:2115.5,&quot;startTime&quot;:29506.400000000373,&quot;duration&quot;:31,&quot;activeDuration&quot;:31,&quot;adjustedDuration&quot;:31,&quot;task&quot;:&quot;extension_point_space_buttons&quot;,&quot;taskId&quot;:&quot;cc4c17c6-9d61-4ea0-9fb8-ac5d86a5fb58&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskSuccess&quot;,&quot;messageId&quot;:&quot;ajs-6bd37bd7-112a-47ba-965c-3375b8424552&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:00.953Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:54.937Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;performance&quot;,&quot;actionSubject&quot;:&quot;performance&quot;,&quot;action&quot;:&quot;measured&quot;,&quot;attributes&quot;:{&quot;task&quot;:&quot;confluence.fe.page-segment-load.edit-button&quot;,&quot;properties&quot;:{&quot;event:key&quot;:&quot;confluence.fe.page-segment-load.edit-button&quot;,&quot;event:type&quot;:&quot;page-segment-load&quot;,&quot;event:product&quot;:&quot;confluence&quot;,&quot;event:route&quot;:&quot;SPACE_OVERVIEW&quot;,&quot;event:id&quot;:&quot;edit-button&quot;,&quot;event:localHour&quot;:11,&quot;event:localDayOfWeek&quot;:1,&quot;event:region&quot;:&quot;confluence-prod-ap-8-3.prod.atl-paas.net&quot;,&quot;app:framework:name&quot;:&quot;react&quot;,&quot;app:framework:version&quot;:&quot;16.14.0&quot;,&quot;app:web:version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;bm:version&quot;:3,&quot;telemetry:browser:name&quot;:&quot;Chrome&quot;,&quot;telemetry:browser:version&quot;:&quot;105.0.0.0&quot;,&quot;telemetry:cpus&quot;:3,&quot;telemetry:memory&quot;:8,&quot;telemetry:network:effectiveType&quot;:&quot;4g&quot;,&quot;telemetry:network:rtt&quot;:200,&quot;telemetry:network:downlink&quot;:4.35,&quot;custom:pageLoadInfo&quot;:{&quot;uuid&quot;:&quot;SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;isInitial&quot;:false,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:2115.100000000559},&quot;featureFlags&quot;:{&quot;confluence.frontend.pollinator.synthetic.check.tenants&quot;:false,&quot;confluence.frontend.delay.comment.button&quot;:true,&quot;confluence.frontend.delay.page.comments.render&quot;:&quot;delay-render&quot;,&quot;confluence.frontend.enable.external.collab&quot;:false,&quot;confluence.frontend.eop.recommendations.rollout&quot;:&quot;on&quot;,&quot;confluence.frontend.focused.inline.comment.performance&quot;:&quot;variation&quot;,&quot;confluence.frontend.live-search&quot;:true,&quot;confluence.frontend.presentation.mode&quot;:true,&quot;confluence.ssr.fabric.macros&quot;:null,&quot;confluence.ssr.page-tree&quot;:null,&quot;confluence.ssr.page-tree.best.effort&quot;:null,&quot;confluence.ssr.read-time&quot;:null,&quot;confluence.ssr.page-statuses&quot;:null,&quot;confluence.ssr.home.feed.best-effort&quot;:null,&quot;confluence.ssr.shortcuts&quot;:null,&quot;confluence.ssr.shortcuts.link-filter&quot;:null,&quot;confluence.ssr.smartlinks&quot;:null,&quot;confluence.ssr.page-share-and-perms-button&quot;:null,&quot;confluence.frontend.page-share-and-permissions&quot;:false,&quot;confluence.frontend.economy-growth.discover-apps-in-sidebar.experiment&quot;:false,&quot;confluence.frontend.top.level.body.content.query&quot;:false,&quot;confluence.ssr.integrating.public.links.to.nsd&quot;:null,&quot;confluence.frontend.integrating.public.links.to.nsd&quot;:false,&quot;confluence.frontend.fabric.editor.macro.adf.frontend.render&quot;:false,&quot;confluence.frontend.bandana.client.short.socket.timeout&quot;:&quot;50.0&quot;},&quot;hostname&quot;:&quot;thinktimetechnology.atlassian.net&quot;,&quot;confluence:cloudId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;confluence:environment&quot;:&quot;PRODUCTION&quot;,&quot;confluence:shard&quot;:&quot;confluence-prod-ap-8-3.prod.atl-paas.net&quot;,&quot;confluence:ssr&quot;:&quot;false&quot;,&quot;confluence:uniqueIdentifier&quot;:&quot;undefined&quot;,&quot;confluence:initial&quot;:false,&quot;confluence:criticalAssets&quot;:{&quot;cachedRate&quot;:0.5952380952380952,&quot;count&quot;:168,&quot;size&quot;:6214831,&quot;cachedSize&quot;:12473,&quot;nonCachedSize&quot;:6202358,&quot;sizeBasedCachedRate&quot;:0.002006973319145766},&quot;metric:fmp&quot;:2115,&quot;metric:tti&quot;:2115,&quot;metric:fmp:histogramBuckets&quot;:&quot;500_1000_1500_2000_2500_3000&quot;,&quot;metric:tti:histogramBuckets&quot;:&quot;1000_1500_2000_2500_3000_4000&quot;,&quot;pageVisible:state&quot;:&quot;visible&quot;,&quot;pageVisible:value&quot;:true,&quot;event:initial&quot;:false,&quot;timings:bundleEval&quot;:{&quot;SpaceOverviewRouteComponent(0)&quot;:{&quot;startTime&quot;:181,&quot;duration&quot;:1151},&quot;SpaceOverviewLoader(0)&quot;:{&quot;startTime&quot;:1340,&quot;duration&quot;:718},&quot;WatchDialogWrapperLoader(0)&quot;:{&quot;startTime&quot;:2096,&quot;duration&quot;:68}}}},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;performance measured&quot;,&quot;messageId&quot;:&quot;ajs-af6c8692-bf28-4647-acab-0eb2d71abe0f&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:00.953Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:54.938Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;performance&quot;,&quot;actionSubject&quot;:&quot;performance&quot;,&quot;action&quot;:&quot;measured&quot;,&quot;attributes&quot;:{&quot;task&quot;:&quot;confluence.fe.page-segment-load.inline-comments&quot;,&quot;properties&quot;:{&quot;event:key&quot;:&quot;confluence.fe.page-segment-load.inline-comments&quot;,&quot;event:type&quot;:&quot;page-segment-load&quot;,&quot;event:product&quot;:&quot;confluence&quot;,&quot;event:route&quot;:&quot;SPACE_OVERVIEW&quot;,&quot;event:id&quot;:&quot;inline-comments&quot;,&quot;event:localHour&quot;:11,&quot;event:localDayOfWeek&quot;:1,&quot;event:region&quot;:&quot;confluence-prod-ap-8-3.prod.atl-paas.net&quot;,&quot;app:framework:name&quot;:&quot;react&quot;,&quot;app:framework:version&quot;:&quot;16.14.0&quot;,&quot;app:web:version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;bm:version&quot;:3,&quot;telemetry:browser:name&quot;:&quot;Chrome&quot;,&quot;telemetry:browser:version&quot;:&quot;105.0.0.0&quot;,&quot;telemetry:cpus&quot;:3,&quot;telemetry:memory&quot;:8,&quot;telemetry:network:effectiveType&quot;:&quot;4g&quot;,&quot;telemetry:network:rtt&quot;:200,&quot;telemetry:network:downlink&quot;:4.35,&quot;custom:numberOfInlineComments&quot;:0,&quot;custom:pageLoadInfo&quot;:{&quot;uuid&quot;:&quot;SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;isInitial&quot;:false,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:2116.100000000559},&quot;featureFlags&quot;:{&quot;confluence.frontend.pollinator.synthetic.check.tenants&quot;:false,&quot;confluence.frontend.delay.comment.button&quot;:true,&quot;confluence.frontend.delay.page.comments.render&quot;:&quot;delay-render&quot;,&quot;confluence.frontend.enable.external.collab&quot;:false,&quot;confluence.frontend.eop.recommendations.rollout&quot;:&quot;on&quot;,&quot;confluence.frontend.focused.inline.comment.performance&quot;:&quot;variation&quot;,&quot;confluence.frontend.live-search&quot;:true,&quot;confluence.frontend.presentation.mode&quot;:true,&quot;confluence.ssr.fabric.macros&quot;:null,&quot;confluence.ssr.page-tree&quot;:null,&quot;confluence.ssr.page-tree.best.effort&quot;:null,&quot;confluence.ssr.read-time&quot;:null,&quot;confluence.ssr.page-statuses&quot;:null,&quot;confluence.ssr.home.feed.best-effort&quot;:null,&quot;confluence.ssr.shortcuts&quot;:null,&quot;confluence.ssr.shortcuts.link-filter&quot;:null,&quot;confluence.ssr.smartlinks&quot;:null,&quot;confluence.ssr.page-share-and-perms-button&quot;:null,&quot;confluence.frontend.page-share-and-permissions&quot;:false,&quot;confluence.frontend.economy-growth.discover-apps-in-sidebar.experiment&quot;:false,&quot;confluence.frontend.top.level.body.content.query&quot;:false,&quot;confluence.ssr.integrating.public.links.to.nsd&quot;:null,&quot;confluence.frontend.integrating.public.links.to.nsd&quot;:false,&quot;confluence.frontend.fabric.editor.macro.adf.frontend.render&quot;:false,&quot;confluence.frontend.bandana.client.short.socket.timeout&quot;:&quot;50.0&quot;},&quot;hostname&quot;:&quot;thinktimetechnology.atlassian.net&quot;,&quot;confluence:cloudId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;confluence:environment&quot;:&quot;PRODUCTION&quot;,&quot;confluence:shard&quot;:&quot;confluence-prod-ap-8-3.prod.atl-paas.net&quot;,&quot;confluence:ssr&quot;:&quot;false&quot;,&quot;confluence:uniqueIdentifier&quot;:&quot;undefined&quot;,&quot;confluence:initial&quot;:false,&quot;confluence:criticalAssets&quot;:{&quot;cachedRate&quot;:0.5952380952380952,&quot;count&quot;:168,&quot;size&quot;:6214831,&quot;cachedSize&quot;:12473,&quot;nonCachedSize&quot;:6202358,&quot;sizeBasedCachedRate&quot;:0.002006973319145766},&quot;timings:app&quot;:{&quot;fmp&quot;:{&quot;startTime&quot;:0,&quot;duration&quot;:2121},&quot;highlightsRendered&quot;:{&quot;startTime&quot;:0,&quot;duration&quot;:2123}},&quot;metric:fmp&quot;:2121,&quot;metric:tti&quot;:2116,&quot;metric:fmp:histogramBuckets&quot;:&quot;500_1000_1500_2000_2500_3000&quot;,&quot;metric:tti:histogramBuckets&quot;:&quot;1000_1500_2000_2500_3000_4000&quot;,&quot;pageVisible:state&quot;:&quot;visible&quot;,&quot;pageVisible:value&quot;:true,&quot;event:initial&quot;:false,&quot;timings:bundleEval&quot;:{&quot;SpaceOverviewRouteComponent(0)&quot;:{&quot;startTime&quot;:181,&quot;duration&quot;:1151},&quot;SpaceOverviewLoader(0)&quot;:{&quot;startTime&quot;:1340,&quot;duration&quot;:718},&quot;WatchDialogWrapperLoader(0)&quot;:{&quot;startTime&quot;:2096,&quot;duration&quot;:68}}}},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;performance measured&quot;,&quot;messageId&quot;:&quot;ajs-83b35782-fbf8-4fb8-8086-f522ec4ff101&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:00.953Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:54.939Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;performance&quot;,&quot;actionSubject&quot;:&quot;performance&quot;,&quot;action&quot;:&quot;measured&quot;,&quot;attributes&quot;:{&quot;task&quot;:&quot;confluence.fe.page-segment-load.watch-button&quot;,&quot;properties&quot;:{&quot;event:key&quot;:&quot;confluence.fe.page-segment-load.watch-button&quot;,&quot;event:type&quot;:&quot;page-segment-load&quot;,&quot;event:product&quot;:&quot;confluence&quot;,&quot;event:route&quot;:&quot;SPACE_OVERVIEW&quot;,&quot;event:id&quot;:&quot;watch-button&quot;,&quot;event:localHour&quot;:11,&quot;event:localDayOfWeek&quot;:1,&quot;event:region&quot;:&quot;confluence-prod-ap-8-3.prod.atl-paas.net&quot;,&quot;app:framework:name&quot;:&quot;react&quot;,&quot;app:framework:version&quot;:&quot;16.14.0&quot;,&quot;app:web:version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;bm:version&quot;:3,&quot;telemetry:browser:name&quot;:&quot;Chrome&quot;,&quot;telemetry:browser:version&quot;:&quot;105.0.0.0&quot;,&quot;telemetry:cpus&quot;:3,&quot;telemetry:memory&quot;:8,&quot;telemetry:network:effectiveType&quot;:&quot;4g&quot;,&quot;telemetry:network:rtt&quot;:200,&quot;telemetry:network:downlink&quot;:4.35,&quot;custom:pageLoadInfo&quot;:{&quot;uuid&quot;:&quot;SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;isInitial&quot;:false,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:2169.100000000559},&quot;featureFlags&quot;:{&quot;confluence.frontend.pollinator.synthetic.check.tenants&quot;:false,&quot;confluence.frontend.delay.comment.button&quot;:true,&quot;confluence.frontend.delay.page.comments.render&quot;:&quot;delay-render&quot;,&quot;confluence.frontend.enable.external.collab&quot;:false,&quot;confluence.frontend.eop.recommendations.rollout&quot;:&quot;on&quot;,&quot;confluence.frontend.focused.inline.comment.performance&quot;:&quot;variation&quot;,&quot;confluence.frontend.live-search&quot;:true,&quot;confluence.frontend.presentation.mode&quot;:true,&quot;confluence.ssr.fabric.macros&quot;:null,&quot;confluence.ssr.page-tree&quot;:null,&quot;confluence.ssr.page-tree.best.effort&quot;:null,&quot;confluence.ssr.read-time&quot;:null,&quot;confluence.ssr.page-statuses&quot;:null,&quot;confluence.ssr.home.feed.best-effort&quot;:null,&quot;confluence.ssr.shortcuts&quot;:null,&quot;confluence.ssr.shortcuts.link-filter&quot;:null,&quot;confluence.ssr.smartlinks&quot;:null,&quot;confluence.ssr.page-share-and-perms-button&quot;:null,&quot;confluence.frontend.page-share-and-permissions&quot;:false,&quot;confluence.frontend.economy-growth.discover-apps-in-sidebar.experiment&quot;:false,&quot;confluence.frontend.top.level.body.content.query&quot;:false,&quot;confluence.ssr.integrating.public.links.to.nsd&quot;:null,&quot;confluence.frontend.integrating.public.links.to.nsd&quot;:false,&quot;confluence.frontend.fabric.editor.macro.adf.frontend.render&quot;:false,&quot;confluence.frontend.bandana.client.short.socket.timeout&quot;:&quot;50.0&quot;},&quot;hostname&quot;:&quot;thinktimetechnology.atlassian.net&quot;,&quot;confluence:cloudId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;confluence:environment&quot;:&quot;PRODUCTION&quot;,&quot;confluence:shard&quot;:&quot;confluence-prod-ap-8-3.prod.atl-paas.net&quot;,&quot;confluence:ssr&quot;:&quot;false&quot;,&quot;confluence:uniqueIdentifier&quot;:&quot;undefined&quot;,&quot;confluence:initial&quot;:false,&quot;confluence:criticalAssets&quot;:{&quot;cachedRate&quot;:0.5952380952380952,&quot;count&quot;:168,&quot;size&quot;:6214831,&quot;cachedSize&quot;:12473,&quot;nonCachedSize&quot;:6202358,&quot;sizeBasedCachedRate&quot;:0.002006973319145766},&quot;metric:fmp&quot;:2169,&quot;metric:tti&quot;:2169,&quot;metric:fmp:histogramBuckets&quot;:&quot;500_1000_1500_2000_2500_3000&quot;,&quot;metric:tti:histogramBuckets&quot;:&quot;1000_1500_2000_2500_3000_4000&quot;,&quot;pageVisible:state&quot;:&quot;visible&quot;,&quot;pageVisible:value&quot;:true,&quot;event:initial&quot;:false,&quot;timings:bundleEval&quot;:{&quot;SpaceOverviewRouteComponent(0)&quot;:{&quot;startTime&quot;:181,&quot;duration&quot;:1151},&quot;SpaceOverviewLoader(0)&quot;:{&quot;startTime&quot;:1340,&quot;duration&quot;:718},&quot;WatchDialogWrapperLoader(0)&quot;:{&quot;startTime&quot;:2096,&quot;duration&quot;:68}}}},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;performance measured&quot;,&quot;messageId&quot;:&quot;ajs-2e040677-cd82-45c5-824e-fef2c605c0f5&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:00.953Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:55.710Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;@atlaskit/feature-flag-client&quot;,&quot;actionSubject&quot;:&quot;feature&quot;,&quot;action&quot;:&quot;exposed&quot;,&quot;attributes&quot;:{&quot;flagKey&quot;:&quot;confluence.frontend.inline.comments.nudge&quot;,&quot;reason&quot;:&quot;FALLTHROUGH&quot;,&quot;ruleId&quot;:null,&quot;value&quot;:&quot;variation&quot;},&quot;tags&quot;:[&quot;optInExposure&quot;,&quot;measurement&quot;],&quot;highPriority&quot;:true,&quot;eventType&quot;:&quot;track&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;feature exposed&quot;,&quot;messageId&quot;:&quot;ajs-dbcc4ee0-8190-4d2f-958e-2cedc528630e&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:00.953Z&quot;}],&quot;sentAt&quot;:&quot;2022-09-26T05:59:00.953Z&quot;,&quot;metadata&quot;:{&quot;eventCount&quot;:1,&quot;resilienceMechanism&quot;:&quot;indexeddb&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/gasv3/api/v1/batch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-515" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/subscriptions/subscriptions</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-WebSocket-Protocol" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Protocol</stringProp>
                  <stringProp name="Header.value">graphql-ws</stringProp>
                </elementProp>
                <elementProp name="Upgrade" elementType="Header">
                  <stringProp name="Header.name">Upgrade</stringProp>
                  <stringProp name="Header.value">websocket</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Extensions" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Extensions</stringProp>
                  <stringProp name="Header.value">permessage-deflate; client_max_window_bits</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Version" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Version</stringProp>
                  <stringProp name="Header.value">13</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Key" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Key</stringProp>
                  <stringProp name="Header.value">0hcTEv0nQxMFiFyjzADs2Q==</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-516" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/subscriptions/subscriptions</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-WebSocket-Protocol" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Protocol</stringProp>
                  <stringProp name="Header.value">graphql-ws</stringProp>
                </elementProp>
                <elementProp name="Upgrade" elementType="Header">
                  <stringProp name="Header.name">Upgrade</stringProp>
                  <stringProp name="Header.value">websocket</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Extensions" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Extensions</stringProp>
                  <stringProp name="Header.value">permessage-deflate; client_max_window_bits</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Version" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Version</stringProp>
                  <stringProp name="Header.value">13</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Key" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Key</stringProp>
                  <stringProp name="Header.value">BbHOEWhvHWexon5znLQCZQ==</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-519" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;operationName&quot;:&quot;WebPanelLocationQuery&quot;,&quot;variables&quot;:{&quot;contentId&quot;:&quot;33329&quot;,&quot;location&quot;:&quot;atl.page.content.footer.actions&quot;},&quot;query&quot;:&quot;query WebPanelLocationQuery($location: String, $contentId: ID, $spaceKey: String) {\n  webPanels(location: $location, contentId: $contentId, key: $spaceKey) {\n    moduleKey\n    completeKey\n    html\n    location\n    label\n    weight\n    name\n    __typename\n  }\n}\n&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cgraphql?q=WebPanelLocationQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/wiki/spaces/PN/overview</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-APOLLO-OPERATION-NAME" elementType="Header">
                  <stringProp name="Header.name">X-APOLLO-OPERATION-NAME</stringProp>
                  <stringProp name="Header.value">WebPanelLocationQuery</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-495" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;type&quot;:&quot;metric&quot;,&quot;meta&quot;:{&quot;subproduct&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;0.1&quot;,&quot;env&quot;:&quot;prod&quot;,&quot;os&quot;:&quot;windows&quot;,&quot;platform&quot;:&quot;desktop&quot;,&quot;browser&quot;:&quot;chrome&quot;},&quot;metalId&quot;:&quot;74fe5415-a93b-4197-bb9b-294dc9439cd7&quot;,&quot;data&quot;:[{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;fe.perf.component.time_to_ready.slo&quot;,&quot;tags&quot;:[&quot;component:useExtensionList&quot;,&quot;page:confluence:contentAction&quot;,&quot;success:true&quot;],&quot;value&quot;:1,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.component.time_to_ready&quot;,&quot;tags&quot;:[&quot;component:useExtensionList&quot;,&quot;page:confluence:contentAction&quot;],&quot;value&quot;:356.6000000005588,&quot;sampleRate&quot;:1}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/metal/ingest</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-523" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;batch&quot;:[{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:55.711Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;@atlaskit/feature-flag-client&quot;,&quot;actionSubject&quot;:&quot;feature&quot;,&quot;action&quot;:&quot;exposed&quot;,&quot;attributes&quot;:{&quot;flagKey&quot;:&quot;confluence.frontend.feed.profile-card.follow&quot;,&quot;reason&quot;:&quot;FALLTHROUGH&quot;,&quot;ruleId&quot;:null,&quot;value&quot;:true},&quot;tags&quot;:[&quot;optInExposure&quot;,&quot;measurement&quot;],&quot;highPriority&quot;:true,&quot;eventType&quot;:&quot;track&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;feature exposed&quot;,&quot;messageId&quot;:&quot;ajs-92f4daa0-fbe4-4b9f-a20a-cc344fc4e8e2&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:01.406Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:55.724Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;@atlaskit/feature-flag-client&quot;,&quot;actionSubject&quot;:&quot;feature&quot;,&quot;action&quot;:&quot;exposed&quot;,&quot;attributes&quot;:{&quot;flagKey&quot;:&quot;confluence.frontend.fabric.editor.embed-preview-size&quot;,&quot;reason&quot;:&quot;FALLTHROUGH&quot;,&quot;ruleId&quot;:null,&quot;value&quot;:&quot;control&quot;},&quot;tags&quot;:[&quot;optInExposure&quot;,&quot;measurement&quot;],&quot;highPriority&quot;:true,&quot;eventType&quot;:&quot;track&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;feature exposed&quot;,&quot;messageId&quot;:&quot;ajs-b95f4d22-e900-4f39-a419-8d3e9cd8f568&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:01.406Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:55.724Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;@atlaskit/feature-flag-client&quot;,&quot;actionSubject&quot;:&quot;feature&quot;,&quot;action&quot;:&quot;exposed&quot;,&quot;attributes&quot;:{&quot;flagKey&quot;:&quot;confluence.frontend.fabric.editor.show-hover-preview&quot;,&quot;reason&quot;:&quot;FALLTHROUGH&quot;,&quot;ruleId&quot;:null,&quot;value&quot;:true},&quot;tags&quot;:[&quot;optInExposure&quot;,&quot;measurement&quot;],&quot;highPriority&quot;:true,&quot;eventType&quot;:&quot;track&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;feature exposed&quot;,&quot;messageId&quot;:&quot;ajs-16b7c383-75df-4fba-8802-806dad04c73e&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:01.406Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:55.740Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;unknown&quot;,&quot;actionSubject&quot;:&quot;renderer&quot;,&quot;action&quot;:&quot;started&quot;,&quot;attributes&quot;:{&quot;appearance&quot;:&quot;fixedWidth&quot;,&quot;packageName&quot;:&quot;@atlaskit/renderer&quot;,&quot;packageVersion&quot;:&quot;101.0.1&quot;,&quot;componentName&quot;:&quot;renderer&quot;,&quot;editorSessionId&quot;:&quot;a53d85a4-358d-494c-a5b0-64c5386a26c2&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;objectId&quot;:&quot;33329&quot;,&quot;instance&quot;:&quot;Production&quot;},&quot;tags&quot;:[&quot;editor&quot;,&quot;fabricEditor&quot;],&quot;eventType&quot;:&quot;ui&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;renderer started&quot;,&quot;messageId&quot;:&quot;ajs-ace4ab87-d038-4c6b-966d-0fa54709bb82&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:01.406Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:55.789Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;unknown&quot;,&quot;actionSubject&quot;:&quot;renderer&quot;,&quot;action&quot;:&quot;rendered&quot;,&quot;attributes&quot;:{&quot;appearance&quot;:&quot;fixedWidth&quot;,&quot;packageName&quot;:&quot;@atlaskit/renderer&quot;,&quot;packageVersion&quot;:&quot;101.0.1&quot;,&quot;componentName&quot;:&quot;renderer&quot;,&quot;editorSessionId&quot;:&quot;6737cc74-eab9-4a1f-868b-c64993a51266&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;duration&quot;:720.5,&quot;ttfb&quot;:1473,&quot;nodes&quot;:{&quot;doc&quot;:1,&quot;panel&quot;:1,&quot;heading&quot;:5,&quot;text&quot;:24,&quot;paragraph&quot;:17,&quot;bulletList&quot;:1,&quot;listItem&quot;:5,&quot;emoji&quot;:1,&quot;inlineCard&quot;:3,&quot;rule&quot;:1,&quot;extension&quot;:2,&quot;hardBreak&quot;:2,&quot;inlineExtension&quot;:1,&quot;status&quot;:2},&quot;severity&quot;:&quot;normal&quot;,&quot;objectId&quot;:&quot;33329&quot;,&quot;instance&quot;:&quot;Production&quot;,&quot;pageLoadInfo&quot;:{&quot;uuid&quot;:&quot;SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;isInitial&quot;:false,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:3043.5}},&quot;tags&quot;:[&quot;editor&quot;,&quot;fabricEditor&quot;],&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;renderer rendered&quot;,&quot;messageId&quot;:&quot;ajs-d6c74374-dfe0-4370-a5e6-b7659c49e4cf&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:01.406Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:55.789Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskSuccess&quot;,&quot;attributes&quot;:{&quot;contentType&quot;:&quot;space&quot;,&quot;isFromExternal&quot;:false,&quot;fabric&quot;:true,&quot;uuid&quot;:&quot;SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;isInitial&quot;:false,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:3044.100000000559,&quot;startTime&quot;:27422.200000000186,&quot;duration&quot;:3044,&quot;activeDuration&quot;:3044,&quot;adjustedDuration&quot;:3044,&quot;task&quot;:&quot;view-content&quot;,&quot;taskId&quot;:&quot;PN&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskSuccess&quot;,&quot;messageId&quot;:&quot;ajs-dff4b3f8-811c-41dd-8d72-f781c97a66f1&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:01.406Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:55.796Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskSuccess&quot;,&quot;attributes&quot;:{&quot;contentType&quot;:&quot;space&quot;,&quot;isFromExternal&quot;:false,&quot;uuid&quot;:&quot;SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;isInitial&quot;:false,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:3044.300000000745,&quot;fabric&quot;:true,&quot;startTime&quot;:27422.200000000186,&quot;duration&quot;:3044,&quot;activeDuration&quot;:3044,&quot;adjustedDuration&quot;:3044,&quot;task&quot;:&quot;space-overview&quot;,&quot;taskId&quot;:&quot;PN&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskSuccess&quot;,&quot;messageId&quot;:&quot;ajs-a7f564c0-a06c-4d58-8dd2-95010ed316bf&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:01.406Z&quot;}],&quot;sentAt&quot;:&quot;2022-09-26T05:59:01.406Z&quot;,&quot;metadata&quot;:{&quot;eventCount&quot;:3,&quot;resilienceMechanism&quot;:&quot;indexeddb&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/gasv3/api/v1/batch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-524" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/subscriptions/subscriptions</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-WebSocket-Protocol" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Protocol</stringProp>
                  <stringProp name="Header.value">graphql-ws</stringProp>
                </elementProp>
                <elementProp name="Upgrade" elementType="Header">
                  <stringProp name="Header.name">Upgrade</stringProp>
                  <stringProp name="Header.value">websocket</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Extensions" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Extensions</stringProp>
                  <stringProp name="Header.value">permessage-deflate; client_max_window_bits</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Version" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Version</stringProp>
                  <stringProp name="Header.value">13</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Key" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Key</stringProp>
                  <stringProp name="Header.value">v313odlCXlnNvmSrDYfBaA==</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-520" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;type&quot;:&quot;metric&quot;,&quot;meta&quot;:{&quot;synthetic&quot;:&quot;false&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;env&quot;:&quot;prod&quot;,&quot;os&quot;:&quot;windows&quot;,&quot;platform&quot;:&quot;desktop&quot;,&quot;browser&quot;:&quot;chrome&quot;},&quot;metalId&quot;:&quot;88dcca98-e854-4063-954c-eabe3aeb25d2&quot;,&quot;data&quot;:[{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.first_meaningful_paint&quot;,&quot;tags&quot;:[&quot;active_tab:true&quot;,&quot;initial_load:false&quot;,&quot;page:segment-page-tree&quot;,&quot;gsd_histogram:500_1000_1500_2000_2500_3000&quot;],&quot;value&quot;:8383,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.time_to_interactive&quot;,&quot;tags&quot;:[&quot;active_tab:true&quot;,&quot;initial_load:false&quot;,&quot;page:segment-page-tree&quot;,&quot;gsd_histogram:1000_1500_2000_2500_3000_4000&quot;],&quot;value&quot;:8383,&quot;sampleRate&quot;:1}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/metal/ingest</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-525" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;batch&quot;:[{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:55.813Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;performance&quot;,&quot;actionSubject&quot;:&quot;performance&quot;,&quot;action&quot;:&quot;measured&quot;,&quot;attributes&quot;:{&quot;task&quot;:&quot;confluence.fe.page-segment-load.content-renderer&quot;,&quot;properties&quot;:{&quot;event:key&quot;:&quot;confluence.fe.page-segment-load.content-renderer&quot;,&quot;event:type&quot;:&quot;page-segment-load&quot;,&quot;event:product&quot;:&quot;confluence&quot;,&quot;event:route&quot;:&quot;SPACE_OVERVIEW&quot;,&quot;event:id&quot;:&quot;content-renderer&quot;,&quot;event:localHour&quot;:11,&quot;event:localDayOfWeek&quot;:1,&quot;event:region&quot;:&quot;confluence-prod-ap-8-3.prod.atl-paas.net&quot;,&quot;app:framework:name&quot;:&quot;react&quot;,&quot;app:framework:version&quot;:&quot;16.14.0&quot;,&quot;app:web:version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;bm:version&quot;:3,&quot;telemetry:browser:name&quot;:&quot;Chrome&quot;,&quot;telemetry:browser:version&quot;:&quot;105.0.0.0&quot;,&quot;telemetry:cpus&quot;:3,&quot;telemetry:memory&quot;:8,&quot;telemetry:network:effectiveType&quot;:&quot;4g&quot;,&quot;telemetry:network:rtt&quot;:200,&quot;telemetry:network:downlink&quot;:4.35,&quot;custom:appearance&quot;:&quot;full-page&quot;,&quot;custom:contentId&quot;:&quot;33329&quot;,&quot;custom:fallback&quot;:false,&quot;custom:fabric&quot;:true,&quot;custom:isLite&quot;:false,&quot;custom:loadedFromCache&quot;:false,&quot;custom:pageLoadInfo&quot;:{&quot;uuid&quot;:&quot;SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;isInitial&quot;:false,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:3044.4000000003725},&quot;featureFlags&quot;:{&quot;confluence.frontend.pollinator.synthetic.check.tenants&quot;:false,&quot;confluence.frontend.delay.comment.button&quot;:true,&quot;confluence.frontend.delay.page.comments.render&quot;:&quot;delay-render&quot;,&quot;confluence.frontend.enable.external.collab&quot;:false,&quot;confluence.frontend.eop.recommendations.rollout&quot;:&quot;on&quot;,&quot;confluence.frontend.focused.inline.comment.performance&quot;:&quot;variation&quot;,&quot;confluence.frontend.live-search&quot;:true,&quot;confluence.frontend.presentation.mode&quot;:true,&quot;confluence.ssr.fabric.macros&quot;:null,&quot;confluence.ssr.page-tree&quot;:null,&quot;confluence.ssr.page-tree.best.effort&quot;:null,&quot;confluence.ssr.read-time&quot;:null,&quot;confluence.ssr.page-statuses&quot;:null,&quot;confluence.ssr.home.feed.best-effort&quot;:null,&quot;confluence.ssr.shortcuts&quot;:null,&quot;confluence.ssr.shortcuts.link-filter&quot;:null,&quot;confluence.ssr.smartlinks&quot;:null,&quot;confluence.ssr.page-share-and-perms-button&quot;:null,&quot;confluence.frontend.page-share-and-permissions&quot;:false,&quot;confluence.frontend.economy-growth.discover-apps-in-sidebar.experiment&quot;:false,&quot;confluence.frontend.top.level.body.content.query&quot;:false,&quot;confluence.ssr.integrating.public.links.to.nsd&quot;:null,&quot;confluence.frontend.integrating.public.links.to.nsd&quot;:false,&quot;confluence.frontend.fabric.editor.macro.adf.frontend.render&quot;:false,&quot;confluence.frontend.bandana.client.short.socket.timeout&quot;:&quot;50.0&quot;},&quot;hostname&quot;:&quot;thinktimetechnology.atlassian.net&quot;,&quot;confluence:cloudId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;confluence:environment&quot;:&quot;PRODUCTION&quot;,&quot;confluence:shard&quot;:&quot;confluence-prod-ap-8-3.prod.atl-paas.net&quot;,&quot;confluence:ssr&quot;:&quot;false&quot;,&quot;confluence:uniqueIdentifier&quot;:&quot;undefined&quot;,&quot;confluence:initial&quot;:false,&quot;confluence:criticalAssets&quot;:{&quot;cachedRate&quot;:0.5952380952380952,&quot;count&quot;:168,&quot;size&quot;:6214831,&quot;cachedSize&quot;:12473,&quot;nonCachedSize&quot;:6202358,&quot;sizeBasedCachedRate&quot;:0.002006973319145766},&quot;metric:fmp&quot;:3044,&quot;metric:tti&quot;:3044,&quot;metric:fmp:histogramBuckets&quot;:&quot;500_1000_1500_2000_2500_3000&quot;,&quot;metric:tti:histogramBuckets&quot;:&quot;1000_1500_2000_2500_3000_4000&quot;,&quot;pageVisible:state&quot;:&quot;visible&quot;,&quot;pageVisible:value&quot;:true,&quot;event:initial&quot;:false,&quot;timings:bundleEval&quot;:{&quot;SpaceOverviewRouteComponent(0)&quot;:{&quot;startTime&quot;:181,&quot;duration&quot;:1151},&quot;SpaceOverviewLoader(0)&quot;:{&quot;startTime&quot;:1340,&quot;duration&quot;:718},&quot;WatchDialogWrapperLoader(0)&quot;:{&quot;startTime&quot;:2096,&quot;duration&quot;:68},&quot;HighlightActionsLoader(0)&quot;:{&quot;startTime&quot;:2108,&quot;duration&quot;:176}}}},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;performance measured&quot;,&quot;messageId&quot;:&quot;ajs-4d81a2dd-a36f-42d4-8c51-74bb7697f39a&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:01.674Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:55.853Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskStart&quot;,&quot;attributes&quot;:{&quot;uuid&quot;:&quot;SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;isInitial&quot;:false,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:3098.300000000745,&quot;startTime&quot;:30520.300000000745,&quot;timeout&quot;:10000,&quot;task&quot;:&quot;extension_point_space_buttons&quot;,&quot;taskId&quot;:&quot;650f5bff-0e3e-4926-b54f-ecf1d426fc8c&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskStart&quot;,&quot;messageId&quot;:&quot;ajs-e565f9fa-bceb-4318-b381-d76cc6b0c5d2&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:01.674Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:55.855Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskSuccess&quot;,&quot;attributes&quot;:{&quot;uuid&quot;:&quot;SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;isInitial&quot;:false,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:3102.2000000001863,&quot;startTime&quot;:30520.300000000745,&quot;duration&quot;:4,&quot;activeDuration&quot;:4,&quot;adjustedDuration&quot;:4,&quot;task&quot;:&quot;extension_point_space_buttons&quot;,&quot;taskId&quot;:&quot;650f5bff-0e3e-4926-b54f-ecf1d426fc8c&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskSuccess&quot;,&quot;messageId&quot;:&quot;ajs-45c3b286-aade-49e8-a5f1-05b682413cb0&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:01.674Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:55.855Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskStart&quot;,&quot;attributes&quot;:{&quot;uuid&quot;:&quot;SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;isInitial&quot;:false,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:3102.4000000003725,&quot;startTime&quot;:30524.400000000373,&quot;task&quot;:&quot;header-items/group-load&quot;,&quot;taskId&quot;:&quot;3a312476-8cff-4aa0-9fc5-8f910b7fe25b&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskStart&quot;,&quot;messageId&quot;:&quot;ajs-421e3719-2e0d-4806-8e8f-a2d668b1c6d8&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:01.674Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:55.855Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskAbort&quot;,&quot;attributes&quot;:{&quot;startTime&quot;:29537.800000000745,&quot;duration&quot;:987,&quot;activeDuration&quot;:987,&quot;adjustedDuration&quot;:987,&quot;reason&quot;:&quot;Aborted because the same experience was started with a new id&quot;,&quot;checkForTimeout&quot;:true,&quot;task&quot;:&quot;header-items/group-load&quot;,&quot;taskId&quot;:&quot;6592f3b5-ab79-4b3d-8134-5741e4a64210&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskAbort&quot;,&quot;messageId&quot;:&quot;ajs-f980e312-87ca-46b9-97f5-257a1a6670fd&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:01.674Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:55.878Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskStart&quot;,&quot;attributes&quot;:{&quot;uuid&quot;:&quot;SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;isInitial&quot;:false,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:3127.9000000003725,&quot;startTime&quot;:30549.900000000373,&quot;task&quot;:&quot;view-page/content-tools&quot;,&quot;taskId&quot;:&quot;33329&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskStart&quot;,&quot;messageId&quot;:&quot;ajs-f60c49c4-8157-4fc2-b298-7e1aa41ffe4f&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:01.674Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:55.890Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;performance&quot;,&quot;actionSubject&quot;:&quot;performance&quot;,&quot;action&quot;:&quot;measured&quot;,&quot;attributes&quot;:{&quot;task&quot;:&quot;confluence.fe.page-segment-load.edit-button&quot;,&quot;properties&quot;:{&quot;event:key&quot;:&quot;confluence.fe.page-segment-load.edit-button&quot;,&quot;event:type&quot;:&quot;page-segment-load&quot;,&quot;event:product&quot;:&quot;confluence&quot;,&quot;event:route&quot;:&quot;SPACE_OVERVIEW&quot;,&quot;event:id&quot;:&quot;edit-button&quot;,&quot;event:localHour&quot;:11,&quot;event:localDayOfWeek&quot;:1,&quot;event:region&quot;:&quot;confluence-prod-ap-8-3.prod.atl-paas.net&quot;,&quot;app:framework:name&quot;:&quot;react&quot;,&quot;app:framework:version&quot;:&quot;16.14.0&quot;,&quot;app:web:version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;bm:version&quot;:3,&quot;telemetry:browser:name&quot;:&quot;Chrome&quot;,&quot;telemetry:browser:version&quot;:&quot;105.0.0.0&quot;,&quot;telemetry:cpus&quot;:3,&quot;telemetry:memory&quot;:8,&quot;telemetry:network:effectiveType&quot;:&quot;4g&quot;,&quot;telemetry:network:rtt&quot;:200,&quot;telemetry:network:downlink&quot;:4.35,&quot;custom:pageLoadInfo&quot;:{&quot;uuid&quot;:&quot;SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;isInitial&quot;:false,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:3101.800000000745},&quot;featureFlags&quot;:{&quot;confluence.frontend.pollinator.synthetic.check.tenants&quot;:false,&quot;confluence.frontend.delay.comment.button&quot;:true,&quot;confluence.frontend.delay.page.comments.render&quot;:&quot;delay-render&quot;,&quot;confluence.frontend.enable.external.collab&quot;:false,&quot;confluence.frontend.eop.recommendations.rollout&quot;:&quot;on&quot;,&quot;confluence.frontend.focused.inline.comment.performance&quot;:&quot;variation&quot;,&quot;confluence.frontend.live-search&quot;:true,&quot;confluence.frontend.presentation.mode&quot;:true,&quot;confluence.ssr.fabric.macros&quot;:null,&quot;confluence.ssr.page-tree&quot;:null,&quot;confluence.ssr.page-tree.best.effort&quot;:null,&quot;confluence.ssr.read-time&quot;:null,&quot;confluence.ssr.page-statuses&quot;:null,&quot;confluence.ssr.home.feed.best-effort&quot;:null,&quot;confluence.ssr.shortcuts&quot;:null,&quot;confluence.ssr.shortcuts.link-filter&quot;:null,&quot;confluence.ssr.smartlinks&quot;:null,&quot;confluence.ssr.page-share-and-perms-button&quot;:null,&quot;confluence.frontend.page-share-and-permissions&quot;:false,&quot;confluence.frontend.economy-growth.discover-apps-in-sidebar.experiment&quot;:false,&quot;confluence.frontend.top.level.body.content.query&quot;:false,&quot;confluence.ssr.integrating.public.links.to.nsd&quot;:null,&quot;confluence.frontend.integrating.public.links.to.nsd&quot;:false,&quot;confluence.frontend.fabric.editor.macro.adf.frontend.render&quot;:false,&quot;confluence.frontend.bandana.client.short.socket.timeout&quot;:&quot;50.0&quot;},&quot;hostname&quot;:&quot;thinktimetechnology.atlassian.net&quot;,&quot;confluence:cloudId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;confluence:environment&quot;:&quot;PRODUCTION&quot;,&quot;confluence:shard&quot;:&quot;confluence-prod-ap-8-3.prod.atl-paas.net&quot;,&quot;confluence:ssr&quot;:&quot;false&quot;,&quot;confluence:uniqueIdentifier&quot;:&quot;undefined&quot;,&quot;confluence:initial&quot;:false,&quot;confluence:criticalAssets&quot;:{&quot;cachedRate&quot;:0.5952380952380952,&quot;count&quot;:168,&quot;size&quot;:6214831,&quot;cachedSize&quot;:12473,&quot;nonCachedSize&quot;:6202358,&quot;sizeBasedCachedRate&quot;:0.002006973319145766},&quot;metric:fmp&quot;:3102,&quot;metric:tti&quot;:3102,&quot;metric:fmp:histogramBuckets&quot;:&quot;500_1000_1500_2000_2500_3000&quot;,&quot;metric:tti:histogramBuckets&quot;:&quot;1000_1500_2000_2500_3000_4000&quot;,&quot;pageVisible:state&quot;:&quot;visible&quot;,&quot;pageVisible:value&quot;:true,&quot;event:initial&quot;:false,&quot;timings:bundleEval&quot;:{&quot;SpaceOverviewRouteComponent(0)&quot;:{&quot;startTime&quot;:181,&quot;duration&quot;:1151},&quot;SpaceOverviewLoader(0)&quot;:{&quot;startTime&quot;:1340,&quot;duration&quot;:718},&quot;WatchDialogWrapperLoader(0)&quot;:{&quot;startTime&quot;:2096,&quot;duration&quot;:68},&quot;HighlightActionsLoader(0)&quot;:{&quot;startTime&quot;:2108,&quot;duration&quot;:176},&quot;StickyBanner(0)&quot;:{&quot;startTime&quot;:2101,&quot;duration&quot;:978},&quot;ContentToolsWrapper(0)&quot;:{&quot;startTime&quot;:2096,&quot;duration&quot;:1030}}}},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;performance measured&quot;,&quot;messageId&quot;:&quot;ajs-5995fe83-7f0a-461a-9b38-82610f1b76df&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:01.674Z&quot;}],&quot;sentAt&quot;:&quot;2022-09-26T05:59:01.674Z&quot;,&quot;metadata&quot;:{&quot;resilienceMechanism&quot;:&quot;indexeddb&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/gasv3/api/v1/batch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-526" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/subscriptions/subscriptions</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-WebSocket-Protocol" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Protocol</stringProp>
                  <stringProp name="Header.value">graphql-ws</stringProp>
                </elementProp>
                <elementProp name="Upgrade" elementType="Header">
                  <stringProp name="Header.name">Upgrade</stringProp>
                  <stringProp name="Header.value">websocket</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Extensions" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Extensions</stringProp>
                  <stringProp name="Header.value">permessage-deflate; client_max_window_bits</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Version" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Version</stringProp>
                  <stringProp name="Header.value">13</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Sec-WebSocket-Key" elementType="Header">
                  <stringProp name="Header.name">Sec-WebSocket-Key</stringProp>
                  <stringProp name="Header.value">/AdmafMuUM9efWxUghudNA==</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-527" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;batch&quot;:[{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:55.891Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;performance&quot;,&quot;actionSubject&quot;:&quot;performance&quot;,&quot;action&quot;:&quot;measured&quot;,&quot;attributes&quot;:{&quot;task&quot;:&quot;confluence.fe.page-segment-load.watch-button&quot;,&quot;properties&quot;:{&quot;event:key&quot;:&quot;confluence.fe.page-segment-load.watch-button&quot;,&quot;event:type&quot;:&quot;page-segment-load&quot;,&quot;event:product&quot;:&quot;confluence&quot;,&quot;event:route&quot;:&quot;SPACE_OVERVIEW&quot;,&quot;event:id&quot;:&quot;watch-button&quot;,&quot;event:localHour&quot;:11,&quot;event:localDayOfWeek&quot;:1,&quot;event:region&quot;:&quot;confluence-prod-ap-8-3.prod.atl-paas.net&quot;,&quot;app:framework:name&quot;:&quot;react&quot;,&quot;app:framework:version&quot;:&quot;16.14.0&quot;,&quot;app:web:version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;bm:version&quot;:3,&quot;telemetry:browser:name&quot;:&quot;Chrome&quot;,&quot;telemetry:browser:version&quot;:&quot;105.0.0.0&quot;,&quot;telemetry:cpus&quot;:3,&quot;telemetry:memory&quot;:8,&quot;telemetry:network:effectiveType&quot;:&quot;4g&quot;,&quot;telemetry:network:rtt&quot;:200,&quot;telemetry:network:downlink&quot;:4.35,&quot;custom:pageLoadInfo&quot;:{&quot;uuid&quot;:&quot;SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;isInitial&quot;:false,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:3102},&quot;featureFlags&quot;:{&quot;confluence.frontend.pollinator.synthetic.check.tenants&quot;:false,&quot;confluence.frontend.delay.comment.button&quot;:true,&quot;confluence.frontend.delay.page.comments.render&quot;:&quot;delay-render&quot;,&quot;confluence.frontend.enable.external.collab&quot;:false,&quot;confluence.frontend.eop.recommendations.rollout&quot;:&quot;on&quot;,&quot;confluence.frontend.focused.inline.comment.performance&quot;:&quot;variation&quot;,&quot;confluence.frontend.live-search&quot;:true,&quot;confluence.frontend.presentation.mode&quot;:true,&quot;confluence.ssr.fabric.macros&quot;:null,&quot;confluence.ssr.page-tree&quot;:null,&quot;confluence.ssr.page-tree.best.effort&quot;:null,&quot;confluence.ssr.read-time&quot;:null,&quot;confluence.ssr.page-statuses&quot;:null,&quot;confluence.ssr.home.feed.best-effort&quot;:null,&quot;confluence.ssr.shortcuts&quot;:null,&quot;confluence.ssr.shortcuts.link-filter&quot;:null,&quot;confluence.ssr.smartlinks&quot;:null,&quot;confluence.ssr.page-share-and-perms-button&quot;:null,&quot;confluence.frontend.page-share-and-permissions&quot;:false,&quot;confluence.frontend.economy-growth.discover-apps-in-sidebar.experiment&quot;:false,&quot;confluence.frontend.top.level.body.content.query&quot;:false,&quot;confluence.ssr.integrating.public.links.to.nsd&quot;:null,&quot;confluence.frontend.integrating.public.links.to.nsd&quot;:false,&quot;confluence.frontend.fabric.editor.macro.adf.frontend.render&quot;:false,&quot;confluence.frontend.bandana.client.short.socket.timeout&quot;:&quot;50.0&quot;},&quot;hostname&quot;:&quot;thinktimetechnology.atlassian.net&quot;,&quot;confluence:cloudId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;confluence:environment&quot;:&quot;PRODUCTION&quot;,&quot;confluence:shard&quot;:&quot;confluence-prod-ap-8-3.prod.atl-paas.net&quot;,&quot;confluence:ssr&quot;:&quot;false&quot;,&quot;confluence:uniqueIdentifier&quot;:&quot;undefined&quot;,&quot;confluence:initial&quot;:false,&quot;confluence:criticalAssets&quot;:{&quot;cachedRate&quot;:0.5952380952380952,&quot;count&quot;:168,&quot;size&quot;:6214831,&quot;cachedSize&quot;:12473,&quot;nonCachedSize&quot;:6202358,&quot;sizeBasedCachedRate&quot;:0.002006973319145766},&quot;metric:fmp&quot;:3102,&quot;metric:tti&quot;:3102,&quot;metric:fmp:histogramBuckets&quot;:&quot;500_1000_1500_2000_2500_3000&quot;,&quot;metric:tti:histogramBuckets&quot;:&quot;1000_1500_2000_2500_3000_4000&quot;,&quot;pageVisible:state&quot;:&quot;visible&quot;,&quot;pageVisible:value&quot;:true,&quot;event:initial&quot;:false,&quot;timings:bundleEval&quot;:{&quot;SpaceOverviewRouteComponent(0)&quot;:{&quot;startTime&quot;:181,&quot;duration&quot;:1151},&quot;SpaceOverviewLoader(0)&quot;:{&quot;startTime&quot;:1340,&quot;duration&quot;:718},&quot;WatchDialogWrapperLoader(0)&quot;:{&quot;startTime&quot;:2096,&quot;duration&quot;:68},&quot;HighlightActionsLoader(0)&quot;:{&quot;startTime&quot;:2108,&quot;duration&quot;:176},&quot;StickyBanner(0)&quot;:{&quot;startTime&quot;:2101,&quot;duration&quot;:978},&quot;ContentToolsWrapper(0)&quot;:{&quot;startTime&quot;:2096,&quot;duration&quot;:1030}}}},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;performance measured&quot;,&quot;messageId&quot;:&quot;ajs-729c26bd-0e3c-4db3-84e5-94fbfc73096b&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:02.038Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:57.554Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;@atlaskit/feature-flag-client&quot;,&quot;actionSubject&quot;:&quot;feature&quot;,&quot;action&quot;:&quot;exposed&quot;,&quot;attributes&quot;:{&quot;flagKey&quot;:&quot;confluence.frontend.shortcuts-experiment&quot;,&quot;reason&quot;:&quot;PREREQUISITE_FAILED&quot;,&quot;ruleId&quot;:null,&quot;value&quot;:&quot;off&quot;},&quot;tags&quot;:[&quot;optInExposure&quot;,&quot;measurement&quot;],&quot;highPriority&quot;:true,&quot;eventType&quot;:&quot;track&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;feature exposed&quot;,&quot;messageId&quot;:&quot;ajs-16b52c43-dca2-41e8-ae3f-7a9b699f7d17&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:02.038Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:57.558Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;confluence-frontend&quot;,&quot;actionSubject&quot;:&quot;side-navigation-fmp&quot;,&quot;action&quot;:&quot;done&quot;,&quot;actionSubjectId&quot;:&quot;SideNavigationFMP&quot;,&quot;attributes&quot;:{&quot;featureFlags&quot;:{&quot;confluence.frontend-delete-own-permission-spotlight&quot;:true,&quot;confluence.frontend-delete-own-permission-spotlight-delay-duration&quot;:&quot;3000.0&quot;,&quot;confluence.frontend.add.labels&quot;:true,&quot;confluence.frontend.advanced-search.archive-search-filters&quot;:true,&quot;confluence.frontend.advanced-search.smart-contributor-filter&quot;:true,&quot;confluence.frontend.archive.and.delete.space&quot;:true,&quot;confluence.frontend.archive.pages&quot;:true,&quot;confluence.frontend.archive.pages.allow.bulk&quot;:true,&quot;confluence.frontend.archive.pages.allow.bulk.ui.multi-select&quot;:true,&quot;confluence.frontend.archive.pages.selection-limit&quot;:&quot;500.0&quot;,&quot;confluence.frontend.archive.recommendation.email&quot;:true,&quot;confluence.frontend.bandana.client.short.socket.timeout&quot;:&quot;50.0&quot;,&quot;confluence.frontend.batch.tasks&quot;:true,&quot;confluence.frontend.branch.deployment&quot;:&quot;off&quot;,&quot;confluence.frontend.collab.ncs.max.participants&quot;:&quot;12.0&quot;,&quot;confluence.frontend.conditional.inline.comments&quot;:true,&quot;confluence.frontend.connect.macro.save-as-forge&quot;:true,&quot;confluence.frontend.connect.macro.view-as-forge&quot;:true,&quot;confluence.frontend.convert-page-to-blog&quot;:&quot;v1&quot;,&quot;confluence.frontend.copy-page-tree&quot;:true,&quot;confluence.frontend.core.invites.optimisation&quot;:&quot;layout-rearrangement-and-nth-users-product-selector-variation&quot;,&quot;confluence.frontend.cql.metadata&quot;:true,&quot;confluence.frontend.create-content.blog-shortcut&quot;:true,&quot;confluence.frontend.create-content.discrete-route&quot;:true,&quot;confluence.frontend.create-team-on-behalf-of-others&quot;:true,&quot;confluence.frontend.creator-studio.personal-space-side-nav.baseline-metrics&quot;:true,&quot;confluence.frontend.debounce.mentions&quot;:&quot;150.0&quot;,&quot;confluence.frontend.delay.comment.button&quot;:true,&quot;confluence.frontend.delay.page.comments.render&quot;:&quot;delay-render&quot;,&quot;confluence.frontend.disable.invalid.extension.warning&quot;:&quot;renderer&quot;,&quot;confluence.frontend.editor.same-file-name-flag&quot;:true,&quot;confluence.frontend.eliminate.macro.context.to.link.conversion&quot;:true,&quot;confluence.frontend.embedded-confluence.enable.migration&quot;:&quot;JSM,msteams&quot;,&quot;confluence.frontend.embedded-confluence.enable.nfpe&quot;:true,&quot;confluence.frontend.enable-remote-switcher-admin-configuration&quot;:true,&quot;confluence.frontend.enable-remote-switcher-product-configuration&quot;:true,&quot;confluence.frontend.enable-ufo&quot;:true,&quot;confluence.frontend.enable.archive.permission&quot;:true,&quot;confluence.frontend.enable.ccp.seq3.upflow.transition&quot;:true,&quot;confluence.frontend.enable.ccp.seq4.upflow.transition&quot;:true,&quot;confluence.frontend.enable.help-menu.global-feedback-collector&quot;:true,&quot;confluence.frontend.enable.media.upload.api.v2&quot;:true,&quot;confluence.frontend.enduser-emcee-discover&quot;:true,&quot;confluence.frontend.engage-platform.engagekit&quot;:true,&quot;confluence.frontend.eop.recommendations.rollout&quot;:&quot;on&quot;,&quot;confluence.frontend.eop.suggestion-reason&quot;:true,&quot;confluence.frontend.extension.api-v2.macros&quot;:true,&quot;confluence.frontend.extension.chart&quot;:true,&quot;confluence.frontend.extension.chart.render&quot;:true,&quot;confluence.frontend.extension.config-panel&quot;:true,&quot;confluence.frontend.extension.config-panel.opt-out&quot;:&quot;{\&quot;macros\&quot;:[\&quot;create-from-template\&quot;,\&quot;auibutton\&quot;,\&quot;cfm-progress-bar-hyperlink-step\&quot;,\&quot;decisionreport\&quot;,\&quot;viewpdf\&quot;,\&quot;viewdoc\&quot;,\&quot;viewxls\&quot;,\&quot;viewppt\&quot;,\&quot;detailssummary\&quot;,\&quot;contentbylabel\&quot;,\&quot;blog-posts\&quot;],\&quot;on\&quot;:true}&quot;,&quot;confluence.frontend.extension.element-browser&quot;:true,&quot;confluence.frontend.extension.floatingToolbar&quot;:true,&quot;confluence.frontend.extension.plus-menu&quot;:true,&quot;confluence.frontend.external-share&quot;:&quot;not-enrolled&quot;,&quot;confluence.frontend.exus.import-from-slack&quot;:true,&quot;confluence.frontend.fabric-editor.predictable-list.enabled&quot;:true,&quot;confluence.frontend.fabric.editor.allow.synchrony.recovery&quot;:true,&quot;confluence.frontend.fabric.editor.analytics-instance-name-attribute&quot;:&quot;Production&quot;,&quot;confluence.frontend.fabric.editor.autonomy-tables&quot;:true,&quot;confluence.frontend.fabric.editor.blank.blogpost&quot;:true,&quot;confluence.frontend.fabric.editor.blank.page&quot;:true,&quot;confluence.frontend.fabric.editor.breadcrumbs.call.close&quot;:true,&quot;confluence.frontend.fabric.editor.collab-disconnect-tracking&quot;:true,&quot;confluence.frontend.fabric.editor.collapsed-breadcrumbs&quot;:&quot;collapse-and-remove-people&quot;,&quot;confluence.frontend.fabric.editor.custom-panel&quot;:true,&quot;confluence.frontend.fabric.editor.custom-panel.edit&quot;:true,&quot;confluence.frontend.fabric.editor.data-consumer-mark&quot;:true,&quot;confluence.frontend.fabric.editor.disable-spellcheck-by-browser&quot;:&quot;{}&quot;,&quot;confluence.frontend.fabric.editor.distribute-columns&quot;:true,&quot;confluence.frontend.fabric.editor.draft-in-page-tree.allowed-spaces&quot;:&quot;_ALL_SPACES_&quot;,&quot;confluence.frontend.fabric.editor.draft-in-page-tree.show-changeboarding-community-post&quot;:true,&quot;confluence.frontend.fabric.editor.edit-overlay&quot;:true,&quot;confluence.frontend.fabric.editor.embed-preview-size&quot;:&quot;control&quot;,&quot;confluence.frontend.fabric.editor.enable-sticky-table-headers&quot;:true,&quot;confluence.frontend.fabric.editor.enable.heartbeat-activity&quot;:true,&quot;confluence.frontend.fabric.editor.enable.new.editor.flags&quot;:true,&quot;confluence.frontend.fabric.editor.find-and-replace&quot;:true,&quot;confluence.frontend.fabric.editor.find-and-replace.allow-match-case&quot;:true,&quot;confluence.frontend.fabric.editor.inline.comments&quot;:&quot;fabric&quot;,&quot;confluence.frontend.fabric.editor.linking.new.activity.provider&quot;:true,&quot;confluence.frontend.fabric.editor.local-id-generation-on-tables&quot;:true,&quot;confluence.frontend.fabric.editor.maxUnsafeChromeSpellcheckingVersion&quot;:&quot;0.0&quot;,&quot;confluence.frontend.fabric.editor.media.captions&quot;:true,&quot;confluence.frontend.fabric.editor.on-close-draft-redirect-to-parent.allowed-spaces&quot;:&quot;_ALL_SPACES_&quot;,&quot;confluence.frontend.fabric.editor.page-cover-pictures&quot;:true,&quot;confluence.frontend.fabric.editor.performance-tracking&quot;:&quot;{\&quot;pasteTracking\&quot;:{\&quot;enabled\&quot;:true},\&quot;bFreezeTracking\&quot;:{\&quot;trackInteractionType\&quot;:true,\&quot;trackSeverity\&quot;:true},\&quot;contentRetrievalTracking\&quot;:{\&quot;successSamplingRate\&quot;:5.0,\&quot;failureSamplingRate\&quot;:1.0,\&quot;reportErrorStack\&quot;:false,\&quot;enabled\&quot;:true},\&quot;onEditorReadyCallbackTracking\&quot;:{\&quot;enabled\&quot;:true},\&quot;inputTracking\&quot;:{\&quot;trackSeverity\&quot;:true,\&quot;severityDegradedThreshold\&quot;:273.0,\&quot;samplingRate\&quot;:100.0,\&quot;countNodes\&quot;:true,\&quot;severityNormalThreshold\&quot;:143.0,\&quot;enabled\&quot;:true},\&quot;renderTracking\&quot;:{\&quot;editor\&quot;:{\&quot;useShallow\&quot;:false,\&quot;enabled\&quot;:true},\&quot;reactEditorView\&quot;:{\&quot;useShallow\&quot;:true,\&quot;enabled\&quot;:true}},\&quot;uiTracking\&quot;:{\&quot;samplingRate\&quot;:100.0,\&quot;enabled\&quot;:true},\&quot;ttiTracking\&quot;:{\&quot;trackSeverity\&quot;:true,\&quot;ttiSeverityNormalThreshold\&quot;:8000.0,\&quot;ttiFromInvocationSeverityDegradedThreshold\&quot;:7813.0,\&quot;ttiSeverityDegradedThreshold\&quot;:10000.0,\&quot;ttiFromInvocationSeverityNormalThreshold\&quot;:4804.0,\&quot;enabled\&quot;:true},\&quot;transactionTracking\&quot;:{\&quot;usePerformanceMarks\&quot;:true,\&quot;samplingRate\&quot;:100.0,\&quot;enabled\&quot;:true},\&quot;onChangeCallbackTracking\&quot;:{\&quot;enabled\&quot;:true},\&quot;catchAllTracking\&quot;:{\&quot;enabled\&quot;:false}}&quot;,&quot;confluence.frontend.fabric.editor.plainTextPasteLinkification&quot;:true,&quot;confluence.frontend.fabric.editor.preload.timeout&quot;:&quot;0.0&quot;,&quot;confluence.frontend.fabric.editor.queue-analytics&quot;:true,&quot;confluence.frontend.fabric.editor.referentiality&quot;:true,&quot;confluence.frontend.fabric.editor.renderer-render-tracking&quot;:&quot;{}&quot;,&quot;confluence.frontend.fabric.editor.satisfaction.survey&quot;:true,&quot;confluence.frontend.fabric.editor.satisfaction.survey.delay&quot;:&quot;28.0&quot;,&quot;confluence.frontend.fabric.editor.save-indicator-1point5&quot;:true,&quot;confluence.frontend.fabric.editor.show-hover-preview&quot;:true,&quot;confluence.frontend.fabric.editor.show.persistent.save.status&quot;:true,&quot;confluence.frontend.fabric.editor.showAvatarGroupAsPlugin&quot;:true,&quot;confluence.frontend.fabric.editor.smartcards.macro-override&quot;:&quot;jira,jiraroadmap,google-drive-sheets,google-drive-docs,OneDrive,google-drive-slides&quot;,&quot;confluence.frontend.fabric.editor.synchrony.long-polling&quot;:true,&quot;confluence.frontend.fabric.editor.synchrony.websocket-worker&quot;:true,&quot;confluence.frontend.fabric.editor.table-cell-optimisation&quot;:true,&quot;confluence.frontend.fabric.editor.table-initial-render-optimisation&quot;:true,&quot;confluence.frontend.fabric.editor.table-mousemove-optimisation&quot;:true,&quot;confluence.frontend.fabric.editor.table-overflow-shadows-optimization&quot;:true,&quot;confluence.frontend.fabric.editor.table-render-optimisation&quot;:true,&quot;confluence.frontend.fabric.editor.tooltip-discard-on-close.allowed-spaces&quot;:&quot;_ALL_SPACES_&quot;,&quot;confluence.frontend.fabric.editor.tti-tracking&quot;:&quot;{\&quot;enabled\&quot;:true}&quot;,&quot;confluence.frontend.fabric.editor.twoLineEditorToolbar&quot;:true,&quot;confluence.frontend.fabric.editor.user.internet.connection.indicator&quot;:true,&quot;confluence.frontend.fabric.editor.valid-transactions-tracking&quot;:&quot;{\&quot;samplingRate\&quot;:300.0}&quot;,&quot;confluence.frontend.fabric.editor.view-changing-experiment-toolbar-style&quot;:&quot;toolbarIcons&quot;,&quot;confluence.frontend.fabric.page.optin.migration&quot;:true,&quot;confluence.frontend.fabric.renderer.ttr-severity-tracking&quot;:&quot;{\&quot;severityDegradedThreshold\&quot;:4747.0,\&quot;severityNormalThreshold\&quot;:3775.0,\&quot;enabled\&quot;:true}&quot;,&quot;confluence.frontend.fabric.renderer.unsupported-content-levels-tracking&quot;:&quot;{\&quot;thresholds\&quot;:{\&quot;blocking\&quot;:1.5,\&quot;degraded\&quot;:1.0},\&quot;enabled\&quot;:true}&quot;,&quot;confluence.frontend.fabric.share.published&quot;:true,&quot;confluence.frontend.feed.content.query.field.test&quot;:&quot;off&quot;,&quot;confluence.frontend.feed.profile-card.follow&quot;:true,&quot;confluence.frontend.feed.reactions&quot;:&quot;not-enrolled&quot;,&quot;confluence.frontend.feed.recommendations&quot;:true,&quot;confluence.frontend.feed.recommendations-third-position&quot;:true,&quot;confluence.frontend.filter-events.exemptions&quot;:&quot;[]&quot;,&quot;confluence.frontend.focus.mode&quot;:true,&quot;confluence.frontend.focused.inline.comment.performance&quot;:&quot;variation&quot;,&quot;confluence.frontend.forge-custom-content&quot;:true,&quot;confluence.frontend.forge.extension-point.blueprint&quot;:true,&quot;confluence.frontend.forge.keyboardshortcuts.contentaction&quot;:true,&quot;confluence.frontend.forge.keyboardshortcuts.contentbylineitem&quot;:true,&quot;confluence.frontend.forge.keyboardshortcuts.contextmenu&quot;:true,&quot;confluence.frontend.forge.keyboardshortcuts.globalpage&quot;:true,&quot;confluence.frontend.forge.keyboardshortcuts.globalsettings&quot;:true,&quot;confluence.frontend.forge.keyboardshortcuts.homepagefeed&quot;:true,&quot;confluence.frontend.forge.keyboardshortcuts.spacepage&quot;:true,&quot;confluence.frontend.forge.keyboardshortcuts.spacesettings&quot;:true,&quot;confluence.frontend.full-width-templates&quot;:true,&quot;confluence.frontend.generic.comment.editor&quot;:true,&quot;confluence.frontend.global-feedback-collector-in-editor-help-center&quot;:true,&quot;confluence.frontend.growth.infi-slack-platform&quot;:true,&quot;confluence.frontend.heartbeat&quot;:true,&quot;confluence.frontend.hide-blank-drafts.allowed-spaces&quot;:&quot;_ALL_SPACES_&quot;,&quot;confluence.frontend.hide.gadgets.on.macro.selector&quot;:true,&quot;confluence.frontend.home-1.5&quot;:true,&quot;confluence.frontend.import-from-sources.tabs-enabled&quot;:true,&quot;confluence.frontend.in-editor-templates.backend-recovery&quot;:true,&quot;confluence.frontend.in-editor-templates.query-params-state&quot;:true,&quot;confluence.frontend.in-product.help&quot;:true,&quot;confluence.frontend.infi.interaction.notification.updates&quot;:true,&quot;confluence.frontend.inline.comments.nudge&quot;:&quot;variation&quot;,&quot;confluence.frontend.inline.highlights.performance&quot;:&quot;variation&quot;,&quot;confluence.frontend.invite-from-github.cohort&quot;:&quot;not-enrolled&quot;,&quot;confluence.frontend.invite.from.mention&quot;:&quot;variation-source&quot;,&quot;confluence.frontend.live-search&quot;:true,&quot;confluence.frontend.macro.analytics.tracker&quot;:true,&quot;confluence.frontend.macrobrowser.app.discovery&quot;:&quot;not-enrolled&quot;,&quot;confluence.frontend.marketplace-emcee-native-spa-enable&quot;:true,&quot;confluence.frontend.media.cards.new.experience&quot;:true,&quot;confluence.frontend.media.cards.server.side.rendering&quot;:true,&quot;confluence.frontend.media.poll.backoff.factor&quot;:&quot;1.25&quot;,&quot;confluence.frontend.media.poll.intervalms&quot;:&quot;3000.0&quot;,&quot;confluence.frontend.media.poll.maxIntervalms&quot;:&quot;200000.0&quot;,&quot;confluence.frontend.media.poll.maxattempts&quot;:&quot;30.0&quot;,&quot;confluence.frontend.media.viewer.zip.previews&quot;:true,&quot;confluence.frontend.mobile.web.full.page.takeover.variation&quot;:&quot;concrete&quot;,&quot;confluence.frontend.ncs.disconnected.delay.ms&quot;:&quot;0.0&quot;,&quot;confluence.frontend.ncs.use.404&quot;:true,&quot;confluence.frontend.network-status-listener.with-ui&quot;:true,&quot;confluence.frontend.new.feed.cards.observed.analytics&quot;:true,&quot;confluence.frontend.new.feed.rollout&quot;:&quot;on&quot;,&quot;confluence.frontend.newSitePerms&quot;:true,&quot;confluence.frontend.onboarding.account-setup-modal&quot;:&quot;not-enrolled&quot;,&quot;confluence.frontend.onboarding.account-setup-modal.calibration&quot;:&quot;experiment&quot;,&quot;confluence.frontend.onboarding.admin-quickstart-v2&quot;:&quot;enrolled&quot;,&quot;confluence.frontend.onboarding.cache.state&quot;:true,&quot;confluence.frontend.onboarding.editor-onboarding.draft-publish-2&quot;:&quot;enrolled&quot;,&quot;confluence.frontend.onboarding.editor-onboarding.tutorial-template&quot;:&quot;experiment&quot;,&quot;confluence.frontend.onboarding.editor-onboarding.user-tagging&quot;:true,&quot;confluence.frontend.onboarding.established.user&quot;:true,&quot;confluence.frontend.onboarding.experience&quot;:true,&quot;confluence.frontend.onboarding.migrations.quickstart&quot;:&quot;enrolled&quot;,&quot;confluence.frontend.onboarding.migrations.quickstart.calibration&quot;:&quot;control&quot;,&quot;confluence.frontend.onboarding.migrations.site-traits&quot;:true,&quot;confluence.frontend.onboarding.migrations.user-tagging&quot;:true,&quot;confluence.frontend.onboarding.nth-user-quickstart-v2&quot;:&quot;experiment&quot;,&quot;confluence.frontend.onboarding.nth-user-quickstart-v2.calibration&quot;:&quot;experiment&quot;,&quot;confluence.frontend.onboarding.nth.user.quickstart&quot;:&quot;enrolled&quot;,&quot;confluence.frontend.onboarding.nudges&quot;:&quot;enrolled&quot;,&quot;confluence.frontend.onboarding.onboarding-state-refactor&quot;:&quot;not-enrolled&quot;,&quot;confluence.frontend.onboarding.persistent-invite&quot;:&quot;not-enrolled&quot;,&quot;confluence.frontend.onboarding.persistent-invite.calibration&quot;:&quot;not-enrolled&quot;,&quot;confluence.frontend.onboarding.quickstart&quot;:&quot;enrolled&quot;,&quot;confluence.frontend.onboarding.quickstart.nudge&quot;:&quot;enrolled&quot;,&quot;confluence.frontend.onboarding.remove.role.screen&quot;:&quot;experiment&quot;,&quot;confluence.frontend.onboarding.segment&quot;:&quot;control&quot;,&quot;confluence.frontend.onboarding.simplify-admin-setup.test&quot;:&quot;control&quot;,&quot;confluence.frontend.onboarding.simplify.admin.setup&quot;:&quot;not-enrolled&quot;,&quot;confluence.frontend.onboarding.simplify.admin.setup.skip-invite&quot;:&quot;enrolled&quot;,&quot;confluence.frontend.onboarding.simplify.admin.setup.skip-invite.calibration&quot;:&quot;control&quot;,&quot;confluence.frontend.onboarding.xflow.jsw&quot;:&quot;experiment&quot;,&quot;confluence.frontend.org.people.picker.expansion&quot;:&quot;variation&quot;,&quot;confluence.frontend.org.people.picker.in.core.invites&quot;:true,&quot;confluence.frontend.org.people.picker.in.core.invites.prerequisite&quot;:true,&quot;confluence.frontend.page-cards-on-hover&quot;:true,&quot;confluence.frontend.page.comments.new.api&quot;:true,&quot;confluence.frontend.page.history.version&quot;:&quot;v2&quot;,&quot;confluence.frontend.page.statuses&quot;:true,&quot;confluence.frontend.personal.space.backfill&quot;:true,&quot;confluence.frontend.personal.space.backfill.onboarding&quot;:true,&quot;confluence.frontend.presentation.mode&quot;:true,&quot;confluence.frontend.presenter.mode.navigation.menu&quot;:true,&quot;confluence.frontend.pubsub.integration&quot;:true,&quot;confluence.frontend.quick-edit&quot;:true,&quot;confluence.frontend.quick-search.bitbucket&quot;:true,&quot;confluence.frontend.quick-search.google-drive&quot;:true,&quot;confluence.frontend.quick-search.opsgenie&quot;:true,&quot;confluence.frontend.quick-search.trello&quot;:true,&quot;confluence.frontend.quick.reload.strategy&quot;:&quot;SUBSCRIPTIONS&quot;,&quot;confluence.frontend.reactions&quot;:&quot;reactions&quot;,&quot;confluence.frontend.reactions.for.email&quot;:true,&quot;confluence.frontend.related.pages.space.settings&quot;:true,&quot;confluence.frontend.remove.adg3.home.feedback.button&quot;:&quot;v2&quot;,&quot;confluence.frontend.restrictions-dialog-smart-picker&quot;:true,&quot;confluence.frontend.revert.page-migrated.reload.tinymce&quot;:true,&quot;confluence.frontend.rich.ld.test.flag&quot;:&quot;not-enrolled&quot;,&quot;confluence.frontend.search-dialog.use-urs-for-people-search&quot;:true,&quot;confluence.frontend.search.experiment.rollout&quot;:&quot;off&quot;,&quot;confluence.frontend.set.collab.init.timeout&quot;:&quot;0&quot;,&quot;confluence.frontend.shortcuts-experiment&quot;:&quot;off&quot;,&quot;confluence.frontend.show-existing-labels-in-dialog&quot;:true,&quot;confluence.frontend.show.standard.upsell&quot;:true,&quot;confluence.frontend.sort.resolved.comments&quot;:true,&quot;confluence.frontend.space-pages.relevant&quot;:&quot;variant&quot;,&quot;confluence.frontend.space-quick-links&quot;:true,&quot;confluence.frontend.space-settings-v2&quot;:true,&quot;confluence.frontend.space-shortcuts.link-picker&quot;:&quot;off&quot;,&quot;confluence.frontend.space.team.mapping&quot;:&quot;experiment&quot;,&quot;confluence.frontend.spaces-dropdown.create-a-space-move&quot;:&quot;off&quot;,&quot;confluence.frontend.stein.v2&quot;:&quot;not-enrolled&quot;,&quot;confluence.frontend.support.unsupported.fabric.migration&quot;:true,&quot;confluence.frontend.sw.disable.base-and-wiki&quot;:true,&quot;confluence.frontend.sw.disable.home&quot;:true,&quot;confluence.frontend.table-visualization&quot;:true,&quot;confluence.frontend.task.batching.interval&quot;:&quot;3000.0&quot;,&quot;confluence.frontend.template-recommendations-by-title-experiment&quot;:&quot;not-enrolled&quot;,&quot;confluence.frontend.template.editor.media.support&quot;:true,&quot;confluence.frontend.throttle.legacy.macro.query&quot;:true,&quot;confluence.frontend.ufo.enable-smart-links-experience&quot;:true,&quot;confluence.frontend.ufo.rate&quot;:&quot;{}&quot;,&quot;confluence.frontend.ufo.search-dialog&quot;:true,&quot;confluence.frontend.view.all.inline.comments&quot;:&quot;not-enrolled&quot;},&quot;duration&quot;:28845.400000000373},&quot;tags&quot;:[&quot;performance&quot;],&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;side-navigation-fmp done&quot;,&quot;messageId&quot;:&quot;ajs-05da0510-b041-4d6e-8fc3-30607547ed69&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:02.038Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:57.634Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;@atlaskit/feature-flag-client&quot;,&quot;actionSubject&quot;:&quot;feature&quot;,&quot;action&quot;:&quot;exposed&quot;,&quot;attributes&quot;:{&quot;flagKey&quot;:&quot;confluence.frontend.external-share&quot;,&quot;reason&quot;:&quot;RULE_MATCH&quot;,&quot;ruleId&quot;:&quot;a08fbc87-3e21-4cbb-803d-1b3ae16836ff&quot;,&quot;value&quot;:&quot;not-enrolled&quot;},&quot;tags&quot;:[&quot;manualExposure&quot;,&quot;measurement&quot;],&quot;highPriority&quot;:true,&quot;eventType&quot;:&quot;track&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;feature exposed&quot;,&quot;messageId&quot;:&quot;ajs-1233d8c7-2a02-4659-8532-1ff059cb35f5&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:02.038Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:57.635Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;@atlaskit/feature-flag-client&quot;,&quot;actionSubject&quot;:&quot;feature&quot;,&quot;action&quot;:&quot;exposed&quot;,&quot;attributes&quot;:{&quot;flagKey&quot;:&quot;confluence.frontend.external-share&quot;,&quot;reason&quot;:&quot;RULE_MATCH&quot;,&quot;ruleId&quot;:&quot;a08fbc87-3e21-4cbb-803d-1b3ae16836ff&quot;,&quot;value&quot;:&quot;not-enrolled&quot;,&quot;cohort&quot;:&quot;not-enrolled&quot;,&quot;ineligibilityReasons&quot;:[&quot;ff_not_enrolled&quot;,&quot;is_free_edition&quot;]},&quot;tags&quot;:[&quot;measurement&quot;,&quot;manualExposure&quot;,&quot;hasCustomAttributes&quot;],&quot;highPriority&quot;:true,&quot;eventType&quot;:&quot;track&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;feature exposed&quot;,&quot;messageId&quot;:&quot;ajs-94493f8d-852e-46b6-b806-a88f4e610a7b&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:02.038Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:57.902Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;unknown&quot;,&quot;actionSubject&quot;:&quot;renderer&quot;,&quot;action&quot;:&quot;unsupportedContentLevelsTrackingSucceeded&quot;,&quot;attributes&quot;:{&quot;appearance&quot;:&quot;fixedWidth&quot;,&quot;packageName&quot;:&quot;@atlaskit/renderer&quot;,&quot;packageVersion&quot;:&quot;101.0.1&quot;,&quot;componentName&quot;:&quot;renderer&quot;,&quot;editorSessionId&quot;:&quot;bcf6b0ba-8e53-429c-8cde-707abd8f6a03&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;unsupportedContentLevelSeverity&quot;:&quot;normal&quot;,&quot;unsupportedContentLevelPercentage&quot;:0,&quot;unsupportedNodesCount&quot;:0,&quot;supportedNodesCount&quot;:66,&quot;objectId&quot;:&quot;33329&quot;,&quot;instance&quot;:&quot;Production&quot;},&quot;tags&quot;:[&quot;editor&quot;,&quot;fabricEditor&quot;],&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;renderer unsupportedContentLevelsTrackingSucceeded&quot;,&quot;messageId&quot;:&quot;ajs-92596f55-b0d6-4c6e-b8f7-dc75e1a240af&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:02.038Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:58.095Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;viewPageScreen&quot;,&quot;actionSubject&quot;:&quot;macro&quot;,&quot;action&quot;:&quot;viewed&quot;,&quot;actionSubjectId&quot;:&quot;livesearch&quot;,&quot;attributes&quot;:{},&quot;eventType&quot;:&quot;track&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;macro viewed&quot;,&quot;messageId&quot;:&quot;ajs-1e996a78-c569-41d3-a31f-7566acf0425b&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:02.038Z&quot;}],&quot;sentAt&quot;:&quot;2022-09-26T05:59:02.038Z&quot;,&quot;metadata&quot;:{&quot;resilienceMechanism&quot;:&quot;indexeddb&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/gasv3/api/v1/batch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-528" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;batch&quot;:[{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:58.095Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;viewPageScreen&quot;,&quot;actionSubject&quot;:&quot;macro&quot;,&quot;action&quot;:&quot;viewed&quot;,&quot;actionSubjectId&quot;:&quot;toc&quot;,&quot;attributes&quot;:{},&quot;eventType&quot;:&quot;track&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;macro viewed&quot;,&quot;messageId&quot;:&quot;ajs-c9bd9aad-403c-45c8-b909-ba3cea7a09ea&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:02.434Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:58.095Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;viewPageScreen&quot;,&quot;actionSubject&quot;:&quot;macro&quot;,&quot;action&quot;:&quot;viewed&quot;,&quot;actionSubjectId&quot;:&quot;recently-updated&quot;,&quot;attributes&quot;:{},&quot;eventType&quot;:&quot;track&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;macro viewed&quot;,&quot;messageId&quot;:&quot;ajs-d21672d4-c916-49f8-8da9-8a31c29ba416&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:02.434Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:58.422Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;@atlaskit/feature-flag-client&quot;,&quot;actionSubject&quot;:&quot;feature&quot;,&quot;action&quot;:&quot;exposed&quot;,&quot;attributes&quot;:{&quot;flagKey&quot;:&quot;confluence.frontend.economy-growth.discover-apps-in-sidebar.experiment&quot;,&quot;reason&quot;:&quot;OFF&quot;,&quot;ruleId&quot;:null,&quot;value&quot;:false},&quot;tags&quot;:[&quot;optInExposure&quot;,&quot;measurement&quot;],&quot;highPriority&quot;:true,&quot;eventType&quot;:&quot;track&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;feature exposed&quot;,&quot;messageId&quot;:&quot;ajs-4ed4ffb0-399c-49c2-8e8a-8d1256b31e16&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:02.434Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:58.422Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;@atlaskit/feature-flag-client&quot;,&quot;actionSubject&quot;:&quot;feature&quot;,&quot;action&quot;:&quot;exposed&quot;,&quot;attributes&quot;:{&quot;flagKey&quot;:&quot;confluence.frontend.economy-growth.discover-apps-in-sidebar.experiment&quot;,&quot;reason&quot;:&quot;OFF&quot;,&quot;ruleId&quot;:null,&quot;value&quot;:false,&quot;growthInitiative&quot;:&quot;cross-flow&quot;,&quot;edition&quot;:&quot;FREE&quot;,&quot;isSiteAdmin&quot;:false,&quot;isSpaceAdmin&quot;:false},&quot;tags&quot;:[&quot;measurement&quot;,&quot;optInExposure&quot;,&quot;hasCustomAttributes&quot;],&quot;highPriority&quot;:true,&quot;eventType&quot;:&quot;track&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;feature exposed&quot;,&quot;messageId&quot;:&quot;ajs-d2946369-01ef-4c4b-a727-829f589efb12&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:02.434Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:58.425Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskSuccess&quot;,&quot;attributes&quot;:{&quot;uuid&quot;:&quot;SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;isInitial&quot;:false,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:5616.100000000559,&quot;startTime&quot;:27648,&quot;duration&quot;:5390,&quot;activeDuration&quot;:5390,&quot;adjustedDuration&quot;:5390,&quot;task&quot;:&quot;navigation/app-nav-container-navigation&quot;,&quot;taskId&quot;:&quot;b87c0a3a-9976-4559-820f-d189efffad8d&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskSuccess&quot;,&quot;messageId&quot;:&quot;ajs-6e0513a1-21eb-4350-8370-af1479422e2e&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:02.434Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:58.425Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskStart&quot;,&quot;attributes&quot;:{&quot;uuid&quot;:&quot;SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;isInitial&quot;:false,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:5663.700000000186,&quot;startTime&quot;:33085.700000000186,&quot;task&quot;:&quot;space-views/initial&quot;,&quot;taskId&quot;:&quot;14563e38-64b0-4d64-9efc-578624d5afe3&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskStart&quot;,&quot;messageId&quot;:&quot;ajs-4b85d323-4528-44ad-b003-ceae0f2117d4&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:02.434Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:58.427Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;performance&quot;,&quot;actionSubject&quot;:&quot;performance&quot;,&quot;action&quot;:&quot;measured&quot;,&quot;attributes&quot;:{&quot;task&quot;:&quot;confluence.fe.custom.space-navigation-query&quot;,&quot;properties&quot;:{&quot;event:key&quot;:&quot;confluence.fe.custom.space-navigation-query&quot;,&quot;event:type&quot;:&quot;custom&quot;,&quot;event:product&quot;:&quot;confluence&quot;,&quot;event:route&quot;:&quot;SPACE_OVERVIEW&quot;,&quot;event:id&quot;:&quot;space-navigation-query&quot;,&quot;event:localHour&quot;:11,&quot;event:localDayOfWeek&quot;:1,&quot;event:region&quot;:&quot;confluence-prod-ap-8-3.prod.atl-paas.net&quot;,&quot;app:framework:name&quot;:&quot;react&quot;,&quot;app:framework:version&quot;:&quot;16.14.0&quot;,&quot;app:web:version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;bm:version&quot;:3,&quot;telemetry:browser:name&quot;:&quot;Chrome&quot;,&quot;telemetry:browser:version&quot;:&quot;105.0.0.0&quot;,&quot;telemetry:cpus&quot;:3,&quot;telemetry:memory&quot;:8,&quot;telemetry:network:effectiveType&quot;:&quot;4g&quot;,&quot;telemetry:network:rtt&quot;:200,&quot;telemetry:network:downlink&quot;:4.35,&quot;featureFlags&quot;:{&quot;confluence.frontend.pollinator.synthetic.check.tenants&quot;:false},&quot;hostname&quot;:&quot;thinktimetechnology.atlassian.net&quot;,&quot;confluence:cloudId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;confluence:environment&quot;:&quot;PRODUCTION&quot;,&quot;confluence:shard&quot;:&quot;confluence-prod-ap-8-3.prod.atl-paas.net&quot;,&quot;confluence:ssr&quot;:&quot;false&quot;,&quot;confluence:uniqueIdentifier&quot;:&quot;undefined&quot;,&quot;confluence:buildInfo:FRONTEND_VERSION&quot;:&quot;CLASSIC-master-12091&quot;,&quot;confluence:buildInfo:BRANCH_NAME&quot;:&quot;master&quot;,&quot;confluence:buildInfo:BUILD_NUMBER&quot;:&quot;12091&quot;,&quot;confluence:buildInfo:BUILD_DATE&quot;:&quot;1663854142232&quot;,&quot;confluence:buildInfo:PUBLIC_PATH&quot;:&quot;${scheme}://confluence-v1.prod.atl-paas.net/master/&quot;,&quot;confluence:buildInfo:RELEASE_TRACK&quot;:&quot;prod&quot;,&quot;confluence:initial&quot;:false,&quot;confluence:criticalAssets&quot;:{&quot;cachedRate&quot;:0.5952380952380952,&quot;count&quot;:168,&quot;size&quot;:6214831,&quot;cachedSize&quot;:12473,&quot;nonCachedSize&quot;:6202358,&quot;sizeBasedCachedRate&quot;:0.002006973319145766},&quot;pageVisible:state&quot;:&quot;visible&quot;,&quot;pageVisible:value&quot;:true,&quot;metric:duration&quot;:702}},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;performance measured&quot;,&quot;messageId&quot;:&quot;ajs-17339523-4896-407f-8006-088f8348eeea&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:02.434Z&quot;}],&quot;sentAt&quot;:&quot;2022-09-26T05:59:02.434Z&quot;,&quot;metadata&quot;:{&quot;resilienceMechanism&quot;:&quot;indexeddb&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/gasv3/api/v1/batch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-529" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;batch&quot;:[{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:58:58.437Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;performance&quot;,&quot;actionSubject&quot;:&quot;performance&quot;,&quot;action&quot;:&quot;measured&quot;,&quot;attributes&quot;:{&quot;task&quot;:&quot;confluence.fe.page-segment-load.space-navigation&quot;,&quot;properties&quot;:{&quot;event:key&quot;:&quot;confluence.fe.page-segment-load.space-navigation&quot;,&quot;event:type&quot;:&quot;page-segment-load&quot;,&quot;event:product&quot;:&quot;confluence&quot;,&quot;event:route&quot;:&quot;SPACE_OVERVIEW&quot;,&quot;event:id&quot;:&quot;space-navigation&quot;,&quot;event:localHour&quot;:11,&quot;event:localDayOfWeek&quot;:1,&quot;event:region&quot;:&quot;confluence-prod-ap-8-3.prod.atl-paas.net&quot;,&quot;app:framework:name&quot;:&quot;react&quot;,&quot;app:framework:version&quot;:&quot;16.14.0&quot;,&quot;app:web:version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;bm:version&quot;:3,&quot;telemetry:browser:name&quot;:&quot;Chrome&quot;,&quot;telemetry:browser:version&quot;:&quot;105.0.0.0&quot;,&quot;telemetry:cpus&quot;:3,&quot;telemetry:memory&quot;:8,&quot;telemetry:network:effectiveType&quot;:&quot;4g&quot;,&quot;telemetry:network:rtt&quot;:200,&quot;telemetry:network:downlink&quot;:4.35,&quot;custom:pageLoadInfo&quot;:{&quot;uuid&quot;:&quot;SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;isInitial&quot;:false,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:5672.700000000186},&quot;featureFlags&quot;:{&quot;confluence.frontend.pollinator.synthetic.check.tenants&quot;:false,&quot;confluence.frontend.delay.comment.button&quot;:true,&quot;confluence.frontend.delay.page.comments.render&quot;:&quot;delay-render&quot;,&quot;confluence.frontend.enable.external.collab&quot;:false,&quot;confluence.frontend.eop.recommendations.rollout&quot;:&quot;on&quot;,&quot;confluence.frontend.focused.inline.comment.performance&quot;:&quot;variation&quot;,&quot;confluence.frontend.live-search&quot;:true,&quot;confluence.frontend.presentation.mode&quot;:true,&quot;confluence.ssr.fabric.macros&quot;:null,&quot;confluence.ssr.page-tree&quot;:null,&quot;confluence.ssr.page-tree.best.effort&quot;:null,&quot;confluence.ssr.read-time&quot;:null,&quot;confluence.ssr.page-statuses&quot;:null,&quot;confluence.ssr.home.feed.best-effort&quot;:null,&quot;confluence.ssr.shortcuts&quot;:null,&quot;confluence.ssr.shortcuts.link-filter&quot;:null,&quot;confluence.ssr.smartlinks&quot;:null,&quot;confluence.ssr.page-share-and-perms-button&quot;:null,&quot;confluence.frontend.page-share-and-permissions&quot;:false,&quot;confluence.frontend.economy-growth.discover-apps-in-sidebar.experiment&quot;:false,&quot;confluence.frontend.top.level.body.content.query&quot;:false,&quot;confluence.ssr.integrating.public.links.to.nsd&quot;:null,&quot;confluence.frontend.integrating.public.links.to.nsd&quot;:false,&quot;confluence.frontend.fabric.editor.macro.adf.frontend.render&quot;:false,&quot;confluence.frontend.bandana.client.short.socket.timeout&quot;:&quot;50.0&quot;},&quot;hostname&quot;:&quot;thinktimetechnology.atlassian.net&quot;,&quot;confluence:cloudId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;confluence:environment&quot;:&quot;PRODUCTION&quot;,&quot;confluence:shard&quot;:&quot;confluence-prod-ap-8-3.prod.atl-paas.net&quot;,&quot;confluence:ssr&quot;:&quot;false&quot;,&quot;confluence:uniqueIdentifier&quot;:&quot;undefined&quot;,&quot;confluence:initial&quot;:false,&quot;confluence:criticalAssets&quot;:{&quot;cachedRate&quot;:0.5952380952380952,&quot;count&quot;:168,&quot;size&quot;:6214831,&quot;cachedSize&quot;:12473,&quot;nonCachedSize&quot;:6202358,&quot;sizeBasedCachedRate&quot;:0.002006973319145766},&quot;metric:fmp&quot;:5672,&quot;metric:tti&quot;:5672,&quot;metric:fmp:histogramBuckets&quot;:&quot;500_1000_1500_2000_2500_3000&quot;,&quot;metric:tti:histogramBuckets&quot;:&quot;1000_1500_2000_2500_3000_4000&quot;,&quot;pageVisible:state&quot;:&quot;visible&quot;,&quot;pageVisible:value&quot;:true,&quot;event:initial&quot;:false,&quot;timings:bundleEval&quot;:{&quot;SpaceOverviewRouteComponent(0)&quot;:{&quot;startTime&quot;:181,&quot;duration&quot;:1151},&quot;SpaceOverviewLoader(0)&quot;:{&quot;startTime&quot;:1340,&quot;duration&quot;:718},&quot;WatchDialogWrapperLoader(0)&quot;:{&quot;startTime&quot;:2096,&quot;duration&quot;:68},&quot;HighlightActionsLoader(0)&quot;:{&quot;startTime&quot;:2108,&quot;duration&quot;:176},&quot;StickyBanner(0)&quot;:{&quot;startTime&quot;:2101,&quot;duration&quot;:978},&quot;ContentToolsWrapper(0)&quot;:{&quot;startTime&quot;:2096,&quot;duration&quot;:1030},&quot;SpaceNavigationLoader(1)&quot;:{&quot;startTime&quot;:3537,&quot;duration&quot;:1250},&quot;ShareButtonLoader(1)&quot;:{&quot;startTime&quot;:3553,&quot;duration&quot;:1293},&quot;RendererContentState(1)&quot;:{&quot;startTime&quot;:3544,&quot;duration&quot;:1327},&quot;InlineJiraTasksLoader(1)&quot;:{&quot;startTime&quot;:3573,&quot;duration&quot;:1387}}}},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;performance measured&quot;,&quot;messageId&quot;:&quot;ajs-167509b0-8108-466c-b83a-e489d6dce9a5&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:02.756Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:00.092Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskSuccess&quot;,&quot;attributes&quot;:{&quot;uuid&quot;:&quot;SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;isInitial&quot;:false,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:7347.300000000745,&quot;startTime&quot;:30549.900000000373,&quot;duration&quot;:4219,&quot;activeDuration&quot;:4219,&quot;adjustedDuration&quot;:4219,&quot;task&quot;:&quot;view-page/content-tools&quot;,&quot;taskId&quot;:&quot;33329&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskSuccess&quot;,&quot;messageId&quot;:&quot;ajs-2d388b95-e75d-4f45-9020-ed1b828859e1&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:02.756Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:00.107Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;performance&quot;,&quot;actionSubject&quot;:&quot;performance&quot;,&quot;action&quot;:&quot;measured&quot;,&quot;attributes&quot;:{&quot;task&quot;:&quot;confluence.fe.page-load.space-overview&quot;,&quot;properties&quot;:{&quot;event:key&quot;:&quot;confluence.fe.page-load.space-overview&quot;,&quot;event:type&quot;:&quot;page-load&quot;,&quot;event:product&quot;:&quot;confluence&quot;,&quot;event:route&quot;:&quot;SPACE_OVERVIEW&quot;,&quot;event:id&quot;:&quot;space-overview&quot;,&quot;event:localHour&quot;:11,&quot;event:localDayOfWeek&quot;:1,&quot;event:region&quot;:&quot;confluence-prod-ap-8-3.prod.atl-paas.net&quot;,&quot;app:framework:name&quot;:&quot;react&quot;,&quot;app:framework:version&quot;:&quot;16.14.0&quot;,&quot;app:web:version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;bm:version&quot;:3,&quot;telemetry:browser:name&quot;:&quot;Chrome&quot;,&quot;telemetry:browser:version&quot;:&quot;105.0.0.0&quot;,&quot;telemetry:cpus&quot;:3,&quot;telemetry:memory&quot;:8,&quot;telemetry:network:effectiveType&quot;:&quot;4g&quot;,&quot;telemetry:network:rtt&quot;:200,&quot;telemetry:network:downlink&quot;:4.35,&quot;custom:numberOfInlineComments&quot;:0,&quot;custom:pageLoadInfo&quot;:{&quot;uuid&quot;:&quot;SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;isInitial&quot;:false,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:7347.5},&quot;custom:appearance&quot;:&quot;full-page&quot;,&quot;custom:contentId&quot;:&quot;33329&quot;,&quot;custom:fallback&quot;:false,&quot;custom:fabric&quot;:true,&quot;custom:isLite&quot;:false,&quot;custom:loadedFromCache&quot;:false,&quot;custom:segment&quot;:&quot;more-actions-dropdown&quot;,&quot;custom:segmentOverrided&quot;:false,&quot;featureFlags&quot;:{&quot;confluence.frontend.pollinator.synthetic.check.tenants&quot;:false,&quot;confluence.frontend.delay.comment.button&quot;:true,&quot;confluence.frontend.delay.page.comments.render&quot;:&quot;delay-render&quot;,&quot;confluence.frontend.enable.external.collab&quot;:false,&quot;confluence.frontend.eop.recommendations.rollout&quot;:&quot;on&quot;,&quot;confluence.frontend.focused.inline.comment.performance&quot;:&quot;variation&quot;,&quot;confluence.frontend.live-search&quot;:true,&quot;confluence.frontend.presentation.mode&quot;:true,&quot;confluence.ssr.fabric.macros&quot;:null,&quot;confluence.ssr.page-tree&quot;:null,&quot;confluence.ssr.page-tree.best.effort&quot;:null,&quot;confluence.ssr.read-time&quot;:null,&quot;confluence.ssr.page-statuses&quot;:null,&quot;confluence.ssr.home.feed.best-effort&quot;:null,&quot;confluence.ssr.shortcuts&quot;:null,&quot;confluence.ssr.shortcuts.link-filter&quot;:null,&quot;confluence.ssr.smartlinks&quot;:null,&quot;confluence.ssr.page-share-and-perms-button&quot;:null,&quot;confluence.frontend.page-share-and-permissions&quot;:false,&quot;confluence.frontend.economy-growth.discover-apps-in-sidebar.experiment&quot;:false,&quot;confluence.frontend.top.level.body.content.query&quot;:false,&quot;confluence.ssr.integrating.public.links.to.nsd&quot;:null,&quot;confluence.frontend.integrating.public.links.to.nsd&quot;:false,&quot;confluence.frontend.fabric.editor.macro.adf.frontend.render&quot;:false,&quot;confluence.frontend.bandana.client.short.socket.timeout&quot;:&quot;50.0&quot;},&quot;hostname&quot;:&quot;thinktimetechnology.atlassian.net&quot;,&quot;confluence:cloudId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;confluence:environment&quot;:&quot;PRODUCTION&quot;,&quot;confluence:shard&quot;:&quot;confluence-prod-ap-8-3.prod.atl-paas.net&quot;,&quot;confluence:ssr&quot;:&quot;false&quot;,&quot;confluence:uniqueIdentifier&quot;:&quot;undefined&quot;,&quot;confluence:buildInfo:FRONTEND_VERSION&quot;:&quot;CLASSIC-master-12091&quot;,&quot;confluence:buildInfo:BRANCH_NAME&quot;:&quot;master&quot;,&quot;confluence:buildInfo:BUILD_NUMBER&quot;:&quot;12091&quot;,&quot;confluence:buildInfo:BUILD_DATE&quot;:&quot;1663854142232&quot;,&quot;confluence:buildInfo:PUBLIC_PATH&quot;:&quot;${scheme}://confluence-v1.prod.atl-paas.net/master/&quot;,&quot;confluence:buildInfo:RELEASE_TRACK&quot;:&quot;prod&quot;,&quot;confluence:cfp63Durations:CFP-63.html&quot;:1614,&quot;confluence:cfp63Durations:CFP-63.query-preloader&quot;:3067,&quot;confluence:cfp63Durations:CFP-63.app&quot;:3386,&quot;confluence:cfp63Durations:CFP-63.translations-ready&quot;:3917,&quot;confluence:cfp63Durations:CFP-63.session-data-ready&quot;:4199,&quot;confluence:cfp63Durations:CFP-63.root-component-render&quot;:4289,&quot;confluence:cfp63Durations:CFP-63.app-component-render&quot;:4350,&quot;confluence:cfp63Durations:CFP-63.route-manager-initialized&quot;:4452,&quot;confluence:cfp63Durations:CFP-63.route-component-render&quot;:4456,&quot;confluence:cfp63Durations:CFP-63.preloadContent&quot;:1028,&quot;confluence:cfp63Durations:CFP-63.preloadContentEnd&quot;:29447,&quot;confluence:cfp63Durations:CFP-63.next.content-renderer.rendered&quot;:29710,&quot;timings:app&quot;:{&quot;fy21-legacy-fmp&quot;:{&quot;startTime&quot;:0,&quot;duration&quot;:2394},&quot;fy21-legacy-tti&quot;:{&quot;startTime&quot;:0,&quot;duration&quot;:2394},&quot;wf:content-renderer&quot;:{&quot;startTime&quot;:2291,&quot;duration&quot;:753},&quot;wf:inline-comments&quot;:{&quot;startTime&quot;:2094,&quot;duration&quot;:22},&quot;wf:more-actions-dropdown&quot;:{&quot;startTime&quot;:3128,&quot;duration&quot;:4219},&quot;wf:watch-button&quot;:{&quot;startTime&quot;:3096,&quot;duration&quot;:6},&quot;include:content-renderer&quot;:{&quot;startTime&quot;:0,&quot;duration&quot;:3044},&quot;include:inline-comments&quot;:{&quot;startTime&quot;:0,&quot;duration&quot;:2116},&quot;include:inline-comments/fmp&quot;:{&quot;startTime&quot;:0,&quot;duration&quot;:5692},&quot;include:inline-comments/highlightsRendered&quot;:{&quot;startTime&quot;:0,&quot;duration&quot;:5692},&quot;include:more-actions-dropdown&quot;:{&quot;startTime&quot;:0,&quot;duration&quot;:7347},&quot;include:watch-button&quot;:{&quot;startTime&quot;:0,&quot;duration&quot;:3102}},&quot;pageVisible:state&quot;:&quot;visible&quot;,&quot;pageVisible:value&quot;:true,&quot;event:initial&quot;:false,&quot;metric:fmp&quot;:7347,&quot;metric:tti&quot;:7347,&quot;metric:fmp:histogramBuckets&quot;:&quot;2000_2500_3000_3500_4000_4500_5000&quot;,&quot;metric:tti:histogramBuckets&quot;:&quot;2000_2500_3000_3500_4000_4500_5000&quot;,&quot;metric:fmp:slo&quot;:false,&quot;metric:fmp:slo:threshold&quot;:4100,&quot;metric:tti:slo&quot;:false,&quot;metric:tti:slo:threshold&quot;:4100,&quot;timings:bundleEval&quot;:{&quot;SpaceOverviewRouteComponent(0)&quot;:{&quot;startTime&quot;:181,&quot;duration&quot;:1151},&quot;SpaceOverviewLoader(0)&quot;:{&quot;startTime&quot;:1340,&quot;duration&quot;:718},&quot;WatchDialogWrapperLoader(0)&quot;:{&quot;startTime&quot;:2096,&quot;duration&quot;:68},&quot;HighlightActionsLoader(0)&quot;:{&quot;startTime&quot;:2108,&quot;duration&quot;:176},&quot;StickyBanner(0)&quot;:{&quot;startTime&quot;:2101,&quot;duration&quot;:978},&quot;ContentToolsWrapper(0)&quot;:{&quot;startTime&quot;:2096,&quot;duration&quot;:1030},&quot;SpaceNavigationLoader(1)&quot;:{&quot;startTime&quot;:3537,&quot;duration&quot;:1250},&quot;ShareButtonLoader(1)&quot;:{&quot;startTime&quot;:3553,&quot;duration&quot;:1293},&quot;RendererContentState(1)&quot;:{&quot;startTime&quot;:3544,&quot;duration&quot;:1327},&quot;InlineJiraTasksLoader(1)&quot;:{&quot;startTime&quot;:3573,&quot;duration&quot;:1387},&quot;LiveSearchLoader(0)&quot;:{&quot;startTime&quot;:5335,&quot;duration&quot;:1836},&quot;TableOfContentsLoader(0)&quot;:{&quot;startTime&quot;:5327,&quot;duration&quot;:1931}}}},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;performance measured&quot;,&quot;messageId&quot;:&quot;ajs-27557fc5-d93d-452f-ba13-afe54bcd066a&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:02.756Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:00.113Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;performance&quot;,&quot;actionSubject&quot;:&quot;performance&quot;,&quot;action&quot;:&quot;measured&quot;,&quot;attributes&quot;:{&quot;task&quot;:&quot;confluence.fe.page-segment-load.more-actions-dropdown&quot;,&quot;properties&quot;:{&quot;event:key&quot;:&quot;confluence.fe.page-segment-load.more-actions-dropdown&quot;,&quot;event:type&quot;:&quot;page-segment-load&quot;,&quot;event:product&quot;:&quot;confluence&quot;,&quot;event:route&quot;:&quot;SPACE_OVERVIEW&quot;,&quot;event:id&quot;:&quot;more-actions-dropdown&quot;,&quot;event:localHour&quot;:11,&quot;event:localDayOfWeek&quot;:1,&quot;event:region&quot;:&quot;confluence-prod-ap-8-3.prod.atl-paas.net&quot;,&quot;app:framework:name&quot;:&quot;react&quot;,&quot;app:framework:version&quot;:&quot;16.14.0&quot;,&quot;app:web:version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;bm:version&quot;:3,&quot;telemetry:browser:name&quot;:&quot;Chrome&quot;,&quot;telemetry:browser:version&quot;:&quot;105.0.0.0&quot;,&quot;telemetry:cpus&quot;:3,&quot;telemetry:memory&quot;:8,&quot;telemetry:network:effectiveType&quot;:&quot;4g&quot;,&quot;telemetry:network:rtt&quot;:200,&quot;telemetry:network:downlink&quot;:4.35,&quot;custom:pageLoadInfo&quot;:{&quot;uuid&quot;:&quot;SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;isInitial&quot;:false,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:7347.5},&quot;featureFlags&quot;:{&quot;confluence.frontend.pollinator.synthetic.check.tenants&quot;:false,&quot;confluence.frontend.delay.comment.button&quot;:true,&quot;confluence.frontend.delay.page.comments.render&quot;:&quot;delay-render&quot;,&quot;confluence.frontend.enable.external.collab&quot;:false,&quot;confluence.frontend.eop.recommendations.rollout&quot;:&quot;on&quot;,&quot;confluence.frontend.focused.inline.comment.performance&quot;:&quot;variation&quot;,&quot;confluence.frontend.live-search&quot;:true,&quot;confluence.frontend.presentation.mode&quot;:true,&quot;confluence.ssr.fabric.macros&quot;:null,&quot;confluence.ssr.page-tree&quot;:null,&quot;confluence.ssr.page-tree.best.effort&quot;:null,&quot;confluence.ssr.read-time&quot;:null,&quot;confluence.ssr.page-statuses&quot;:null,&quot;confluence.ssr.home.feed.best-effort&quot;:null,&quot;confluence.ssr.shortcuts&quot;:null,&quot;confluence.ssr.shortcuts.link-filter&quot;:null,&quot;confluence.ssr.smartlinks&quot;:null,&quot;confluence.ssr.page-share-and-perms-button&quot;:null,&quot;confluence.frontend.page-share-and-permissions&quot;:false,&quot;confluence.frontend.economy-growth.discover-apps-in-sidebar.experiment&quot;:false,&quot;confluence.frontend.top.level.body.content.query&quot;:false,&quot;confluence.ssr.integrating.public.links.to.nsd&quot;:null,&quot;confluence.frontend.integrating.public.links.to.nsd&quot;:false,&quot;confluence.frontend.fabric.editor.macro.adf.frontend.render&quot;:false,&quot;confluence.frontend.bandana.client.short.socket.timeout&quot;:&quot;50.0&quot;},&quot;hostname&quot;:&quot;thinktimetechnology.atlassian.net&quot;,&quot;confluence:cloudId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;confluence:environment&quot;:&quot;PRODUCTION&quot;,&quot;confluence:shard&quot;:&quot;confluence-prod-ap-8-3.prod.atl-paas.net&quot;,&quot;confluence:ssr&quot;:&quot;false&quot;,&quot;confluence:uniqueIdentifier&quot;:&quot;undefined&quot;,&quot;confluence:initial&quot;:false,&quot;confluence:criticalAssets&quot;:{&quot;cachedRate&quot;:0.5952380952380952,&quot;count&quot;:168,&quot;size&quot;:6214831,&quot;cachedSize&quot;:12473,&quot;nonCachedSize&quot;:6202358,&quot;sizeBasedCachedRate&quot;:0.002006973319145766},&quot;metric:fmp&quot;:7347,&quot;metric:tti&quot;:7347,&quot;metric:fmp:histogramBuckets&quot;:&quot;500_1000_1500_2000_2500_3000&quot;,&quot;metric:tti:histogramBuckets&quot;:&quot;1000_1500_2000_2500_3000_4000&quot;,&quot;pageVisible:state&quot;:&quot;visible&quot;,&quot;pageVisible:value&quot;:true,&quot;event:initial&quot;:false,&quot;timings:bundleEval&quot;:{&quot;SpaceOverviewRouteComponent(0)&quot;:{&quot;startTime&quot;:181,&quot;duration&quot;:1151},&quot;SpaceOverviewLoader(0)&quot;:{&quot;startTime&quot;:1340,&quot;duration&quot;:718},&quot;WatchDialogWrapperLoader(0)&quot;:{&quot;startTime&quot;:2096,&quot;duration&quot;:68},&quot;HighlightActionsLoader(0)&quot;:{&quot;startTime&quot;:2108,&quot;duration&quot;:176},&quot;StickyBanner(0)&quot;:{&quot;startTime&quot;:2101,&quot;duration&quot;:978},&quot;ContentToolsWrapper(0)&quot;:{&quot;startTime&quot;:2096,&quot;duration&quot;:1030},&quot;SpaceNavigationLoader(1)&quot;:{&quot;startTime&quot;:3537,&quot;duration&quot;:1250},&quot;ShareButtonLoader(1)&quot;:{&quot;startTime&quot;:3553,&quot;duration&quot;:1293},&quot;RendererContentState(1)&quot;:{&quot;startTime&quot;:3544,&quot;duration&quot;:1327},&quot;InlineJiraTasksLoader(1)&quot;:{&quot;startTime&quot;:3573,&quot;duration&quot;:1387},&quot;LiveSearchLoader(0)&quot;:{&quot;startTime&quot;:5335,&quot;duration&quot;:1836},&quot;TableOfContentsLoader(0)&quot;:{&quot;startTime&quot;:5327,&quot;duration&quot;:1931}}}},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;performance measured&quot;,&quot;messageId&quot;:&quot;ajs-cba4f868-1159-4ec3-8734-f79cc6ed959d&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:02.756Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:00.245Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;unknown&quot;,&quot;actionSubject&quot;:&quot;smartLink&quot;,&quot;action&quot;:&quot;resolved&quot;,&quot;attributes&quot;:{&quot;packageName&quot;:&quot;@atlaskit/smart-card&quot;,&quot;packageVersion&quot;:&quot;21.3.0&quot;,&quot;id&quot;:&quot;185dcc3f-bbef-4691-995f-6d1874626230&quot;,&quot;componentName&quot;:&quot;smart-cards&quot;,&quot;definitionId&quot;:&quot;confluence-object-provider&quot;,&quot;extensionKey&quot;:&quot;confluence-object-provider&quot;,&quot;resourceType&quot;:&quot;page&quot;,&quot;duration&quot;:1710.7000000001863,&quot;display&quot;:&quot;inline&quot;,&quot;objectId&quot;:&quot;33329&quot;,&quot;instance&quot;:&quot;Production&quot;,&quot;packageHierarchy&quot;:&quot;@atlaskit/smart-card@21.3.0&quot;,&quot;listenerVersion&quot;:&quot;8.3.0&quot;},&quot;tags&quot;:[&quot;media&quot;],&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;smartLink resolved&quot;,&quot;messageId&quot;:&quot;ajs-b596d241-c697-480c-805d-eeebeb0079a3&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:02.756Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:00.246Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;unknown&quot;,&quot;actionSubject&quot;:&quot;smartLink&quot;,&quot;action&quot;:&quot;resolved&quot;,&quot;attributes&quot;:{&quot;packageName&quot;:&quot;@atlaskit/smart-card&quot;,&quot;packageVersion&quot;:&quot;21.3.0&quot;,&quot;id&quot;:&quot;b1e5009a-7f56-4f3b-9bb8-c2bd2010f740&quot;,&quot;componentName&quot;:&quot;smart-cards&quot;,&quot;definitionId&quot;:&quot;confluence-object-provider&quot;,&quot;extensionKey&quot;:&quot;confluence-object-provider&quot;,&quot;resourceType&quot;:&quot;page&quot;,&quot;duration&quot;:1792.3999999994412,&quot;display&quot;:&quot;inline&quot;,&quot;objectId&quot;:&quot;33329&quot;,&quot;instance&quot;:&quot;Production&quot;,&quot;packageHierarchy&quot;:&quot;@atlaskit/smart-card@21.3.0&quot;,&quot;listenerVersion&quot;:&quot;8.3.0&quot;},&quot;tags&quot;:[&quot;media&quot;],&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;smartLink resolved&quot;,&quot;messageId&quot;:&quot;ajs-d971ac7f-aa33-43b2-9832-89ece16ffd52&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:02.756Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:00.245Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;unknown&quot;,&quot;actionSubject&quot;:&quot;smartLink&quot;,&quot;action&quot;:&quot;renderSuccess&quot;,&quot;attributes&quot;:{&quot;packageName&quot;:&quot;@atlaskit/smart-card&quot;,&quot;packageVersion&quot;:&quot;21.3.0&quot;,&quot;componentName&quot;:&quot;smart-cards&quot;,&quot;status&quot;:&quot;resolved&quot;,&quot;definitionId&quot;:&quot;confluence-object-provider&quot;,&quot;extensionKey&quot;:&quot;confluence-object-provider&quot;,&quot;display&quot;:&quot;inline&quot;,&quot;objectId&quot;:&quot;33329&quot;,&quot;instance&quot;:&quot;Production&quot;,&quot;packageHierarchy&quot;:&quot;@atlaskit/smart-card@21.3.0&quot;,&quot;listenerVersion&quot;:&quot;8.3.0&quot;},&quot;tags&quot;:[&quot;media&quot;],&quot;eventType&quot;:&quot;ui&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;smartLink renderSuccess&quot;,&quot;messageId&quot;:&quot;ajs-afdf2334-24cf-4a86-aa71-48750ce62e8f&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:02.756Z&quot;}],&quot;sentAt&quot;:&quot;2022-09-26T05:59:02.756Z&quot;,&quot;metadata&quot;:{&quot;resilienceMechanism&quot;:&quot;indexeddb&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/gasv3/api/v1/batch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-531" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;batch&quot;:[{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:00.246Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;unknown&quot;,&quot;actionSubject&quot;:&quot;smartLink&quot;,&quot;action&quot;:&quot;renderSuccess&quot;,&quot;attributes&quot;:{&quot;packageName&quot;:&quot;@atlaskit/smart-card&quot;,&quot;packageVersion&quot;:&quot;21.3.0&quot;,&quot;componentName&quot;:&quot;smart-cards&quot;,&quot;status&quot;:&quot;resolved&quot;,&quot;definitionId&quot;:&quot;confluence-object-provider&quot;,&quot;extensionKey&quot;:&quot;confluence-object-provider&quot;,&quot;display&quot;:&quot;inline&quot;,&quot;objectId&quot;:&quot;33329&quot;,&quot;instance&quot;:&quot;Production&quot;,&quot;packageHierarchy&quot;:&quot;@atlaskit/smart-card@21.3.0&quot;,&quot;listenerVersion&quot;:&quot;8.3.0&quot;},&quot;tags&quot;:[&quot;media&quot;],&quot;eventType&quot;:&quot;ui&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;smartLink renderSuccess&quot;,&quot;messageId&quot;:&quot;ajs-29a55d26-8823-4bb6-a8f8-5c714b258430&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:03.096Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:00.247Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;measured&quot;,&quot;actionSubject&quot;:&quot;experience&quot;,&quot;action&quot;:&quot;measured&quot;,&quot;attributes&quot;:{&quot;properties&quot;:{&quot;event:source&quot;:{&quot;name&quot;:&quot;ufo/web&quot;,&quot;version&quot;:&quot;unknown&quot;},&quot;event:schema&quot;:&quot;0.1.7&quot;,&quot;event:product&quot;:&quot;confluence&quot;,&quot;event:region&quot;:&quot;confluence-prod-ap-8-3.prod.atl-paas.net&quot;,&quot;event:hostname&quot;:&quot;thinktimetechnology.atlassian.net&quot;,&quot;event:route&quot;:&quot;&quot;,&quot;event:browser:name&quot;:&quot;Chrome&quot;,&quot;event:browser:version&quot;:&quot;105.0.0.0&quot;,&quot;event:cpus&quot;:3,&quot;event:memory&quot;:8,&quot;event:network:effectiveType&quot;:&quot;4g&quot;,&quot;event:network:rtt&quot;:200,&quot;event:network:downlink&quot;:4.35,&quot;app:framework:name&quot;:&quot;react&quot;,&quot;app:framework:version&quot;:&quot;16.14.0&quot;,&quot;app:web:version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;experience:name&quot;:&quot;smart-link-rendered&quot;,&quot;experience:key&quot;:&quot;platform.fe.load.smart-links.smart-link-rendered&quot;,&quot;experience:status&quot;:&quot;SUCCEEDED&quot;,&quot;experience:duration&quot;:1718,&quot;experience:startTime&quot;:33118,&quot;experience:spanId&quot;:&quot;68013579-44b2-4f33-9a50-de9330fc5825&quot;,&quot;custom:extensionKey&quot;:&quot;confluence-object-provider&quot;,&quot;custom:display&quot;:&quot;inline&quot;,&quot;experience:pageVisible&quot;:&quot;visible&quot;},&quot;performance&quot;:{&quot;event:key&quot;:&quot;platform.fe.page-segment-load.smart-links.smart-link-rendered&quot;,&quot;event:type&quot;:&quot;page-segment-load&quot;,&quot;metric:tti&quot;:1718,&quot;metric:fmp&quot;:1718,&quot;payloadTime&quot;:0.5},&quot;task&quot;:&quot;smart-link-rendered&quot;},&quot;tags&quot;:[&quot;observability&quot;],&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;experience measured&quot;,&quot;messageId&quot;:&quot;ajs-b9e272b3-d2a6-4339-bee0-2a4f23b1ef81&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:03.096Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:00.251Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;measured&quot;,&quot;actionSubject&quot;:&quot;experience&quot;,&quot;action&quot;:&quot;measured&quot;,&quot;attributes&quot;:{&quot;properties&quot;:{&quot;event:source&quot;:{&quot;name&quot;:&quot;ufo/web&quot;,&quot;version&quot;:&quot;unknown&quot;},&quot;event:schema&quot;:&quot;0.1.7&quot;,&quot;event:product&quot;:&quot;confluence&quot;,&quot;event:region&quot;:&quot;confluence-prod-ap-8-3.prod.atl-paas.net&quot;,&quot;event:hostname&quot;:&quot;thinktimetechnology.atlassian.net&quot;,&quot;event:route&quot;:&quot;&quot;,&quot;event:browser:name&quot;:&quot;Chrome&quot;,&quot;event:browser:version&quot;:&quot;105.0.0.0&quot;,&quot;event:cpus&quot;:3,&quot;event:memory&quot;:8,&quot;event:network:effectiveType&quot;:&quot;4g&quot;,&quot;event:network:rtt&quot;:200,&quot;event:network:downlink&quot;:4.35,&quot;app:framework:name&quot;:&quot;react&quot;,&quot;app:framework:version&quot;:&quot;16.14.0&quot;,&quot;app:web:version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;experience:name&quot;:&quot;smart-link-rendered&quot;,&quot;experience:key&quot;:&quot;platform.fe.load.smart-links.smart-link-rendered&quot;,&quot;experience:status&quot;:&quot;SUCCEEDED&quot;,&quot;experience:duration&quot;:1795,&quot;experience:startTime&quot;:33122,&quot;experience:spanId&quot;:&quot;d5f0ecd1-47ec-47c2-95d1-76f4fbb0a33a&quot;,&quot;custom:extensionKey&quot;:&quot;confluence-object-provider&quot;,&quot;custom:display&quot;:&quot;inline&quot;,&quot;experience:pageVisible&quot;:&quot;visible&quot;},&quot;performance&quot;:{&quot;event:key&quot;:&quot;platform.fe.page-segment-load.smart-links.smart-link-rendered&quot;,&quot;event:type&quot;:&quot;page-segment-load&quot;,&quot;metric:tti&quot;:1795,&quot;metric:fmp&quot;:1795,&quot;payloadTime&quot;:0.20000000018626451},&quot;task&quot;:&quot;smart-link-rendered&quot;},&quot;tags&quot;:[&quot;observability&quot;],&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;experience measured&quot;,&quot;messageId&quot;:&quot;ajs-c6706c04-059b-4bd4-b70f-d5f7de3c3d2d&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:03.096Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:00.272Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;unknown&quot;,&quot;actionSubject&quot;:&quot;smartLink&quot;,&quot;action&quot;:&quot;resolved&quot;,&quot;attributes&quot;:{&quot;packageName&quot;:&quot;@atlaskit/smart-card&quot;,&quot;packageVersion&quot;:&quot;21.3.0&quot;,&quot;id&quot;:&quot;4d538131-25a0-4e45-801e-8cafc6f681dc&quot;,&quot;componentName&quot;:&quot;smart-cards&quot;,&quot;definitionId&quot;:&quot;confluence-object-provider&quot;,&quot;extensionKey&quot;:&quot;confluence-object-provider&quot;,&quot;resourceType&quot;:&quot;page&quot;,&quot;duration&quot;:1814.5,&quot;display&quot;:&quot;inline&quot;,&quot;objectId&quot;:&quot;33329&quot;,&quot;instance&quot;:&quot;Production&quot;,&quot;packageHierarchy&quot;:&quot;@atlaskit/smart-card@21.3.0&quot;,&quot;listenerVersion&quot;:&quot;8.3.0&quot;},&quot;tags&quot;:[&quot;media&quot;],&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;smartLink resolved&quot;,&quot;messageId&quot;:&quot;ajs-38a1d8ce-47f0-4d61-939c-6b0edb4aa8ae&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:03.096Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:00.273Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;measured&quot;,&quot;actionSubject&quot;:&quot;experience&quot;,&quot;action&quot;:&quot;measured&quot;,&quot;attributes&quot;:{&quot;properties&quot;:{&quot;event:source&quot;:{&quot;name&quot;:&quot;ufo/web&quot;,&quot;version&quot;:&quot;unknown&quot;},&quot;event:schema&quot;:&quot;0.1.7&quot;,&quot;event:product&quot;:&quot;confluence&quot;,&quot;event:region&quot;:&quot;confluence-prod-ap-8-3.prod.atl-paas.net&quot;,&quot;event:hostname&quot;:&quot;thinktimetechnology.atlassian.net&quot;,&quot;event:route&quot;:&quot;&quot;,&quot;event:browser:name&quot;:&quot;Chrome&quot;,&quot;event:browser:version&quot;:&quot;105.0.0.0&quot;,&quot;event:cpus&quot;:3,&quot;event:memory&quot;:8,&quot;event:network:effectiveType&quot;:&quot;4g&quot;,&quot;event:network:rtt&quot;:200,&quot;event:network:downlink&quot;:4.35,&quot;app:framework:name&quot;:&quot;react&quot;,&quot;app:framework:version&quot;:&quot;16.14.0&quot;,&quot;app:web:version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;experience:name&quot;:&quot;smart-link-rendered&quot;,&quot;experience:key&quot;:&quot;platform.fe.load.smart-links.smart-link-rendered&quot;,&quot;experience:status&quot;:&quot;SUCCEEDED&quot;,&quot;experience:duration&quot;:1825,&quot;experience:startTime&quot;:33124,&quot;experience:spanId&quot;:&quot;0b89f23e-f7c5-4304-a9d3-3bdb4b99a075&quot;,&quot;custom:extensionKey&quot;:&quot;confluence-object-provider&quot;,&quot;custom:display&quot;:&quot;inline&quot;,&quot;experience:pageVisible&quot;:&quot;visible&quot;},&quot;performance&quot;:{&quot;event:key&quot;:&quot;platform.fe.page-segment-load.smart-links.smart-link-rendered&quot;,&quot;event:type&quot;:&quot;page-segment-load&quot;,&quot;metric:tti&quot;:1825,&quot;metric:fmp&quot;:1825,&quot;payloadTime&quot;:0.2999999998137355},&quot;task&quot;:&quot;smart-link-rendered&quot;},&quot;tags&quot;:[&quot;observability&quot;],&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;experience measured&quot;,&quot;messageId&quot;:&quot;ajs-af16d3db-2e52-438e-9c56-84e2e81d008a&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:03.096Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:00.272Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;unknown&quot;,&quot;actionSubject&quot;:&quot;smartLink&quot;,&quot;action&quot;:&quot;renderSuccess&quot;,&quot;attributes&quot;:{&quot;packageName&quot;:&quot;@atlaskit/smart-card&quot;,&quot;packageVersion&quot;:&quot;21.3.0&quot;,&quot;componentName&quot;:&quot;smart-cards&quot;,&quot;status&quot;:&quot;resolved&quot;,&quot;definitionId&quot;:&quot;confluence-object-provider&quot;,&quot;extensionKey&quot;:&quot;confluence-object-provider&quot;,&quot;display&quot;:&quot;inline&quot;,&quot;objectId&quot;:&quot;33329&quot;,&quot;instance&quot;:&quot;Production&quot;,&quot;packageHierarchy&quot;:&quot;@atlaskit/smart-card@21.3.0&quot;,&quot;listenerVersion&quot;:&quot;8.3.0&quot;},&quot;tags&quot;:[&quot;media&quot;],&quot;eventType&quot;:&quot;ui&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;smartLink renderSuccess&quot;,&quot;messageId&quot;:&quot;ajs-1e87a04e-3e27-4161-9097-1146ec1f41c7&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:03.096Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:00.467Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;legacyMacroRenderer&quot;,&quot;actionSubject&quot;:&quot;macro&quot;,&quot;action&quot;:&quot;renderer&quot;,&quot;attributes&quot;:{&quot;mode&quot;:&quot;renderer&quot;,&quot;extensionKey&quot;:&quot;recently-updated&quot;,&quot;macroId&quot;:&quot;2393cf67fe2bc2a46eb227a9358c5c89&quot;,&quot;contentId&quot;:&quot;33329&quot;,&quot;type&quot;:&quot;extension&quot;},&quot;eventType&quot;:&quot;track&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;macro renderer&quot;,&quot;messageId&quot;:&quot;ajs-19adb2d3-2be4-48e8-a9a6-be2cb633d194&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:03.096Z&quot;}],&quot;sentAt&quot;:&quot;2022-09-26T05:59:03.096Z&quot;,&quot;metadata&quot;:{&quot;resilienceMechanism&quot;:&quot;indexeddb&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/gasv3/api/v1/batch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Project_New_Born-530" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;type&quot;:&quot;metric&quot;,&quot;meta&quot;:{&quot;globalTags&quot;:[&quot;page:SPACE_OVERVIEW&quot;,&quot;cloudId:f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;shard:confluence-prod-ap-8-3.prod.atl-paas.net&quot;,&quot;product:confluence&quot;,&quot;version:CLASSIC-master-12091&quot;,&quot;track:prod&quot;]},&quot;data&quot;:[{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:navigation/app-nav-container-navigation&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskStart&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:false&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:226.1000000005588&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:52.969Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:navigation/app-nav-global-navigation&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskStart&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:false&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:226.20000000018626&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:52.970Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:onboarding-editor/recent-draft-spotlight&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskAbort&quot;,&quot;isActiveTab:true&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:52.974Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:onboarding-editor/recent-draft-spotlight&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskStart&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:false&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:230.40000000037253&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:52.974Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:navigation/app-nav-global-navigation&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskSuccess&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:false&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:253.90000000037253&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:52.997Z&quot;},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;experience-tracker:navigation/app-nav-global-navigation.performance&quot;,&quot;value&quot;:28,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskSuccess&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:false&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:253.90000000037253&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:52.997Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:extension_point_home_header&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskStart&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:false&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:286&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:53.029Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:extension_point_home_footer&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskStart&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:false&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:286.20000000018626&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:53.029Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:onboarding-quickstart&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskStart&quot;,&quot;isActiveTab:true&quot;,&quot;quickstartType:nthUserQuickstartV2&quot;,&quot;uuid:SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:false&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:419.5&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:53.163Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:onboarding-quickstart&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskSuccess&quot;,&quot;isActiveTab:true&quot;,&quot;quickstartType:nthUserQuickstartV2&quot;,&quot;uuid:SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:false&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:419.6000000005588&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:53.163Z&quot;},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;experience-tracker:onboarding-quickstart.performance&quot;,&quot;value&quot;:0,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskSuccess&quot;,&quot;isActiveTab:true&quot;,&quot;quickstartType:nthUserQuickstartV2&quot;,&quot;uuid:SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:false&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:419.6000000005588&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:53.163Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:extension_point_home_header&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskSuccess&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:false&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:2000.1000000005588&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:54.743Z&quot;},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;experience-tracker:extension_point_home_header.performance&quot;,&quot;value&quot;:1714,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskSuccess&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:false&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:2000.1000000005588&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:54.743Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:extension_point_home_footer&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskSuccess&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:false&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:2029.1000000005588&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:54.772Z&quot;},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;experience-tracker:extension_point_home_footer.performance&quot;,&quot;value&quot;:1743,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskSuccess&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:false&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:2029.1000000005588&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:54.772Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:extension_point_space_buttons&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskStart&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:false&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:2084.5&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:54.828Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:view-all-macro&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskStart&quot;,&quot;isActiveTab:true&quot;,&quot;mode:renderer&quot;,&quot;uuid:SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:false&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:2113.300000000745&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:54.857Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:extension_point_space_buttons&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskSuccess&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:false&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:2115.5&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:54.859Z&quot;},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;experience-tracker:extension_point_space_buttons.performance&quot;,&quot;value&quot;:31,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskSuccess&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:false&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:2115.5&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:54.859Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:header-items/group-load&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskStart&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:false&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:2115.800000000745&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:54.859Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:view-content&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskSuccess&quot;,&quot;isActiveTab:true&quot;,&quot;contentType:space&quot;,&quot;isFromExternal:false&quot;,&quot;fabric:true&quot;,&quot;uuid:SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:false&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:3044.100000000559&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:55.787Z&quot;},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;experience-tracker:view-content.performance&quot;,&quot;value&quot;:3044,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskSuccess&quot;,&quot;isActiveTab:true&quot;,&quot;contentType:space&quot;,&quot;isFromExternal:false&quot;,&quot;fabric:true&quot;,&quot;uuid:SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:false&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:3044.100000000559&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:55.787Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:space-overview&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskSuccess&quot;,&quot;isActiveTab:true&quot;,&quot;contentType:space&quot;,&quot;isFromExternal:false&quot;,&quot;uuid:SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:false&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:3044.300000000745&quot;,&quot;fabric:true&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:55.788Z&quot;},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;experience-tracker:space-overview.performance&quot;,&quot;value&quot;:3044,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskSuccess&quot;,&quot;isActiveTab:true&quot;,&quot;contentType:space&quot;,&quot;isFromExternal:false&quot;,&quot;uuid:SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:false&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:3044.300000000745&quot;,&quot;fabric:true&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:55.788Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:extension_point_space_buttons&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskStart&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:false&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:3098.300000000745&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:55.842Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:extension_point_space_buttons&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskSuccess&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:false&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:3102.2000000001863&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:55.845Z&quot;},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;experience-tracker:extension_point_space_buttons.performance&quot;,&quot;value&quot;:4,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskSuccess&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:false&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:3102.2000000001863&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:55.845Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:header-items/group-load&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskAbort&quot;,&quot;isActiveTab:true&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:55.846Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:header-items/group-load&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskStart&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:false&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:3102.4000000003725&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:55.846Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:view-page/content-tools&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskStart&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:false&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:3127.9000000003725&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:55.871Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:navigation/app-nav-container-navigation&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskSuccess&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:false&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:5616.100000000559&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:58.359Z&quot;},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;experience-tracker:navigation/app-nav-container-navigation.performance&quot;,&quot;value&quot;:5390,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskSuccess&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:false&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:5616.100000000559&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:58.359Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:space-views/initial&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskStart&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:false&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:5663.700000000186&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:58:58.407Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:view-page/content-tools&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskSuccess&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:false&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:7347.300000000745&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:59:00.091Z&quot;},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;experience-tracker:view-page/content-tools.performance&quot;,&quot;value&quot;:4219,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskSuccess&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:false&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:7347.300000000745&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:59:00.091Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:page-tree&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskStart&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:false&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:7786.5&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:59:00.530Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:header-items/group-load&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskFail&quot;,&quot;isActiveTab:true&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:59:00.874Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:page-tree&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskSuccess&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:false&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:8354.100000000559&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:59:01.097Z&quot;},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;experience-tracker:page-tree.performance&quot;,&quot;value&quot;:568,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskSuccess&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:false&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:8354.100000000559&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:59:01.097Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:space-views/initial&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskSuccess&quot;,&quot;isActiveTab:true&quot;,&quot;spaceViewsSort:TREE&quot;,&quot;uuid:SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:false&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:8383.800000000745&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:59:01.127Z&quot;},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;experience-tracker:space-views/initial.performance&quot;,&quot;value&quot;:2720,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskSuccess&quot;,&quot;isActiveTab:true&quot;,&quot;spaceViewsSort:TREE&quot;,&quot;uuid:SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:false&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:8383.800000000745&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:59:01.127Z&quot;}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/telemetry</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="04_Profile" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_Profile-532" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;batch&quot;:[{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:00.469Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;legacyMacroRenderer&quot;,&quot;actionSubject&quot;:&quot;macro&quot;,&quot;action&quot;:&quot;renderer&quot;,&quot;attributes&quot;:{&quot;mode&quot;:&quot;renderer&quot;,&quot;extensionKey&quot;:&quot;recently-updated&quot;,&quot;macroId&quot;:&quot;2393cf67fe2bc2a46eb227a9358c5c89&quot;,&quot;contentId&quot;:&quot;33329&quot;,&quot;type&quot;:&quot;extension&quot;},&quot;eventType&quot;:&quot;track&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;macro renderer&quot;,&quot;messageId&quot;:&quot;ajs-fbe28b81-62c1-4a55-93c8-03db55b961df&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:03.908Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:00.535Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskStart&quot;,&quot;attributes&quot;:{&quot;uuid&quot;:&quot;SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;isInitial&quot;:false,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:7786.5,&quot;startTime&quot;:35208.5,&quot;task&quot;:&quot;page-tree&quot;,&quot;taskId&quot;:&quot;PN&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskStart&quot;,&quot;messageId&quot;:&quot;ajs-1c4980cb-2f39-4efd-b8c6-51d3b542bc77&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:03.908Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:00.874Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskFail&quot;,&quot;attributes&quot;:{&quot;startTime&quot;:30524.400000000373,&quot;duration&quot;:5028,&quot;activeDuration&quot;:5028,&quot;adjustedDuration&quot;:5028,&quot;task&quot;:&quot;header-items/group-load&quot;,&quot;taskId&quot;:&quot;3a312476-8cff-4aa0-9fc5-8f910b7fe25b&quot;,&quot;errorName&quot;:&quot;Error&quot;,&quot;errorMessage&quot;:&quot;Grouped Page Buttons loading exceeded 5000 milliseconds&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskFail&quot;,&quot;messageId&quot;:&quot;ajs-0141fda1-4007-41fd-a732-3bb1eb9b51ba&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:03.908Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:01.101Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskSuccess&quot;,&quot;attributes&quot;:{&quot;uuid&quot;:&quot;SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;isInitial&quot;:false,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:8354.100000000559,&quot;startTime&quot;:35208.5,&quot;duration&quot;:568,&quot;activeDuration&quot;:568,&quot;adjustedDuration&quot;:568,&quot;task&quot;:&quot;page-tree&quot;,&quot;taskId&quot;:&quot;PN&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskSuccess&quot;,&quot;messageId&quot;:&quot;ajs-1efdfc26-8fbc-4114-a2fb-0019b2b22972&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:03.908Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:01.127Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskSuccess&quot;,&quot;attributes&quot;:{&quot;spaceViewsSort&quot;:&quot;TREE&quot;,&quot;uuid&quot;:&quot;SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;isInitial&quot;:false,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:8383.800000000745,&quot;startTime&quot;:33085.700000000186,&quot;duration&quot;:2720,&quot;activeDuration&quot;:2720,&quot;adjustedDuration&quot;:2720,&quot;task&quot;:&quot;space-views/initial&quot;,&quot;taskId&quot;:&quot;14563e38-64b0-4d64-9efc-578624d5afe3&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskSuccess&quot;,&quot;messageId&quot;:&quot;ajs-dce7a157-e3ec-4693-a405-fb28464fddc5&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:03.908Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:01.136Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;performance&quot;,&quot;actionSubject&quot;:&quot;performance&quot;,&quot;action&quot;:&quot;measured&quot;,&quot;attributes&quot;:{&quot;task&quot;:&quot;confluence.fe.page-segment-load.page-tree&quot;,&quot;properties&quot;:{&quot;event:key&quot;:&quot;confluence.fe.page-segment-load.page-tree&quot;,&quot;event:type&quot;:&quot;page-segment-load&quot;,&quot;event:product&quot;:&quot;confluence&quot;,&quot;event:route&quot;:&quot;SPACE_OVERVIEW&quot;,&quot;event:id&quot;:&quot;page-tree&quot;,&quot;event:localHour&quot;:11,&quot;event:localDayOfWeek&quot;:1,&quot;event:region&quot;:&quot;confluence-prod-ap-8-3.prod.atl-paas.net&quot;,&quot;app:framework:name&quot;:&quot;react&quot;,&quot;app:framework:version&quot;:&quot;16.14.0&quot;,&quot;app:web:version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;bm:version&quot;:3,&quot;telemetry:browser:name&quot;:&quot;Chrome&quot;,&quot;telemetry:browser:version&quot;:&quot;105.0.0.0&quot;,&quot;telemetry:cpus&quot;:3,&quot;telemetry:memory&quot;:8,&quot;telemetry:network:effectiveType&quot;:&quot;4g&quot;,&quot;telemetry:network:rtt&quot;:200,&quot;telemetry:network:downlink&quot;:5.75,&quot;custom:initialPageTreeSize&quot;:6,&quot;custom:skipTreeRenderSSR&quot;:false,&quot;custom:pageLoadInfo&quot;:{&quot;uuid&quot;:&quot;SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;isInitial&quot;:false,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:8383.600000000559},&quot;featureFlags&quot;:{&quot;confluence.frontend.pollinator.synthetic.check.tenants&quot;:false,&quot;confluence.frontend.delay.comment.button&quot;:true,&quot;confluence.frontend.delay.page.comments.render&quot;:&quot;delay-render&quot;,&quot;confluence.frontend.enable.external.collab&quot;:false,&quot;confluence.frontend.eop.recommendations.rollout&quot;:&quot;on&quot;,&quot;confluence.frontend.focused.inline.comment.performance&quot;:&quot;variation&quot;,&quot;confluence.frontend.live-search&quot;:true,&quot;confluence.frontend.presentation.mode&quot;:true,&quot;confluence.ssr.fabric.macros&quot;:null,&quot;confluence.ssr.page-tree&quot;:null,&quot;confluence.ssr.page-tree.best.effort&quot;:null,&quot;confluence.ssr.read-time&quot;:null,&quot;confluence.ssr.page-statuses&quot;:null,&quot;confluence.ssr.home.feed.best-effort&quot;:null,&quot;confluence.ssr.shortcuts&quot;:null,&quot;confluence.ssr.shortcuts.link-filter&quot;:null,&quot;confluence.ssr.smartlinks&quot;:null,&quot;confluence.ssr.page-share-and-perms-button&quot;:null,&quot;confluence.frontend.page-share-and-permissions&quot;:false,&quot;confluence.frontend.economy-growth.discover-apps-in-sidebar.experiment&quot;:false,&quot;confluence.frontend.top.level.body.content.query&quot;:false,&quot;confluence.ssr.integrating.public.links.to.nsd&quot;:null,&quot;confluence.frontend.integrating.public.links.to.nsd&quot;:false,&quot;confluence.frontend.fabric.editor.macro.adf.frontend.render&quot;:false,&quot;confluence.frontend.bandana.client.short.socket.timeout&quot;:&quot;50.0&quot;},&quot;hostname&quot;:&quot;thinktimetechnology.atlassian.net&quot;,&quot;confluence:cloudId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;confluence:environment&quot;:&quot;PRODUCTION&quot;,&quot;confluence:shard&quot;:&quot;confluence-prod-ap-8-3.prod.atl-paas.net&quot;,&quot;confluence:ssr&quot;:&quot;false&quot;,&quot;confluence:uniqueIdentifier&quot;:&quot;undefined&quot;,&quot;confluence:initial&quot;:false,&quot;confluence:criticalAssets&quot;:{&quot;cachedRate&quot;:0.5952380952380952,&quot;count&quot;:168,&quot;size&quot;:6214831,&quot;cachedSize&quot;:12473,&quot;nonCachedSize&quot;:6202358,&quot;sizeBasedCachedRate&quot;:0.002006973319145766},&quot;timings:app&quot;:{&quot;tti&quot;:{&quot;startTime&quot;:0,&quot;duration&quot;:8383}},&quot;metric:fmp&quot;:8383,&quot;metric:tti&quot;:8383,&quot;metric:fmp:histogramBuckets&quot;:&quot;500_1000_1500_2000_2500_3000&quot;,&quot;metric:tti:histogramBuckets&quot;:&quot;1000_1500_2000_2500_3000_4000&quot;,&quot;pageVisible:state&quot;:&quot;visible&quot;,&quot;pageVisible:value&quot;:true,&quot;event:initial&quot;:false,&quot;timings:bundleEval&quot;:{&quot;SpaceOverviewRouteComponent(0)&quot;:{&quot;startTime&quot;:181,&quot;duration&quot;:1151},&quot;SpaceOverviewLoader(0)&quot;:{&quot;startTime&quot;:1340,&quot;duration&quot;:718},&quot;WatchDialogWrapperLoader(0)&quot;:{&quot;startTime&quot;:2096,&quot;duration&quot;:68},&quot;HighlightActionsLoader(0)&quot;:{&quot;startTime&quot;:2108,&quot;duration&quot;:176},&quot;StickyBanner(0)&quot;:{&quot;startTime&quot;:2101,&quot;duration&quot;:978},&quot;ContentToolsWrapper(0)&quot;:{&quot;startTime&quot;:2096,&quot;duration&quot;:1030},&quot;SpaceNavigationLoader(1)&quot;:{&quot;startTime&quot;:3537,&quot;duration&quot;:1250},&quot;ShareButtonLoader(1)&quot;:{&quot;startTime&quot;:3553,&quot;duration&quot;:1293},&quot;RendererContentState(1)&quot;:{&quot;startTime&quot;:3544,&quot;duration&quot;:1327},&quot;InlineJiraTasksLoader(1)&quot;:{&quot;startTime&quot;:3573,&quot;duration&quot;:1387},&quot;LiveSearchLoader(0)&quot;:{&quot;startTime&quot;:5335,&quot;duration&quot;:1836},&quot;TableOfContentsLoader(0)&quot;:{&quot;startTime&quot;:5327,&quot;duration&quot;:1931},&quot;SpaceViewsMenuLoader(1)&quot;:{&quot;startTime&quot;:7269,&quot;duration&quot;:277},&quot;SpaceSettingsSidebarLinks(1)&quot;:{&quot;startTime&quot;:7269,&quot;duration&quot;:283},&quot;PageTreeLoader(1)&quot;:{&quot;startTime&quot;:7270,&quot;duration&quot;:514}}}},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;performance measured&quot;,&quot;messageId&quot;:&quot;ajs-b653b1e8-f216-44a2-ab6e-e55f7baf61ad&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:03.908Z&quot;}],&quot;sentAt&quot;:&quot;2022-09-26T05:59:03.908Z&quot;,&quot;metadata&quot;:{&quot;resilienceMechanism&quot;:&quot;indexeddb&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/gasv3/api/v1/batch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="04_Profile-535" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument" enabled="true">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;WebItemLocationQuery&quot;,&quot;variables&quot;:{&quot;location&quot;:&quot;system.user&quot;,&quot;locations&quot;:[],&quot;contentId&quot;:null,&quot;spaceKey&quot;:null,&quot;version&quot;:null},&quot;query&quot;:&quot;query WebItemLocationQuery($location: String, $locations: [String], $contentId: ID, $spaceKey: String, $version: Int) {\n  webItemSections(location: $location, locations: $locations, contentId: $contentId, key: $spaceKey, version: $version) {\n    id\n    label\n    cacheKey\n    styleClass\n    items {\n      accessKey\n      completeKey\n      hasCondition\n      id\n      icon {\n        path\n        __typename\n      }\n      params {\n        key\n        value\n        __typename\n      }\n      label\n      moduleKey\n      section\n      styleClass\n      tooltip\n      url\n      urlWithoutContextPath\n      weight\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cgraphql?q=WebItemLocationQuery:system.user</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="GraphQLHTTPSampler.operationName">WebItemLocationQuery</stringProp>
            <stringProp name="GraphQLHTTPSampler.query">query WebItemLocationQuery($location: String, $locations: [String], $contentId: ID, $spaceKey: String, $version: Int) {
  webItemSections(location: $location, locations: $locations, contentId: $contentId, key: $spaceKey, version: $version) {
    id
    label
    cacheKey
    styleClass
    items {
      accessKey
      completeKey
      hasCondition
      id
      icon {
        path
        __typename
      }
      params {
        key
        value
        __typename
      }
      label
      moduleKey
      section
      styleClass
      tooltip
      url
      urlWithoutContextPath
      weight
      __typename
    }
    __typename
  }
}
</stringProp>
            <stringProp name="GraphQLHTTPSampler.variables">{&quot;location&quot;:&quot;system.user&quot;,&quot;locations&quot;:[],&quot;contentId&quot;:null,&quot;spaceKey&quot;:null,&quot;version&quot;:null}</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/wiki/spaces/PN/overview</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-APOLLO-OPERATION-NAME" elementType="Header">
                  <stringProp name="Header.name">X-APOLLO-OPERATION-NAME</stringProp>
                  <stringProp name="Header.value">WebItemLocationQuery:system.user</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_Profile-536" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;batch&quot;:[{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:05.897Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;containerType&quot;:&quot;space&quot;,&quot;containerId&quot;:&quot;33186&quot;,&quot;source&quot;:&quot;space&quot;,&quot;actionSubject&quot;:&quot;space&quot;,&quot;action&quot;:&quot;dwelled&quot;,&quot;actionSubjectId&quot;:&quot;33186&quot;,&quot;attributes&quot;:{&quot;dwellTime&quot;:5008,&quot;searchReferrer&quot;:null,&quot;finalDwellEvent&quot;:false,&quot;navdexPointType&quot;:&quot;navigationSessionTouch&quot;,&quot;pageType&quot;:&quot;page&quot;,&quot;spaceType&quot;:&quot;global&quot;,&quot;isUserViewingOwnPersonalSpace&quot;:false,&quot;navigationSessionId&quot;:&quot;fc7f8d76-acc7-4d26-a397-f0d7357e3ff2&quot;},&quot;eventType&quot;:&quot;track&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;space dwelled&quot;,&quot;messageId&quot;:&quot;ajs-636623e1-0de7-4a86-bcb8-f52e33d02efe&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:06.417Z&quot;}],&quot;sentAt&quot;:&quot;2022-09-26T05:59:06.417Z&quot;,&quot;metadata&quot;:{&quot;eventCount&quot;:1,&quot;resilienceMechanism&quot;:&quot;indexeddb&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/gasv3/api/v1/batch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_Profile-537" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;batch&quot;:[{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:06.668Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;unknown&quot;,&quot;actionSubject&quot;:&quot;button&quot;,&quot;action&quot;:&quot;clicked&quot;,&quot;attributes&quot;:{&quot;listenerVersion&quot;:&quot;8.3.0&quot;,&quot;packageHierarchy&quot;:&quot;@atlaskit/button@16.3.5&quot;,&quot;packageName&quot;:&quot;@atlaskit/button&quot;,&quot;packageVersion&quot;:&quot;16.3.5&quot;,&quot;componentName&quot;:&quot;button&quot;},&quot;tags&quot;:[&quot;atlaskit&quot;],&quot;eventType&quot;:&quot;ui&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;button clicked&quot;,&quot;messageId&quot;:&quot;ajs-622a9a09-a65d-46b9-829d-b0d15114ce69&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:07.234Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:06.669Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;globalNavigation&quot;,&quot;actionSubject&quot;:&quot;navigationItem&quot;,&quot;action&quot;:&quot;clicked&quot;,&quot;actionSubjectId&quot;:&quot;profile&quot;,&quot;attributes&quot;:{&quot;selectedItemPageContext&quot;:&quot;SPACE_OVERVIEW&quot;,&quot;navigationLayer&quot;:&quot;global&quot;,&quot;navVersion&quot;:&quot;3&quot;,&quot;navdexPointType&quot;:&quot;navigationSessionTouch&quot;,&quot;navigationSessionId&quot;:&quot;fc7f8d76-acc7-4d26-a397-f0d7357e3ff2&quot;},&quot;eventType&quot;:&quot;ui&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;navigationItem clicked&quot;,&quot;messageId&quot;:&quot;ajs-ba2756aa-c3b3-4ffa-8733-7304962101a7&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:07.234Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:06.669Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskStart&quot;,&quot;attributes&quot;:{&quot;uuid&quot;:&quot;SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;isInitial&quot;:false,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:13904.700000000186,&quot;startTime&quot;:41326.700000000186,&quot;timeout&quot;:30000,&quot;task&quot;:&quot;navigation/app-nav-profile-dropdown&quot;,&quot;taskId&quot;:&quot;e851f2a7-7a1c-4a9c-811a-6d117789ff7c&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskStart&quot;,&quot;messageId&quot;:&quot;ajs-09370d85-575a-473e-95f0-f14a8f6c2ca7&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:07.234Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:06.671Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskSuccess&quot;,&quot;attributes&quot;:{&quot;uuid&quot;:&quot;SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;isInitial&quot;:false,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:13913.200000000186,&quot;startTime&quot;:41326.700000000186,&quot;duration&quot;:9,&quot;activeDuration&quot;:9,&quot;adjustedDuration&quot;:9,&quot;task&quot;:&quot;navigation/app-nav-profile-dropdown&quot;,&quot;taskId&quot;:&quot;e851f2a7-7a1c-4a9c-811a-6d117789ff7c&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskSuccess&quot;,&quot;messageId&quot;:&quot;ajs-64bc43ac-33d7-4689-8379-e7fa41b98bae&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:07.234Z&quot;}],&quot;sentAt&quot;:&quot;2022-09-26T05:59:07.234Z&quot;,&quot;metadata&quot;:{&quot;eventCount&quot;:4,&quot;resilienceMechanism&quot;:&quot;indexeddb&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/gasv3/api/v1/batch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_Profile-538" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/session/heartbeat</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_Profile-547" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="experience" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">experience</stringProp>
                  <stringProp name="Argument.value">product-search-dialog</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="productId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">productId</stringProp>
                  <stringProp name="Argument.value">bitbucket</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/xpsearch-aggregator/scopes/v1/f21b70d0-8bad-458e-9a03-d1d9544e0e8c</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_Profile-548" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="source" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">source</stringProp>
                  <stringProp name="Argument.value">atlaskitNotificationLogClient</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/notification-log/api/3/notifications/count/unseen</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="x-app-version" elementType="Header">
                  <stringProp name="Header.name">x-app-version</stringProp>
                  <stringProp name="Header.value">6.0.0-atlaskitNotificationLogClient</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_Profile-539" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;type&quot;:&quot;metric&quot;,&quot;meta&quot;:{&quot;globalTags&quot;:[&quot;page:SPACE_OVERVIEW&quot;,&quot;cloudId:f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;shard:confluence-prod-ap-8-3.prod.atl-paas.net&quot;,&quot;product:confluence&quot;,&quot;version:CLASSIC-master-12091&quot;,&quot;track:prod&quot;]},&quot;data&quot;:[{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:navigation/app-nav-profile-dropdown&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskStart&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:false&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:13904.700000000186&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:59:06.648Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:navigation/app-nav-profile-dropdown&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskSuccess&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:false&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:13913.200000000186&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:59:06.657Z&quot;},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;experience-tracker:navigation/app-nav-profile-dropdown.performance&quot;,&quot;value&quot;:9,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskSuccess&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:SPACE_OVERVIEW-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171932743&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:false&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:13913.200000000186&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:59:06.657Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:view-page:complete&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskAbort&quot;,&quot;isActiveTab:true&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:59:07.981Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;session&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;type:transition&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:59:07.981Z&quot;}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/telemetry</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_Profile-546" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="accountId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">accountId</stringProp>
                  <stringProp name="Argument.value">${acc}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="expand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">expand</stringProp>
                  <stringProp name="Argument.value">applicationRoles</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/rest/api/3/user</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_Profile-549" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/session/heartbeat</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_Profile-550" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="source" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">source</stringProp>
                  <stringProp name="Argument.value">atlaskitNotificationLogClient</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currentCount" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentCount</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/notification-log/api/3/notifications/count/unseen</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="x-app-version" elementType="Header">
                  <stringProp name="Header.name">x-app-version</stringProp>
                  <stringProp name="Header.value">6.0.0-atlaskitNotificationLogClient</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_Profile-553" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;cloudId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;scopes&quot;:[&quot;confluence.page,blogpost,attachment&quot;],&quot;experience&quot;:&quot;product-search-dialog&quot;,&quot;product&quot;:&quot;confluence&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/xpsearch-aggregator/experiment/v1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_Profile-554" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="experience" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">experience</stringProp>
                  <stringProp name="Argument.value">product-search-dialog</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="productId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">productId</stringProp>
                  <stringProp name="Argument.value">jira</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="productId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">productId</stringProp>
                  <stringProp name="Argument.value">opsgenie</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="productId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">productId</stringProp>
                  <stringProp name="Argument.value">townsquare</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="productId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">productId</stringProp>
                  <stringProp name="Argument.value">trello</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/xpsearch-aggregator/scopes/v1/f21b70d0-8bad-458e-9a03-d1d9544e0e8c</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_Profile-551" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">confluence-v1.prod.atl-paas.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/master/force-update.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_Profile-552" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;type&quot;:&quot;metric&quot;,&quot;meta&quot;:{&quot;synthetic&quot;:&quot;false&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;env&quot;:&quot;prod&quot;,&quot;os&quot;:&quot;windows&quot;,&quot;platform&quot;:&quot;desktop&quot;,&quot;browser&quot;:&quot;chrome&quot;},&quot;metalId&quot;:&quot;88dcca98-e854-4063-954c-eabe3aeb25d2&quot;,&quot;data&quot;:[{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.first_meaningful_paint&quot;,&quot;tags&quot;:[&quot;active_tab:true&quot;,&quot;initial_load:false&quot;,&quot;page:segment-app-navigation&quot;,&quot;gsd_histogram:500_1000_1500_2000_2500_3000&quot;],&quot;value&quot;:220,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.time_to_interactive&quot;,&quot;tags&quot;:[&quot;active_tab:true&quot;,&quot;initial_load:false&quot;,&quot;page:segment-app-navigation&quot;,&quot;gsd_histogram:1000_1500_2000_2500_3000_4000&quot;],&quot;value&quot;:220,&quot;sampleRate&quot;:1}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/metal/ingest</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_Profile-555" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;operationName&quot;:&quot;GetQuickstartState&quot;,&quot;variables&quot;:{&quot;key&quot;:[&quot;quickstart-state:isPanelOpen&quot;,&quot;quickstart-state:isDismissed&quot;,&quot;quickstart-state:openTaskId&quot;,&quot;quickstart-state:openComponentId&quot;,&quot;quickstart-state:jswConfIntroCompleted&quot;,&quot;quickstart-state:helpCompleted&quot;,&quot;quickstart-state:spaceModalCompleted&quot;,&quot;quickstart-state:spaceTourCompleted&quot;,&quot;quickstart-state:collaborateCompleted&quot;,&quot;quickstart-state:homeModalCompleted&quot;,&quot;quickstart-state:homeTourCompleted&quot;,&quot;quickstart-state:mobileCompleted&quot;,&quot;quickstart-state:hasSeenDismissedFlag&quot;,&quot;quickstart-state:isMigratedUserV2&quot;,&quot;quickstart-state:isMigratedUserCalibrationState&quot;,&quot;quickstart-state:jswXflowSwitcherTourCompleted&quot;,&quot;onboarding-origin-state:attributes&quot;,&quot;quickstart-state:jswXFlowModalCompleted&quot;,&quot;quickstart-state:jswXflowInvitePeopleModalOpen&quot;,&quot;quickstart-state:jswXflowInvitePeopleNudgeCompleted&quot;,&quot;quickstart-state:jswXFlowInvitedEmails&quot;,&quot;quickstart-state:editorTutorialTaskCompleted&quot;,&quot;quickstart-state:qsv2ReadConfluenceGuideCompleted&quot;,&quot;quickstart-state:qsv2InviteTeammateCompleted&quot;,&quot;quickstart-state:qsv2IntegrationCompleted&quot;,&quot;quickstart-state:qsv2SiteVideoTourCompleted&quot;,&quot;quickstart-state:qsv2SpotlightCompleted&quot;,&quot;quickstart-state:migrationsWelcomeCompleted&quot;,&quot;quickstart-state:migrationsNewPageCompleted&quot;,&quot;quickstart-state:migrationsCollaborateCompleted&quot;,&quot;quickstart-state:migrationsFindAndOrganizePagesCompleted&quot;,&quot;quickstart-state:migrationsEditAndCustomizeContentCompleted&quot;,&quot;quickstart-state:simplifyAdminRenameSiteCompleted&quot;,&quot;quickstart-state:nqsv2HelpCompleted&quot;,&quot;quickstart-state:nqsv2CreateCompleted&quot;,&quot;quickstart-state:nqsv2CollaborateCompleted&quot;,&quot;quickstart-state:nqsv2Confluence101Completed&quot;]},&quot;query&quot;:&quot;query GetQuickstartState($key: [String]) {\n  onboardingState(key: $key) {\n    key\n    value\n    __typename\n  }\n  ...UserPermissionFragment\n}\n\nfragment UserPermissionFragment on Query {\n  user(current: true) {\n    id\n    confluence {\n      permissionType\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n&quot;},{&quot;operationName&quot;:&quot;WebItemLocationQuery&quot;,&quot;variables&quot;:{&quot;location&quot;:&quot;system.header/left&quot;,&quot;locations&quot;:[],&quot;contentId&quot;:null,&quot;spaceKey&quot;:null,&quot;version&quot;:null},&quot;query&quot;:&quot;query WebItemLocationQuery($location: String, $locations: [String], $contentId: ID, $spaceKey: String, $version: Int) {\n  webItemSections(location: $location, locations: $locations, contentId: $contentId, key: $spaceKey, version: $version) {\n    id\n    label\n    cacheKey\n    styleClass\n    items {\n      accessKey\n      completeKey\n      hasCondition\n      id\n      icon {\n        path\n        __typename\n      }\n      params {\n        key\n        value\n        __typename\n      }\n      label\n      moduleKey\n      section\n      styleClass\n      tooltip\n      url\n      urlWithoutContextPath\n      weight\n      __typename\n    }\n    __typename\n  }\n}\n&quot;},{&quot;operationName&quot;:&quot;SettingsComponentQuery&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SettingsComponentQuery {\n  user(current: true) {\n    id\n    confluence {\n      operations {\n        operation\n        targetType\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;},{&quot;operationName&quot;:&quot;WebPanelLocationQuery&quot;,&quot;variables&quot;:{&quot;location&quot;:&quot;atl.general&quot;},&quot;query&quot;:&quot;query WebPanelLocationQuery($location: String, $contentId: ID, $spaceKey: String) {\n  webPanels(location: $location, contentId: $contentId, key: $spaceKey) {\n    moduleKey\n    completeKey\n    html\n    location\n    label\n    weight\n    name\n    __typename\n  }\n}\n&quot;},{&quot;operationName&quot;:&quot;WebPanelLocationQuery&quot;,&quot;variables&quot;:{&quot;location&quot;:&quot;atl.footer&quot;},&quot;query&quot;:&quot;query WebPanelLocationQuery($location: String, $contentId: ID, $spaceKey: String) {\n  webPanels(location: $location, contentId: $contentId, key: $spaceKey) {\n    moduleKey\n    completeKey\n    html\n    location\n    label\n    weight\n    name\n    __typename\n  }\n}\n&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cgraphql?q=GetQuickstartState,WebItemLocationQuery:system.header/left,SettingsComponentQuery,WebPanelLocationQuery,WebPanelLocationQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/wiki/people/${acc}?src=usermenu</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-APOLLO-OPERATION-NAME" elementType="Header">
                  <stringProp name="Header.name">X-APOLLO-OPERATION-NAME</stringProp>
                  <stringProp name="Header.value">GetQuickstartState,WebItemLocationQuery:system.header/left,SettingsComponentQuery,WebPanelLocationQuery,WebPanelLocationQuery</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_Profile-557" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/me</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_Profile-559" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="cloudId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cloudId</stringProp>
                  <stringProp name="Argument.value">f21b70d0-8bad-458e-9a03-d1d9544e0e8c</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/watermelon/organization/containsAnyWorkspace</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_Profile-558" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="cloudId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cloudId</stringProp>
                  <stringProp name="Argument.value">f21b70d0-8bad-458e-9a03-d1d9544e0e8c</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/watermelon/workspace/exists</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_Profile-561" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;type&quot;:&quot;metric&quot;,&quot;meta&quot;:{&quot;subproduct&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;0.1&quot;,&quot;env&quot;:&quot;prod&quot;,&quot;os&quot;:&quot;windows&quot;,&quot;platform&quot;:&quot;desktop&quot;,&quot;browser&quot;:&quot;chrome&quot;},&quot;metalId&quot;:&quot;74fe5415-a93b-4197-bb9b-294dc9439cd7&quot;,&quot;data&quot;:[{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;fe.perf.component.time_to_ready.slo&quot;,&quot;tags&quot;:[&quot;component:useExtensionList&quot;,&quot;page:confluence:globalPage&quot;,&quot;success:true&quot;],&quot;value&quot;:1,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.component.time_to_ready&quot;,&quot;tags&quot;:[&quot;component:useExtensionList&quot;,&quot;page:confluence:globalPage&quot;],&quot;value&quot;:105.90000000037253,&quot;sampleRate&quot;:1}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/metal/ingest</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_Profile-560" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;sent_at&quot;:&quot;2022-09-26T05:59:08.769Z&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.browser&quot;,&quot;version&quot;:&quot;6.19.7&quot;}}&#xd;
{&quot;type&quot;:&quot;session&quot;}&#xd;
{&quot;sid&quot;:&quot;b13db9e71fd44e6491ddfb7d50cbfe21&quot;,&quot;init&quot;:true,&quot;started&quot;:&quot;2022-09-26T05:59:08.769Z&quot;,&quot;timestamp&quot;:&quot;2022-09-26T05:59:08.769Z&quot;,&quot;status&quot;:&quot;ok&quot;,&quot;errors&quot;:0,&quot;attrs&quot;:{&quot;release&quot;:&quot;---&quot;,&quot;environment&quot;:&quot;prod-east&quot;,&quot;user_agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/sentry-cloud/api/5988845/envelope/?sentry_key=1dc056d49dfe4df8961dc1b810e4620d&amp;sentry_version=7</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_Profile-562" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;type&quot;:&quot;metric&quot;,&quot;meta&quot;:{&quot;synthetic&quot;:&quot;false&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;env&quot;:&quot;prod&quot;,&quot;os&quot;:&quot;windows&quot;,&quot;platform&quot;:&quot;desktop&quot;,&quot;browser&quot;:&quot;chrome&quot;},&quot;metalId&quot;:&quot;88dcca98-e854-4063-954c-eabe3aeb25d2&quot;,&quot;data&quot;:[{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.first_meaningful_paint&quot;,&quot;tags&quot;:[&quot;active_tab:true&quot;,&quot;initial_load:false&quot;,&quot;page:segment-search-box&quot;,&quot;gsd_histogram:500_1000_1500_2000_2500_3000&quot;],&quot;value&quot;:706,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.time_to_interactive&quot;,&quot;tags&quot;:[&quot;active_tab:true&quot;,&quot;initial_load:false&quot;,&quot;page:segment-search-box&quot;,&quot;gsd_histogram:1000_1500_2000_2500_3000_4000&quot;],&quot;value&quot;:706,&quot;sampleRate&quot;:1}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/metal/ingest</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="04_Profile-569" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument" enabled="true">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;cloudId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;flags&quot;:[&quot;enable.connect.team.slack.channel&quot;,&quot;ptc.enabled.invite-only-teams&quot;,&quot;ptc-directory-ui.enable.team-worked-on-component&quot;,&quot;platform.teams.use-v3-api&quot;,&quot;user-direct-message-deeplink&quot;,&quot;ptc-directory-ui.shipit-53.team-logo-maker&quot;,&quot;ptc-directory-ui.enable.kudos&quot;,&quot;ptc-directory-ui.enable.recent-work-component&quot;,&quot;ptc-directory-ui.enable.create-team-on-behalf-of-others&quot;,&quot;ptc-directory-ui.team-profile.restructure&quot;,&quot;ptc-directory-ui.team-profile.restructure.atlas&quot;,&quot;ptc-directory-ui.enable.cancel-join-requests-silently&quot;,&quot;ptc-directory-ui.enable.collab-graph-gql&quot;,&quot;ptc-directory-ui.enable.recent-work-client&quot;,&quot;ptc-directory-ui.enable-recent-work-v3-api&quot;,&quot;enable.project.connect.user.tags&quot;,&quot;ptc-directory-ui.enable.reporting-lines-total-report-count&quot;,&quot;ptc-directory-ui.enable.findability-of-teams&quot;]},&quot;query&quot;:&quot;query FeatureFlags($cloudId: String!, $flags: [String]!) {\n        FeatureFlags(cloudId: $cloudId, flags: $flags) {\n          flag\n          enabled\n        }\n      }&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/directory/graphql?q=FeatureFlags</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
            <stringProp name="GraphQLHTTPSampler.query">query FeatureFlags($cloudId: String!, $flags: [String]!) {
        FeatureFlags(cloudId: $cloudId, flags: $flags) {
          flag
          enabled
        }
      }</stringProp>
            <stringProp name="GraphQLHTTPSampler.variables">{&quot;cloudId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;flags&quot;:[&quot;enable.connect.team.slack.channel&quot;,&quot;ptc.enabled.invite-only-teams&quot;,&quot;ptc-directory-ui.enable.team-worked-on-component&quot;,&quot;platform.teams.use-v3-api&quot;,&quot;user-direct-message-deeplink&quot;,&quot;ptc-directory-ui.shipit-53.team-logo-maker&quot;,&quot;ptc-directory-ui.enable.kudos&quot;,&quot;ptc-directory-ui.enable.recent-work-component&quot;,&quot;ptc-directory-ui.enable.create-team-on-behalf-of-others&quot;,&quot;ptc-directory-ui.team-profile.restructure&quot;,&quot;ptc-directory-ui.team-profile.restructure.atlas&quot;,&quot;ptc-directory-ui.enable.cancel-join-requests-silently&quot;,&quot;ptc-directory-ui.enable.collab-graph-gql&quot;,&quot;ptc-directory-ui.enable.recent-work-client&quot;,&quot;ptc-directory-ui.enable-recent-work-v3-api&quot;,&quot;enable.project.connect.user.tags&quot;,&quot;ptc-directory-ui.enable.reporting-lines-total-report-count&quot;,&quot;ptc-directory-ui.enable.findability-of-teams&quot;]}</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_Profile-572" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;permissionId&quot;:&quot;manage&quot;,&quot;resourceId&quot;:&quot;ari:cloud:platform::site/f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/permissions/permitted</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_Profile-573" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/users/manage/${acc}/profile</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="04_Profile-570" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument" enabled="true">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;cloudId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;product&quot;:&quot;CONFLUENCE&quot;},&quot;query&quot;:&quot;query Settings($cloudId: String!, $product: Product) {\n        Settings: PeopleDirectorySettings(cloudId: $cloudId, product: $product) {\n          isEnabled\n        }\n      }&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/directory/graphql?q=Settings</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
            <stringProp name="GraphQLHTTPSampler.query">query Settings($cloudId: String!, $product: Product) {
        Settings: PeopleDirectorySettings(cloudId: $cloudId, product: $product) {
          isEnabled
        }
      }</stringProp>
            <stringProp name="GraphQLHTTPSampler.variables">{&quot;cloudId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;product&quot;:&quot;CONFLUENCE&quot;}</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_Profile-574" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="cloudId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cloudId</stringProp>
                  <stringProp name="Argument.value">f21b70d0-8bad-458e-9a03-d1d9544e0e8c</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/watermelon/workspace/exists</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_Profile-576" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="cloudId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cloudId</stringProp>
                  <stringProp name="Argument.value">f21b70d0-8bad-458e-9a03-d1d9544e0e8c</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/watermelon/organization/containsAnyWorkspace</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_Profile-581" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;batch&quot;:[{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:08.290Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskAbort&quot;,&quot;attributes&quot;:{&quot;startTime&quot;:27422.400000000373,&quot;duration&quot;:15237,&quot;activeDuration&quot;:15237,&quot;adjustedDuration&quot;:15237,&quot;reason&quot;:&quot;Aborted due to SPA started a new experience&quot;,&quot;checkForTimeout&quot;:true,&quot;task&quot;:&quot;view-page:complete&quot;,&quot;taskId&quot;:&quot;PN&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskAbort&quot;,&quot;messageId&quot;:&quot;ajs-5cfe2950-81e3-44d5-bad4-946d95ab10ad&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:09.675Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:08.309Z&quot;,&quot;type&quot;:&quot;page&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;title&quot;:&quot;&quot;,&quot;path&quot;:&quot;&quot;,&quot;url&quot;:&quot;&quot;,&quot;referrer&quot;:&quot;&quot;,&quot;search&quot;:&quot;&quot;,&quot;eventType&quot;:&quot;screen&quot;,&quot;attributes&quot;:{&quot;navdexPointType&quot;:&quot;navigationSessionTouch&quot;,&quot;navigationSessionId&quot;:&quot;fc7f8d76-acc7-4d26-a397-f0d7357e3ff2&quot;},&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;name&quot;:&quot;inProdPeopleDirectory&quot;,&quot;messageId&quot;:&quot;ajs-a1182259-b021-42a0-8a53-7fb3bcc8ec6f&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:09.675Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:08.311Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskStart&quot;,&quot;attributes&quot;:{&quot;uuid&quot;:&quot;PEOPLE_DIRECTORY-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171947981&quot;,&quot;isInitial&quot;:false,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:180.30000000074506,&quot;startTime&quot;:42839.800000000745,&quot;timeout&quot;:30000,&quot;task&quot;:&quot;navigation/app-nav-global-navigation&quot;,&quot;taskId&quot;:&quot;ed2bc965-2f15-4b47-82da-0d7971f6d0f6&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskStart&quot;,&quot;messageId&quot;:&quot;ajs-ed4d18b3-843e-448e-a602-d8365f7eb083&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:09.675Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:08.311Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskAbort&quot;,&quot;attributes&quot;:{&quot;startTime&quot;:27652.400000000373,&quot;duration&quot;:15200,&quot;activeDuration&quot;:15200,&quot;adjustedDuration&quot;:15200,&quot;reason&quot;:&quot;Aborted because the same experience was started with a new id&quot;,&quot;checkForTimeout&quot;:true,&quot;task&quot;:&quot;onboarding-editor/recent-draft-spotlight&quot;,&quot;taskId&quot;:&quot;0a0b412f-bf9f-406d-a78a-15d2975e85cb&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskAbort&quot;,&quot;messageId&quot;:&quot;ajs-bcc8ec1b-2bb3-4a02-ad24-30ea07cbbd4c&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:09.675Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:08.312Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskStart&quot;,&quot;attributes&quot;:{&quot;uuid&quot;:&quot;PEOPLE_DIRECTORY-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171947981&quot;,&quot;isInitial&quot;:false,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:193,&quot;startTime&quot;:42852.5,&quot;task&quot;:&quot;onboarding-editor/recent-draft-spotlight&quot;,&quot;taskId&quot;:&quot;2526cafd-ba07-4ee9-951e-debe905b7af2&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskStart&quot;,&quot;messageId&quot;:&quot;ajs-f54819e7-6169-435a-9503-ee69862a6056&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:09.675Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:08.322Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskSuccess&quot;,&quot;attributes&quot;:{&quot;uuid&quot;:&quot;PEOPLE_DIRECTORY-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171947981&quot;,&quot;isInitial&quot;:false,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:220,&quot;startTime&quot;:42839.800000000745,&quot;duration&quot;:40,&quot;activeDuration&quot;:40,&quot;adjustedDuration&quot;:40,&quot;task&quot;:&quot;navigation/app-nav-global-navigation&quot;,&quot;taskId&quot;:&quot;ed2bc965-2f15-4b47-82da-0d7971f6d0f6&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskSuccess&quot;,&quot;messageId&quot;:&quot;ajs-ae8f91e3-b9ca-47af-a68b-443f661ff76d&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:09.675Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:08.327Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskStart&quot;,&quot;attributes&quot;:{&quot;uuid&quot;:&quot;PEOPLE_DIRECTORY-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171947981&quot;,&quot;isInitial&quot;:false,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:223.30000000074506,&quot;startTime&quot;:42882.700000000186,&quot;task&quot;:&quot;extension_point_home_header&quot;,&quot;taskId&quot;:&quot;53127812-40bd-41c0-aae6-5e6c20f54575&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskStart&quot;,&quot;messageId&quot;:&quot;ajs-beda20c4-411b-4763-9bbd-3e5e76a43818&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:09.675Z&quot;}],&quot;sentAt&quot;:&quot;2022-09-26T05:59:09.675Z&quot;,&quot;metadata&quot;:{&quot;eventCount&quot;:21,&quot;resilienceMechanism&quot;:&quot;indexeddb&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/gasv3/api/v1/batch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="04_Profile-578" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument" enabled="true">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;cloudId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;flags&quot;:[&quot;enable.connect.team.slack.channel&quot;,&quot;ptc.enabled.invite-only-teams&quot;,&quot;ptc-directory-ui.enable.team-worked-on-component&quot;,&quot;platform.teams.use-v3-api&quot;,&quot;user-direct-message-deeplink&quot;,&quot;ptc-directory-ui.shipit-53.team-logo-maker&quot;,&quot;ptc-directory-ui.enable.kudos&quot;,&quot;ptc-directory-ui.enable.recent-work-component&quot;,&quot;ptc-directory-ui.enable.create-team-on-behalf-of-others&quot;,&quot;ptc-directory-ui.team-profile.restructure&quot;,&quot;ptc-directory-ui.team-profile.restructure.atlas&quot;,&quot;ptc-directory-ui.enable.cancel-join-requests-silently&quot;,&quot;ptc-directory-ui.enable.collab-graph-gql&quot;,&quot;ptc-directory-ui.enable.recent-work-client&quot;,&quot;ptc-directory-ui.enable-recent-work-v3-api&quot;,&quot;enable.project.connect.user.tags&quot;,&quot;ptc-directory-ui.enable.reporting-lines-total-report-count&quot;,&quot;ptc-directory-ui.enable.findability-of-teams&quot;]},&quot;query&quot;:&quot;query FeatureFlags($cloudId: String!, $flags: [String]!) {\n        FeatureFlags(cloudId: $cloudId, flags: $flags) {\n          flag\n          enabled\n        }\n      }&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/directory/graphql?q=FeatureFlags</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
            <stringProp name="GraphQLHTTPSampler.query">query FeatureFlags($cloudId: String!, $flags: [String]!) {
        FeatureFlags(cloudId: $cloudId, flags: $flags) {
          flag
          enabled
        }
      }</stringProp>
            <stringProp name="GraphQLHTTPSampler.variables">{&quot;cloudId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;flags&quot;:[&quot;enable.connect.team.slack.channel&quot;,&quot;ptc.enabled.invite-only-teams&quot;,&quot;ptc-directory-ui.enable.team-worked-on-component&quot;,&quot;platform.teams.use-v3-api&quot;,&quot;user-direct-message-deeplink&quot;,&quot;ptc-directory-ui.shipit-53.team-logo-maker&quot;,&quot;ptc-directory-ui.enable.kudos&quot;,&quot;ptc-directory-ui.enable.recent-work-component&quot;,&quot;ptc-directory-ui.enable.create-team-on-behalf-of-others&quot;,&quot;ptc-directory-ui.team-profile.restructure&quot;,&quot;ptc-directory-ui.team-profile.restructure.atlas&quot;,&quot;ptc-directory-ui.enable.cancel-join-requests-silently&quot;,&quot;ptc-directory-ui.enable.collab-graph-gql&quot;,&quot;ptc-directory-ui.enable.recent-work-client&quot;,&quot;ptc-directory-ui.enable-recent-work-v3-api&quot;,&quot;enable.project.connect.user.tags&quot;,&quot;ptc-directory-ui.enable.reporting-lines-total-report-count&quot;,&quot;ptc-directory-ui.enable.findability-of-teams&quot;]}</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="04_Profile-582" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument" enabled="true">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;Profile&quot;,&quot;variables&quot;:{&quot;cloudId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userId&quot;:&quot;63294f8014c6b4b2210a37c1&quot;},&quot;query&quot;:&quot;query Profile($userId: String!, $cloudId: String!) {\n  CloudUser(userId: $userId, cloudId: $cloudId) {\n    id\n    avatarUrl(size: 200)\n    fullName\n    isCurrentUser\n    nickname\n    status\n    statusModifiedDate\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/directory/graphql?q=Profile</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="GraphQLHTTPSampler.operationName">Profile</stringProp>
            <stringProp name="GraphQLHTTPSampler.query">query Profile($userId: String!, $cloudId: String!) {
  CloudUser(userId: $userId, cloudId: $cloudId) {
    id
    avatarUrl(size: 200)
    fullName
    isCurrentUser
    nickname
    status
    statusModifiedDate
    __typename
  }
}
</stringProp>
            <stringProp name="GraphQLHTTPSampler.variables">{&quot;cloudId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userId&quot;:&quot;63294f8014c6b4b2210a37c1&quot;}</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="04_Profile-580" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument" enabled="true">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;cloudId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;product&quot;:&quot;CONFLUENCE&quot;},&quot;query&quot;:&quot;query Settings($cloudId: String!, $product: Product) {\n        Settings: PeopleDirectorySettings(cloudId: $cloudId, product: $product) {\n          isEnabled\n        }\n      }&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/directory/graphql?q=Settings</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="GraphQLHTTPSampler.operationName"></stringProp>
            <stringProp name="GraphQLHTTPSampler.query">query Settings($cloudId: String!, $product: Product) {
        Settings: PeopleDirectorySettings(cloudId: $cloudId, product: $product) {
          isEnabled
        }
      }</stringProp>
            <stringProp name="GraphQLHTTPSampler.variables">{&quot;cloudId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;product&quot;:&quot;CONFLUENCE&quot;}</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="04_Profile-584" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument" enabled="true">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;ProfileAvatar&quot;,&quot;variables&quot;:{&quot;userId&quot;:&quot;63294f8014c6b4b2210a37c1&quot;,&quot;cloudId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;},&quot;query&quot;:&quot;query ProfileAvatar($userId: String!, $cloudId: String) {\n  CloudUser(userId: $userId, cloudId: $cloudId) {\n    id\n    isCurrentUser\n    status\n    avatarUrl\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/directory/graphql?q=ProfileAvatar</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="GraphQLHTTPSampler.operationName">ProfileAvatar</stringProp>
            <stringProp name="GraphQLHTTPSampler.query">query ProfileAvatar($userId: String!, $cloudId: String) {
  CloudUser(userId: $userId, cloudId: $cloudId) {
    id
    isCurrentUser
    status
    avatarUrl
    __typename
  }
}
</stringProp>
            <stringProp name="GraphQLHTTPSampler.variables">{&quot;userId&quot;:&quot;63294f8014c6b4b2210a37c1&quot;,&quot;cloudId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;}</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="04_Profile-583" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument" enabled="true">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;ProfileHeaderUser&quot;,&quot;variables&quot;:{&quot;userId&quot;:&quot;63294f8014c6b4b2210a37c1&quot;,&quot;cloudId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;},&quot;query&quot;:&quot;query ProfileHeaderUser($userId: String!, $cloudId: String) {\n  User: CloudUser(userId: $userId, cloudId: $cloudId) {\n    id\n    headerImageUrl(width: 1500)\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/directory/graphql?q=ProfileHeaderUser</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="GraphQLHTTPSampler.operationName">ProfileHeaderUser</stringProp>
            <stringProp name="GraphQLHTTPSampler.query">query ProfileHeaderUser($userId: String!, $cloudId: String) {
  User: CloudUser(userId: $userId, cloudId: $cloudId) {
    id
    headerImageUrl(width: 1500)
    __typename
  }
}
</stringProp>
            <stringProp name="GraphQLHTTPSampler.variables">{&quot;userId&quot;:&quot;63294f8014c6b4b2210a37c1&quot;,&quot;cloudId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;}</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_Profile-585" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/users/${acc}/manage/avatar</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="04_Profile-592" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument" enabled="true">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;people_userWorkedOn&quot;,&quot;variables&quot;:{&quot;first&quot;:10,&quot;userIds&quot;:[&quot;63294f8014c6b4b2210a37c1&quot;],&quot;cloudIds&quot;:[&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;],&quot;objectTypes&quot;:[&quot;ISSUE&quot;,&quot;PAGE&quot;,&quot;BLOGPOST&quot;,&quot;PROJECT&quot;,&quot;GOAL&quot;]},&quot;query&quot;:&quot;query people_userWorkedOn($first: Int, $userIds: [ID!], $cloudIds: [ID!], $objectTypes: [ActivitiesObjectType!]) {\n  activities {\n    workedOn(first: $first, filters: [{arguments: {accountIds: $userIds, cloudIds: $cloudIds, objectTypes: $objectTypes}}]) {\n      nodes {\n        id\n        timestamp\n        object {\n          id\n          name\n          cloudId\n          url\n          iconUrl\n          product\n          containers {\n            name\n            __typename\n          }\n          contributors {\n            profile {\n              accountId\n              name\n              __typename\n            }\n            lastAccessedDate\n            __typename\n          }\n          events {\n            eventType\n            __typename\n          }\n          extension {\n            ... on ActivitiesJiraIssue {\n              issueKey\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/graphql?q=people_userWorkedOn</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="GraphQLHTTPSampler.operationName">people_userWorkedOn</stringProp>
            <stringProp name="GraphQLHTTPSampler.query">query people_userWorkedOn($first: Int, $userIds: [ID!], $cloudIds: [ID!], $objectTypes: [ActivitiesObjectType!]) {
  activities {
    workedOn(first: $first, filters: [{arguments: {accountIds: $userIds, cloudIds: $cloudIds, objectTypes: $objectTypes}}]) {
      nodes {
        id
        timestamp
        object {
          id
          name
          cloudId
          url
          iconUrl
          product
          containers {
            name
            __typename
          }
          contributors {
            profile {
              accountId
              name
              __typename
            }
            lastAccessedDate
            __typename
          }
          events {
            eventType
            __typename
          }
          extension {
            ... on ActivitiesJiraIssue {
              issueKey
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}
</stringProp>
            <stringProp name="GraphQLHTTPSampler.variables">{&quot;first&quot;:10,&quot;userIds&quot;:[&quot;63294f8014c6b4b2210a37c1&quot;],&quot;cloudIds&quot;:[&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;],&quot;objectTypes&quot;:[&quot;ISSUE&quot;,&quot;PAGE&quot;,&quot;BLOGPOST&quot;,&quot;PROJECT&quot;,&quot;GOAL&quot;]}</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="04_Profile-586" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument" enabled="true">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;UserDetails&quot;,&quot;variables&quot;:{&quot;cloudId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userId&quot;:&quot;63294f8014c6b4b2210a37c1&quot;},&quot;query&quot;:&quot;query UserDetails($userId: String!, $cloudId: String!) {\n  CloudUser(userId: $userId, cloudId: $cloudId) {\n    id\n    fullName\n    isCurrentUser\n    title\n    department\n    companyName\n    location\n    timezone\n    email\n    phoneNumber\n    remoteWeekdayIndex: localTime(format: \&quot;d\&quot;)\n    remoteWeekdayString: localTime(format: \&quot;ddd\&quot;)\n    remoteTimeString: localTime(format: \&quot;h:mma ([GMT]Z)\&quot;)\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/directory/graphql?q=UserDetails</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="GraphQLHTTPSampler.operationName">UserDetails</stringProp>
            <stringProp name="GraphQLHTTPSampler.query">query UserDetails($userId: String!, $cloudId: String!) {
  CloudUser(userId: $userId, cloudId: $cloudId) {
    id
    fullName
    isCurrentUser
    title
    department
    companyName
    location
    timezone
    email
    phoneNumber
    remoteWeekdayIndex: localTime(format: &quot;d&quot;)
    remoteWeekdayString: localTime(format: &quot;ddd&quot;)
    remoteTimeString: localTime(format: &quot;h:mma ([GMT]Z)&quot;)
    __typename
  }
}
</stringProp>
            <stringProp name="GraphQLHTTPSampler.variables">{&quot;cloudId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userId&quot;:&quot;63294f8014c6b4b2210a37c1&quot;}</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_Profile-587" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/users/${acc}/manage</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_Profile-595" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;context&quot;:{&quot;contextType&quot;:&quot;atlassianDirectory&quot;,&quot;principalId&quot;:&quot;${acc}&quot;,&quot;siteId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;sessionId&quot;:&quot;0c997d33-b071-43ce-aac5-f708c4a7dd03&quot;},&quot;maxNumberOfResults&quot;:8,&quot;userId&quot;:&quot;${acc}&quot;,&quot;expanded&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/collaboration/v1/collaborationgraph/user/user</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="04_Profile-588" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument" enabled="true">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;CloudUser&quot;,&quot;variables&quot;:{&quot;userId&quot;:&quot;63294f8014c6b4b2210a37c1&quot;,&quot;cloudId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;},&quot;query&quot;:&quot;query CloudUser($userId: String!, $cloudId: String) {\n  CloudUser(userId: $userId, cloudId: $cloudId) {\n    id\n    fullName\n    avatarUrl\n    email\n    timezone\n    locale\n    title\n    location\n    companyName\n    department\n    statusModifiedDate\n    isNotMentionable\n    phoneNumber\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/directory/graphql?q=CloudUser</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="GraphQLHTTPSampler.operationName">CloudUser</stringProp>
            <stringProp name="GraphQLHTTPSampler.query">query CloudUser($userId: String!, $cloudId: String) {
  CloudUser(userId: $userId, cloudId: $cloudId) {
    id
    fullName
    avatarUrl
    email
    timezone
    locale
    title
    location
    companyName
    department
    statusModifiedDate
    isNotMentionable
    phoneNumber
    __typename
  }
}
</stringProp>
            <stringProp name="GraphQLHTTPSampler.variables">{&quot;userId&quot;:&quot;63294f8014c6b4b2210a37c1&quot;,&quot;cloudId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;}</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="04_Profile-594" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument" enabled="true">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;ProfileAboutTeams&quot;,&quot;variables&quot;:{&quot;accountId&quot;:&quot;63294f8014c6b4b2210a37c1&quot;,&quot;cursor&quot;:&quot;&quot;,&quot;limit&quot;:20},&quot;query&quot;:&quot;query ProfileAboutTeams($accountId: String!, $cursor: String!, $orgId: String, $limit: Int) {\n  TeamsOfUser(accountId: $accountId, cursor: $cursor, organizationId: $orgId, limit: $limit) {\n    cursor\n    result {\n      id\n      displayName\n      description\n      smallAvatarImageUrl\n      includesYou\n      memberIds\n      memberCount\n      state\n      orgId: organizationId\n      members {\n        ...MemberFragment\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment MemberFragment on User {\n  id\n  fullName\n  title\n  avatarUrl\n  __typename\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/directory/graphql?q=ProfileAboutTeams</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="GraphQLHTTPSampler.operationName">ProfileAboutTeams</stringProp>
            <stringProp name="GraphQLHTTPSampler.query">query ProfileAboutTeams($accountId: String!, $cursor: String!, $orgId: String, $limit: Int) {
  TeamsOfUser(accountId: $accountId, cursor: $cursor, organizationId: $orgId, limit: $limit) {
    cursor
    result {
      id
      displayName
      description
      smallAvatarImageUrl
      includesYou
      memberIds
      memberCount
      state
      orgId: organizationId
      members {
        ...MemberFragment
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment MemberFragment on User {
  id
  fullName
  title
  avatarUrl
  __typename
}
</stringProp>
            <stringProp name="GraphQLHTTPSampler.variables">{&quot;accountId&quot;:&quot;63294f8014c6b4b2210a37c1&quot;,&quot;cursor&quot;:&quot;&quot;,&quot;limit&quot;:20}</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_Profile-597" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;batch&quot;:[{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:08.328Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskStart&quot;,&quot;attributes&quot;:{&quot;quickstartType&quot;:&quot;nthUserQuickstartV2&quot;,&quot;uuid&quot;:&quot;PEOPLE_DIRECTORY-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171947981&quot;,&quot;isInitial&quot;:false,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:307.40000000037253,&quot;startTime&quot;:42966.90000000037,&quot;task&quot;:&quot;onboarding-quickstart&quot;,&quot;taskId&quot;:&quot;aed5d69b-8aa0-4f01-8edf-0f705ef759f0&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskStart&quot;,&quot;messageId&quot;:&quot;ajs-25942abe-a5af-4bbe-a213-bf665af05d8c&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:10.189Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:08.328Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskStart&quot;,&quot;attributes&quot;:{&quot;uuid&quot;:&quot;PEOPLE_DIRECTORY-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171947981&quot;,&quot;isInitial&quot;:false,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:223.40000000037253,&quot;startTime&quot;:42882.90000000037,&quot;task&quot;:&quot;extension_point_home_footer&quot;,&quot;taskId&quot;:&quot;06681039-837f-4f1b-b982-b6aeb26a1254&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskStart&quot;,&quot;messageId&quot;:&quot;ajs-2886c067-9b1a-4685-ba89-a4b9cbe31f31&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:10.189Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:08.328Z&quot;,&quot;type&quot;:&quot;page&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;title&quot;:&quot;&quot;,&quot;path&quot;:&quot;&quot;,&quot;url&quot;:&quot;&quot;,&quot;referrer&quot;:&quot;&quot;,&quot;search&quot;:&quot;&quot;,&quot;eventType&quot;:&quot;screen&quot;,&quot;attributes&quot;:{&quot;quickstartType&quot;:&quot;nthUserQuickstartV2&quot;},&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;name&quot;:&quot;confluenceOnboardingQuickstartButtonDrawer&quot;,&quot;messageId&quot;:&quot;ajs-231117a4-bbe9-4aba-9d50-3bf516576157&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:10.189Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:08.329Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskSuccess&quot;,&quot;attributes&quot;:{&quot;quickstartType&quot;:&quot;nthUserQuickstartV2&quot;,&quot;uuid&quot;:&quot;PEOPLE_DIRECTORY-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171947981&quot;,&quot;isInitial&quot;:false,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:307.6000000005588,&quot;startTime&quot;:42966.90000000037,&quot;duration&quot;:0,&quot;activeDuration&quot;:0,&quot;adjustedDuration&quot;:0,&quot;task&quot;:&quot;onboarding-quickstart&quot;,&quot;taskId&quot;:&quot;aed5d69b-8aa0-4f01-8edf-0f705ef759f0&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskSuccess&quot;,&quot;messageId&quot;:&quot;ajs-6e0c9475-f8c2-4e44-8cc0-14d0cf633855&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:10.189Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:08.330Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;measured&quot;,&quot;actionSubject&quot;:&quot;experience&quot;,&quot;action&quot;:&quot;measured&quot;,&quot;attributes&quot;:{&quot;properties&quot;:{&quot;event:source&quot;:{&quot;name&quot;:&quot;ufo/web&quot;,&quot;version&quot;:&quot;0.1.5&quot;},&quot;event:schema&quot;:&quot;0.1.7&quot;,&quot;event:product&quot;:&quot;confluence&quot;,&quot;event:region&quot;:&quot;confluence-prod-ap-8-3.prod.atl-paas.net&quot;,&quot;event:hostname&quot;:&quot;thinktimetechnology.atlassian.net&quot;,&quot;event:route&quot;:&quot;&quot;,&quot;event:browser:name&quot;:&quot;Chrome&quot;,&quot;event:browser:version&quot;:&quot;105.0.0.0&quot;,&quot;event:cpus&quot;:3,&quot;event:memory&quot;:8,&quot;event:network:effectiveType&quot;:&quot;4g&quot;,&quot;event:network:rtt&quot;:200,&quot;event:network:downlink&quot;:5.75,&quot;app:framework:name&quot;:&quot;react&quot;,&quot;app:framework:version&quot;:&quot;16.14.0&quot;,&quot;app:web:version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;experience:name&quot;:&quot;intialisation&quot;,&quot;experience:key&quot;:&quot;platform.fe.load.search-dialog.intialisation&quot;,&quot;experience:status&quot;:&quot;ABORTED&quot;,&quot;experience:duration&quot;:50,&quot;experience:startTime&quot;:42743,&quot;experience:spanId&quot;:&quot;5836c1ba-1701-4c98-b69b-f3014ddd4875&quot;,&quot;experience:pageVisible&quot;:&quot;visible&quot;},&quot;performance&quot;:{&quot;event:key&quot;:&quot;platform.fe.page-segment-load.search-dialog.intialisation&quot;,&quot;event:type&quot;:&quot;page-segment-load&quot;,&quot;metric:tti&quot;:50,&quot;metric:fmp&quot;:50,&quot;payloadTime&quot;:0.2999999998137355},&quot;task&quot;:&quot;intialisation&quot;},&quot;tags&quot;:[&quot;observability&quot;],&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;experience measured&quot;,&quot;messageId&quot;:&quot;ajs-191cb6fd-d58f-408e-b359-6b33f97b1063&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:10.189Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:08.330Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;containerType&quot;:&quot;space&quot;,&quot;containerId&quot;:&quot;33186&quot;,&quot;source&quot;:&quot;space&quot;,&quot;actionSubject&quot;:&quot;space&quot;,&quot;action&quot;:&quot;dwelled&quot;,&quot;actionSubjectId&quot;:&quot;33186&quot;,&quot;attributes&quot;:{&quot;dwellTime&quot;:7426,&quot;searchReferrer&quot;:null,&quot;finalDwellEvent&quot;:true,&quot;pageType&quot;:&quot;page&quot;,&quot;spaceType&quot;:&quot;global&quot;,&quot;isUserViewingOwnPersonalSpace&quot;:false},&quot;eventType&quot;:&quot;track&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;space dwelled&quot;,&quot;messageId&quot;:&quot;ajs-50364065-2b2f-429a-a3b5-82c973430afe&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:10.189Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:08.330Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;confluence-frontend&quot;,&quot;actionSubject&quot;:&quot;Navigation&quot;,&quot;action&quot;:&quot;done&quot;,&quot;actionSubjectId&quot;:&quot;NavigationLoading&quot;,&quot;attributes&quot;:{&quot;featureFlags&quot;:{&quot;confluence.frontend-delete-own-permission-spotlight&quot;:true,&quot;confluence.frontend-delete-own-permission-spotlight-delay-duration&quot;:&quot;3000.0&quot;,&quot;confluence.frontend.add.labels&quot;:true,&quot;confluence.frontend.advanced-search.archive-search-filters&quot;:true,&quot;confluence.frontend.advanced-search.smart-contributor-filter&quot;:true,&quot;confluence.frontend.archive.and.delete.space&quot;:true,&quot;confluence.frontend.archive.pages&quot;:true,&quot;confluence.frontend.archive.pages.allow.bulk&quot;:true,&quot;confluence.frontend.archive.pages.allow.bulk.ui.multi-select&quot;:true,&quot;confluence.frontend.archive.pages.selection-limit&quot;:&quot;500.0&quot;,&quot;confluence.frontend.archive.recommendation.email&quot;:true,&quot;confluence.frontend.bandana.client.short.socket.timeout&quot;:&quot;50.0&quot;,&quot;confluence.frontend.batch.tasks&quot;:true,&quot;confluence.frontend.branch.deployment&quot;:&quot;off&quot;,&quot;confluence.frontend.collab.ncs.max.participants&quot;:&quot;12.0&quot;,&quot;confluence.frontend.conditional.inline.comments&quot;:true,&quot;confluence.frontend.connect.macro.save-as-forge&quot;:true,&quot;confluence.frontend.connect.macro.view-as-forge&quot;:true,&quot;confluence.frontend.convert-page-to-blog&quot;:&quot;v1&quot;,&quot;confluence.frontend.copy-page-tree&quot;:true,&quot;confluence.frontend.core.invites.optimisation&quot;:&quot;layout-rearrangement-and-nth-users-product-selector-variation&quot;,&quot;confluence.frontend.cql.metadata&quot;:true,&quot;confluence.frontend.create-content.blog-shortcut&quot;:true,&quot;confluence.frontend.create-content.discrete-route&quot;:true,&quot;confluence.frontend.create-team-on-behalf-of-others&quot;:true,&quot;confluence.frontend.creator-studio.personal-space-side-nav.baseline-metrics&quot;:true,&quot;confluence.frontend.debounce.mentions&quot;:&quot;150.0&quot;,&quot;confluence.frontend.delay.comment.button&quot;:true,&quot;confluence.frontend.delay.page.comments.render&quot;:&quot;delay-render&quot;,&quot;confluence.frontend.disable.invalid.extension.warning&quot;:&quot;renderer&quot;,&quot;confluence.frontend.editor.same-file-name-flag&quot;:true,&quot;confluence.frontend.eliminate.macro.context.to.link.conversion&quot;:true,&quot;confluence.frontend.embedded-confluence.enable.migration&quot;:&quot;JSM,msteams&quot;,&quot;confluence.frontend.embedded-confluence.enable.nfpe&quot;:true,&quot;confluence.frontend.enable-remote-switcher-admin-configuration&quot;:true,&quot;confluence.frontend.enable-remote-switcher-product-configuration&quot;:true,&quot;confluence.frontend.enable-ufo&quot;:true,&quot;confluence.frontend.enable.archive.permission&quot;:true,&quot;confluence.frontend.enable.ccp.seq3.upflow.transition&quot;:true,&quot;confluence.frontend.enable.ccp.seq4.upflow.transition&quot;:true,&quot;confluence.frontend.enable.help-menu.global-feedback-collector&quot;:true,&quot;confluence.frontend.enable.media.upload.api.v2&quot;:true,&quot;confluence.frontend.enduser-emcee-discover&quot;:true,&quot;confluence.frontend.engage-platform.engagekit&quot;:true,&quot;confluence.frontend.eop.recommendations.rollout&quot;:&quot;on&quot;,&quot;confluence.frontend.eop.suggestion-reason&quot;:true,&quot;confluence.frontend.extension.api-v2.macros&quot;:true,&quot;confluence.frontend.extension.chart&quot;:true,&quot;confluence.frontend.extension.chart.render&quot;:true,&quot;confluence.frontend.extension.config-panel&quot;:true,&quot;confluence.frontend.extension.config-panel.opt-out&quot;:&quot;{\&quot;macros\&quot;:[\&quot;create-from-template\&quot;,\&quot;auibutton\&quot;,\&quot;cfm-progress-bar-hyperlink-step\&quot;,\&quot;decisionreport\&quot;,\&quot;viewpdf\&quot;,\&quot;viewdoc\&quot;,\&quot;viewxls\&quot;,\&quot;viewppt\&quot;,\&quot;detailssummary\&quot;,\&quot;contentbylabel\&quot;,\&quot;blog-posts\&quot;],\&quot;on\&quot;:true}&quot;,&quot;confluence.frontend.extension.element-browser&quot;:true,&quot;confluence.frontend.extension.floatingToolbar&quot;:true,&quot;confluence.frontend.extension.plus-menu&quot;:true,&quot;confluence.frontend.external-share&quot;:&quot;not-enrolled&quot;,&quot;confluence.frontend.exus.import-from-slack&quot;:true,&quot;confluence.frontend.fabric-editor.predictable-list.enabled&quot;:true,&quot;confluence.frontend.fabric.editor.allow.synchrony.recovery&quot;:true,&quot;confluence.frontend.fabric.editor.analytics-instance-name-attribute&quot;:&quot;Production&quot;,&quot;confluence.frontend.fabric.editor.autonomy-tables&quot;:true,&quot;confluence.frontend.fabric.editor.blank.blogpost&quot;:true,&quot;confluence.frontend.fabric.editor.blank.page&quot;:true,&quot;confluence.frontend.fabric.editor.breadcrumbs.call.close&quot;:true,&quot;confluence.frontend.fabric.editor.collab-disconnect-tracking&quot;:true,&quot;confluence.frontend.fabric.editor.collapsed-breadcrumbs&quot;:&quot;collapse-and-remove-people&quot;,&quot;confluence.frontend.fabric.editor.custom-panel&quot;:true,&quot;confluence.frontend.fabric.editor.custom-panel.edit&quot;:true,&quot;confluence.frontend.fabric.editor.data-consumer-mark&quot;:true,&quot;confluence.frontend.fabric.editor.disable-spellcheck-by-browser&quot;:&quot;{}&quot;,&quot;confluence.frontend.fabric.editor.distribute-columns&quot;:true,&quot;confluence.frontend.fabric.editor.draft-in-page-tree.allowed-spaces&quot;:&quot;_ALL_SPACES_&quot;,&quot;confluence.frontend.fabric.editor.draft-in-page-tree.show-changeboarding-community-post&quot;:true,&quot;confluence.frontend.fabric.editor.edit-overlay&quot;:true,&quot;confluence.frontend.fabric.editor.embed-preview-size&quot;:&quot;control&quot;,&quot;confluence.frontend.fabric.editor.enable-sticky-table-headers&quot;:true,&quot;confluence.frontend.fabric.editor.enable.heartbeat-activity&quot;:true,&quot;confluence.frontend.fabric.editor.enable.new.editor.flags&quot;:true,&quot;confluence.frontend.fabric.editor.find-and-replace&quot;:true,&quot;confluence.frontend.fabric.editor.find-and-replace.allow-match-case&quot;:true,&quot;confluence.frontend.fabric.editor.inline.comments&quot;:&quot;fabric&quot;,&quot;confluence.frontend.fabric.editor.linking.new.activity.provider&quot;:true,&quot;confluence.frontend.fabric.editor.local-id-generation-on-tables&quot;:true,&quot;confluence.frontend.fabric.editor.maxUnsafeChromeSpellcheckingVersion&quot;:&quot;0.0&quot;,&quot;confluence.frontend.fabric.editor.media.captions&quot;:true,&quot;confluence.frontend.fabric.editor.on-close-draft-redirect-to-parent.allowed-spaces&quot;:&quot;_ALL_SPACES_&quot;,&quot;confluence.frontend.fabric.editor.page-cover-pictures&quot;:true,&quot;confluence.frontend.fabric.editor.performance-tracking&quot;:&quot;{\&quot;pasteTracking\&quot;:{\&quot;enabled\&quot;:true},\&quot;bFreezeTracking\&quot;:{\&quot;trackInteractionType\&quot;:true,\&quot;trackSeverity\&quot;:true},\&quot;contentRetrievalTracking\&quot;:{\&quot;successSamplingRate\&quot;:5.0,\&quot;failureSamplingRate\&quot;:1.0,\&quot;reportErrorStack\&quot;:false,\&quot;enabled\&quot;:true},\&quot;onEditorReadyCallbackTracking\&quot;:{\&quot;enabled\&quot;:true},\&quot;inputTracking\&quot;:{\&quot;trackSeverity\&quot;:true,\&quot;severityDegradedThreshold\&quot;:273.0,\&quot;samplingRate\&quot;:100.0,\&quot;countNodes\&quot;:true,\&quot;severityNormalThreshold\&quot;:143.0,\&quot;enabled\&quot;:true},\&quot;renderTracking\&quot;:{\&quot;editor\&quot;:{\&quot;useShallow\&quot;:false,\&quot;enabled\&quot;:true},\&quot;reactEditorView\&quot;:{\&quot;useShallow\&quot;:true,\&quot;enabled\&quot;:true}},\&quot;uiTracking\&quot;:{\&quot;samplingRate\&quot;:100.0,\&quot;enabled\&quot;:true},\&quot;ttiTracking\&quot;:{\&quot;trackSeverity\&quot;:true,\&quot;ttiSeverityNormalThreshold\&quot;:8000.0,\&quot;ttiFromInvocationSeverityDegradedThreshold\&quot;:7813.0,\&quot;ttiSeverityDegradedThreshold\&quot;:10000.0,\&quot;ttiFromInvocationSeverityNormalThreshold\&quot;:4804.0,\&quot;enabled\&quot;:true},\&quot;transactionTracking\&quot;:{\&quot;usePerformanceMarks\&quot;:true,\&quot;samplingRate\&quot;:100.0,\&quot;enabled\&quot;:true},\&quot;onChangeCallbackTracking\&quot;:{\&quot;enabled\&quot;:true},\&quot;catchAllTracking\&quot;:{\&quot;enabled\&quot;:false}}&quot;,&quot;confluence.frontend.fabric.editor.plainTextPasteLinkification&quot;:true,&quot;confluence.frontend.fabric.editor.preload.timeout&quot;:&quot;0.0&quot;,&quot;confluence.frontend.fabric.editor.queue-analytics&quot;:true,&quot;confluence.frontend.fabric.editor.referentiality&quot;:true,&quot;confluence.frontend.fabric.editor.renderer-render-tracking&quot;:&quot;{}&quot;,&quot;confluence.frontend.fabric.editor.satisfaction.survey&quot;:true,&quot;confluence.frontend.fabric.editor.satisfaction.survey.delay&quot;:&quot;28.0&quot;,&quot;confluence.frontend.fabric.editor.save-indicator-1point5&quot;:true,&quot;confluence.frontend.fabric.editor.show-hover-preview&quot;:true,&quot;confluence.frontend.fabric.editor.show.persistent.save.status&quot;:true,&quot;confluence.frontend.fabric.editor.showAvatarGroupAsPlugin&quot;:true,&quot;confluence.frontend.fabric.editor.smartcards.macro-override&quot;:&quot;jira,jiraroadmap,google-drive-sheets,google-drive-docs,OneDrive,google-drive-slides&quot;,&quot;confluence.frontend.fabric.editor.synchrony.long-polling&quot;:true,&quot;confluence.frontend.fabric.editor.synchrony.websocket-worker&quot;:true,&quot;confluence.frontend.fabric.editor.table-cell-optimisation&quot;:true,&quot;confluence.frontend.fabric.editor.table-initial-render-optimisation&quot;:true,&quot;confluence.frontend.fabric.editor.table-mousemove-optimisation&quot;:true,&quot;confluence.frontend.fabric.editor.table-overflow-shadows-optimization&quot;:true,&quot;confluence.frontend.fabric.editor.table-render-optimisation&quot;:true,&quot;confluence.frontend.fabric.editor.tooltip-discard-on-close.allowed-spaces&quot;:&quot;_ALL_SPACES_&quot;,&quot;confluence.frontend.fabric.editor.tti-tracking&quot;:&quot;{\&quot;enabled\&quot;:true}&quot;,&quot;confluence.frontend.fabric.editor.twoLineEditorToolbar&quot;:true,&quot;confluence.frontend.fabric.editor.user.internet.connection.indicator&quot;:true,&quot;confluence.frontend.fabric.editor.valid-transactions-tracking&quot;:&quot;{\&quot;samplingRate\&quot;:300.0}&quot;,&quot;confluence.frontend.fabric.editor.view-changing-experiment-toolbar-style&quot;:&quot;toolbarIcons&quot;,&quot;confluence.frontend.fabric.page.optin.migration&quot;:true,&quot;confluence.frontend.fabric.renderer.ttr-severity-tracking&quot;:&quot;{\&quot;severityDegradedThreshold\&quot;:4747.0,\&quot;severityNormalThreshold\&quot;:3775.0,\&quot;enabled\&quot;:true}&quot;,&quot;confluence.frontend.fabric.renderer.unsupported-content-levels-tracking&quot;:&quot;{\&quot;thresholds\&quot;:{\&quot;blocking\&quot;:1.5,\&quot;degraded\&quot;:1.0},\&quot;enabled\&quot;:true}&quot;,&quot;confluence.frontend.fabric.share.published&quot;:true,&quot;confluence.frontend.feed.content.query.field.test&quot;:&quot;off&quot;,&quot;confluence.frontend.feed.profile-card.follow&quot;:true,&quot;confluence.frontend.feed.reactions&quot;:&quot;not-enrolled&quot;,&quot;confluence.frontend.feed.recommendations&quot;:true,&quot;confluence.frontend.feed.recommendations-third-position&quot;:true,&quot;confluence.frontend.filter-events.exemptions&quot;:&quot;[]&quot;,&quot;confluence.frontend.focus.mode&quot;:true,&quot;confluence.frontend.focused.inline.comment.performance&quot;:&quot;variation&quot;,&quot;confluence.frontend.forge-custom-content&quot;:true,&quot;confluence.frontend.forge.extension-point.blueprint&quot;:true,&quot;confluence.frontend.forge.keyboardshortcuts.contentaction&quot;:true,&quot;confluence.frontend.forge.keyboardshortcuts.contentbylineitem&quot;:true,&quot;confluence.frontend.forge.keyboardshortcuts.contextmenu&quot;:true,&quot;confluence.frontend.forge.keyboardshortcuts.globalpage&quot;:true,&quot;confluence.frontend.forge.keyboardshortcuts.globalsettings&quot;:true,&quot;confluence.frontend.forge.keyboardshortcuts.homepagefeed&quot;:true,&quot;confluence.frontend.forge.keyboardshortcuts.spacepage&quot;:true,&quot;confluence.frontend.forge.keyboardshortcuts.spacesettings&quot;:true,&quot;confluence.frontend.full-width-templates&quot;:true,&quot;confluence.frontend.generic.comment.editor&quot;:true,&quot;confluence.frontend.global-feedback-collector-in-editor-help-center&quot;:true,&quot;confluence.frontend.growth.infi-slack-platform&quot;:true,&quot;confluence.frontend.heartbeat&quot;:true,&quot;confluence.frontend.hide-blank-drafts.allowed-spaces&quot;:&quot;_ALL_SPACES_&quot;,&quot;confluence.frontend.hide.gadgets.on.macro.selector&quot;:true,&quot;confluence.frontend.home-1.5&quot;:true,&quot;confluence.frontend.import-from-sources.tabs-enabled&quot;:true,&quot;confluence.frontend.in-editor-templates.backend-recovery&quot;:true,&quot;confluence.frontend.in-editor-templates.query-params-state&quot;:true,&quot;confluence.frontend.in-product.help&quot;:true,&quot;confluence.frontend.infi.interaction.notification.updates&quot;:true,&quot;confluence.frontend.inline.comments.nudge&quot;:&quot;variation&quot;,&quot;confluence.frontend.inline.highlights.performance&quot;:&quot;variation&quot;,&quot;confluence.frontend.invite-from-github.cohort&quot;:&quot;not-enrolled&quot;,&quot;confluence.frontend.invite.from.mention&quot;:&quot;variation-source&quot;,&quot;confluence.frontend.live-search&quot;:true,&quot;confluence.frontend.macro.analytics.tracker&quot;:true,&quot;confluence.frontend.macrobrowser.app.discovery&quot;:&quot;not-enrolled&quot;,&quot;confluence.frontend.marketplace-emcee-native-spa-enable&quot;:true,&quot;confluence.frontend.media.cards.new.experience&quot;:true,&quot;confluence.frontend.media.cards.server.side.rendering&quot;:true,&quot;confluence.frontend.media.poll.backoff.factor&quot;:&quot;1.25&quot;,&quot;confluence.frontend.media.poll.intervalms&quot;:&quot;3000.0&quot;,&quot;confluence.frontend.media.poll.maxIntervalms&quot;:&quot;200000.0&quot;,&quot;confluence.frontend.media.poll.maxattempts&quot;:&quot;30.0&quot;,&quot;confluence.frontend.media.viewer.zip.previews&quot;:true,&quot;confluence.frontend.mobile.web.full.page.takeover.variation&quot;:&quot;concrete&quot;,&quot;confluence.frontend.ncs.disconnected.delay.ms&quot;:&quot;0.0&quot;,&quot;confluence.frontend.ncs.use.404&quot;:true,&quot;confluence.frontend.network-status-listener.with-ui&quot;:true,&quot;confluence.frontend.new.feed.cards.observed.analytics&quot;:true,&quot;confluence.frontend.new.feed.rollout&quot;:&quot;on&quot;,&quot;confluence.frontend.newSitePerms&quot;:true,&quot;confluence.frontend.onboarding.account-setup-modal&quot;:&quot;not-enrolled&quot;,&quot;confluence.frontend.onboarding.account-setup-modal.calibration&quot;:&quot;experiment&quot;,&quot;confluence.frontend.onboarding.admin-quickstart-v2&quot;:&quot;enrolled&quot;,&quot;confluence.frontend.onboarding.cache.state&quot;:true,&quot;confluence.frontend.onboarding.editor-onboarding.draft-publish-2&quot;:&quot;enrolled&quot;,&quot;confluence.frontend.onboarding.editor-onboarding.tutorial-template&quot;:&quot;experiment&quot;,&quot;confluence.frontend.onboarding.editor-onboarding.user-tagging&quot;:true,&quot;confluence.frontend.onboarding.established.user&quot;:true,&quot;confluence.frontend.onboarding.experience&quot;:true,&quot;confluence.frontend.onboarding.migrations.quickstart&quot;:&quot;enrolled&quot;,&quot;confluence.frontend.onboarding.migrations.quickstart.calibration&quot;:&quot;control&quot;,&quot;confluence.frontend.onboarding.migrations.site-traits&quot;:true,&quot;confluence.frontend.onboarding.migrations.user-tagging&quot;:true,&quot;confluence.frontend.onboarding.nth-user-quickstart-v2&quot;:&quot;experiment&quot;,&quot;confluence.frontend.onboarding.nth-user-quickstart-v2.calibration&quot;:&quot;experiment&quot;,&quot;confluence.frontend.onboarding.nth.user.quickstart&quot;:&quot;enrolled&quot;,&quot;confluence.frontend.onboarding.nudges&quot;:&quot;enrolled&quot;,&quot;confluence.frontend.onboarding.onboarding-state-refactor&quot;:&quot;not-enrolled&quot;,&quot;confluence.frontend.onboarding.persistent-invite&quot;:&quot;not-enrolled&quot;,&quot;confluence.frontend.onboarding.persistent-invite.calibration&quot;:&quot;not-enrolled&quot;,&quot;confluence.frontend.onboarding.quickstart&quot;:&quot;enrolled&quot;,&quot;confluence.frontend.onboarding.quickstart.nudge&quot;:&quot;enrolled&quot;,&quot;confluence.frontend.onboarding.remove.role.screen&quot;:&quot;experiment&quot;,&quot;confluence.frontend.onboarding.segment&quot;:&quot;control&quot;,&quot;confluence.frontend.onboarding.simplify-admin-setup.test&quot;:&quot;control&quot;,&quot;confluence.frontend.onboarding.simplify.admin.setup&quot;:&quot;not-enrolled&quot;,&quot;confluence.frontend.onboarding.simplify.admin.setup.skip-invite&quot;:&quot;enrolled&quot;,&quot;confluence.frontend.onboarding.simplify.admin.setup.skip-invite.calibration&quot;:&quot;control&quot;,&quot;confluence.frontend.onboarding.xflow.jsw&quot;:&quot;experiment&quot;,&quot;confluence.frontend.org.people.picker.expansion&quot;:&quot;variation&quot;,&quot;confluence.frontend.org.people.picker.in.core.invites&quot;:true,&quot;confluence.frontend.org.people.picker.in.core.invites.prerequisite&quot;:true,&quot;confluence.frontend.page-cards-on-hover&quot;:true,&quot;confluence.frontend.page.comments.new.api&quot;:true,&quot;confluence.frontend.page.history.version&quot;:&quot;v2&quot;,&quot;confluence.frontend.page.statuses&quot;:true,&quot;confluence.frontend.personal.space.backfill&quot;:true,&quot;confluence.frontend.personal.space.backfill.onboarding&quot;:true,&quot;confluence.frontend.presentation.mode&quot;:true,&quot;confluence.frontend.presenter.mode.navigation.menu&quot;:true,&quot;confluence.frontend.pubsub.integration&quot;:true,&quot;confluence.frontend.quick-edit&quot;:true,&quot;confluence.frontend.quick-search.bitbucket&quot;:true,&quot;confluence.frontend.quick-search.google-drive&quot;:true,&quot;confluence.frontend.quick-search.opsgenie&quot;:true,&quot;confluence.frontend.quick-search.trello&quot;:true,&quot;confluence.frontend.quick.reload.strategy&quot;:&quot;SUBSCRIPTIONS&quot;,&quot;confluence.frontend.reactions&quot;:&quot;reactions&quot;,&quot;confluence.frontend.reactions.for.email&quot;:true,&quot;confluence.frontend.related.pages.space.settings&quot;:true,&quot;confluence.frontend.remove.adg3.home.feedback.button&quot;:&quot;v2&quot;,&quot;confluence.frontend.restrictions-dialog-smart-picker&quot;:true,&quot;confluence.frontend.revert.page-migrated.reload.tinymce&quot;:true,&quot;confluence.frontend.rich.ld.test.flag&quot;:&quot;not-enrolled&quot;,&quot;confluence.frontend.search-dialog.use-urs-for-people-search&quot;:true,&quot;confluence.frontend.search.experiment.rollout&quot;:&quot;off&quot;,&quot;confluence.frontend.set.collab.init.timeout&quot;:&quot;0&quot;,&quot;confluence.frontend.shortcuts-experiment&quot;:&quot;off&quot;,&quot;confluence.frontend.show-existing-labels-in-dialog&quot;:true,&quot;confluence.frontend.show.standard.upsell&quot;:true,&quot;confluence.frontend.sort.resolved.comments&quot;:true,&quot;confluence.frontend.space-pages.relevant&quot;:&quot;variant&quot;,&quot;confluence.frontend.space-quick-links&quot;:true,&quot;confluence.frontend.space-settings-v2&quot;:true,&quot;confluence.frontend.space-shortcuts.link-picker&quot;:&quot;off&quot;,&quot;confluence.frontend.space.team.mapping&quot;:&quot;experiment&quot;,&quot;confluence.frontend.spaces-dropdown.create-a-space-move&quot;:&quot;off&quot;,&quot;confluence.frontend.stein.v2&quot;:&quot;not-enrolled&quot;,&quot;confluence.frontend.support.unsupported.fabric.migration&quot;:true,&quot;confluence.frontend.sw.disable.base-and-wiki&quot;:true,&quot;confluence.frontend.sw.disable.home&quot;:true,&quot;confluence.frontend.table-visualization&quot;:true,&quot;confluence.frontend.task.batching.interval&quot;:&quot;3000.0&quot;,&quot;confluence.frontend.template-recommendations-by-title-experiment&quot;:&quot;not-enrolled&quot;,&quot;confluence.frontend.template.editor.media.support&quot;:true,&quot;confluence.frontend.throttle.legacy.macro.query&quot;:true,&quot;confluence.frontend.ufo.enable-smart-links-experience&quot;:true,&quot;confluence.frontend.ufo.rate&quot;:&quot;{}&quot;,&quot;confluence.frontend.ufo.search-dialog&quot;:true,&quot;confluence.frontend.view.all.inline.comments&quot;:&quot;not-enrolled&quot;},&quot;duration&quot;:1.5,&quot;navVersion&quot;:&quot;3&quot;},&quot;tags&quot;:[&quot;performance&quot;],&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;Navigation done&quot;,&quot;messageId&quot;:&quot;ajs-372a3a88-18a2-4a38-939d-22bcef873cdd&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:10.189Z&quot;}],&quot;sentAt&quot;:&quot;2022-09-26T05:59:10.189Z&quot;,&quot;metadata&quot;:{&quot;eventCount&quot;:31,&quot;resilienceMechanism&quot;:&quot;indexeddb&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/gasv3/api/v1/batch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_Profile-598" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;batch&quot;:[{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:08.331Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;confluence-frontend&quot;,&quot;actionSubject&quot;:&quot;main-layout&quot;,&quot;action&quot;:&quot;done&quot;,&quot;actionSubjectId&quot;:&quot;&quot;,&quot;attributes&quot;:{&quot;featureFlags&quot;:{},&quot;duration&quot;:15.799999999813735},&quot;tags&quot;:[&quot;performance&quot;],&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;main-layout done&quot;,&quot;messageId&quot;:&quot;ajs-ba29af55-c42c-4202-b7be-9cc0ab0fc00f&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:10.355Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:08.403Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;performance&quot;,&quot;actionSubject&quot;:&quot;performance&quot;,&quot;action&quot;:&quot;measured&quot;,&quot;attributes&quot;:{&quot;task&quot;:&quot;confluence.fe.page-segment-load.app-navigation&quot;,&quot;properties&quot;:{&quot;event:key&quot;:&quot;confluence.fe.page-segment-load.app-navigation&quot;,&quot;event:type&quot;:&quot;page-segment-load&quot;,&quot;event:product&quot;:&quot;confluence&quot;,&quot;event:route&quot;:&quot;PEOPLE_DIRECTORY&quot;,&quot;event:id&quot;:&quot;app-navigation&quot;,&quot;event:localHour&quot;:11,&quot;event:localDayOfWeek&quot;:1,&quot;event:region&quot;:&quot;confluence-prod-ap-8-3.prod.atl-paas.net&quot;,&quot;app:framework:name&quot;:&quot;react&quot;,&quot;app:framework:version&quot;:&quot;16.14.0&quot;,&quot;app:web:version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;bm:version&quot;:3,&quot;telemetry:browser:name&quot;:&quot;Chrome&quot;,&quot;telemetry:browser:version&quot;:&quot;105.0.0.0&quot;,&quot;telemetry:cpus&quot;:3,&quot;telemetry:memory&quot;:8,&quot;telemetry:network:effectiveType&quot;:&quot;4g&quot;,&quot;telemetry:network:rtt&quot;:200,&quot;telemetry:network:downlink&quot;:5.75,&quot;custom:pageLoadInfo&quot;:{&quot;uuid&quot;:&quot;PEOPLE_DIRECTORY-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171947981&quot;,&quot;isInitial&quot;:false,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:220},&quot;featureFlags&quot;:{&quot;confluence.frontend.pollinator.synthetic.check.tenants&quot;:false,&quot;confluence.frontend.delay.comment.button&quot;:true,&quot;confluence.frontend.delay.page.comments.render&quot;:&quot;delay-render&quot;,&quot;confluence.frontend.enable.external.collab&quot;:false,&quot;confluence.frontend.eop.recommendations.rollout&quot;:&quot;on&quot;,&quot;confluence.frontend.focused.inline.comment.performance&quot;:&quot;variation&quot;,&quot;confluence.frontend.live-search&quot;:true,&quot;confluence.frontend.presentation.mode&quot;:true,&quot;confluence.ssr.fabric.macros&quot;:null,&quot;confluence.ssr.page-tree&quot;:null,&quot;confluence.ssr.page-tree.best.effort&quot;:null,&quot;confluence.ssr.read-time&quot;:null,&quot;confluence.ssr.page-statuses&quot;:null,&quot;confluence.ssr.home.feed.best-effort&quot;:null,&quot;confluence.ssr.shortcuts&quot;:null,&quot;confluence.ssr.shortcuts.link-filter&quot;:null,&quot;confluence.ssr.smartlinks&quot;:null,&quot;confluence.ssr.page-share-and-perms-button&quot;:null,&quot;confluence.frontend.page-share-and-permissions&quot;:false,&quot;confluence.frontend.economy-growth.discover-apps-in-sidebar.experiment&quot;:false,&quot;confluence.frontend.top.level.body.content.query&quot;:false,&quot;confluence.ssr.integrating.public.links.to.nsd&quot;:null,&quot;confluence.frontend.integrating.public.links.to.nsd&quot;:false,&quot;confluence.frontend.fabric.editor.macro.adf.frontend.render&quot;:false,&quot;confluence.frontend.bandana.client.short.socket.timeout&quot;:&quot;50.0&quot;},&quot;hostname&quot;:&quot;thinktimetechnology.atlassian.net&quot;,&quot;confluence:cloudId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;confluence:environment&quot;:&quot;PRODUCTION&quot;,&quot;confluence:shard&quot;:&quot;confluence-prod-ap-8-3.prod.atl-paas.net&quot;,&quot;confluence:ssr&quot;:&quot;false&quot;,&quot;confluence:uniqueIdentifier&quot;:&quot;undefined&quot;,&quot;confluence:initial&quot;:false,&quot;confluence:criticalAssets&quot;:{&quot;cachedRate&quot;:0.5952380952380952,&quot;count&quot;:168,&quot;size&quot;:6214831,&quot;cachedSize&quot;:12473,&quot;nonCachedSize&quot;:6202358,&quot;sizeBasedCachedRate&quot;:0.002006973319145766},&quot;metric:fmp&quot;:220,&quot;metric:tti&quot;:220,&quot;metric:fmp:histogramBuckets&quot;:&quot;500_1000_1500_2000_2500_3000&quot;,&quot;metric:tti:histogramBuckets&quot;:&quot;1000_1500_2000_2500_3000_4000&quot;,&quot;pageVisible:state&quot;:&quot;visible&quot;,&quot;pageVisible:value&quot;:true,&quot;event:initial&quot;:false}},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{&quot;atlOrigin&quot;:&quot;d0c76f0985324bab89c587a95e991470&quot;},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;performance measured&quot;,&quot;messageId&quot;:&quot;ajs-b1e45192-4aaa-4d94-907b-921abd3ecb8f&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:10.355Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:08.689Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;searchDialog&quot;,&quot;actionSubject&quot;:&quot;experiment&quot;,&quot;action&quot;:&quot;loaded&quot;,&quot;attributes&quot;:{&quot;abTest&quot;:{&quot;abTestId&quot;:&quot;google-drive-ab&quot;,&quot;controlId&quot;:&quot;google-drive-hidden&quot;,&quot;experimentId&quot;:&quot;google-drive-hidden&quot;},&quot;experimentRequestDuration&quot;:358,&quot;isMultiProduct&quot;:false,&quot;frontend&quot;:&quot;@atlassian/product-search-dialog@8.69.0&quot;,&quot;isSticky&quot;:true,&quot;isStickyUpdated&quot;:false,&quot;stickyQueryUpdated&quot;:false},&quot;nonPrivacySafeAttributes&quot;:{},&quot;tags&quot;:[&quot;fabricElements&quot;],&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;experiment loaded&quot;,&quot;messageId&quot;:&quot;ajs-62f13114-9a6b-488a-a985-30b7ac3a31f7&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:10.355Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:08.694Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;performance&quot;,&quot;actionSubject&quot;:&quot;performance&quot;,&quot;action&quot;:&quot;measured&quot;,&quot;attributes&quot;:{&quot;task&quot;:&quot;confluence.fe.page-segment-load.search-box&quot;,&quot;properties&quot;:{&quot;event:key&quot;:&quot;confluence.fe.page-segment-load.search-box&quot;,&quot;event:type&quot;:&quot;page-segment-load&quot;,&quot;event:product&quot;:&quot;confluence&quot;,&quot;event:route&quot;:&quot;PEOPLE_DIRECTORY&quot;,&quot;event:id&quot;:&quot;search-box&quot;,&quot;event:localHour&quot;:11,&quot;event:localDayOfWeek&quot;:1,&quot;event:region&quot;:&quot;confluence-prod-ap-8-3.prod.atl-paas.net&quot;,&quot;app:framework:name&quot;:&quot;react&quot;,&quot;app:framework:version&quot;:&quot;16.14.0&quot;,&quot;app:web:version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;bm:version&quot;:3,&quot;telemetry:browser:name&quot;:&quot;Chrome&quot;,&quot;telemetry:browser:version&quot;:&quot;105.0.0.0&quot;,&quot;telemetry:cpus&quot;:3,&quot;telemetry:memory&quot;:8,&quot;telemetry:network:effectiveType&quot;:&quot;4g&quot;,&quot;telemetry:network:rtt&quot;:200,&quot;telemetry:network:downlink&quot;:5.75,&quot;custom:pageLoadInfo&quot;:{&quot;uuid&quot;:&quot;PEOPLE_DIRECTORY-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171947981&quot;,&quot;isInitial&quot;:false,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:705.6000000005588},&quot;featureFlags&quot;:{&quot;confluence.frontend.pollinator.synthetic.check.tenants&quot;:false,&quot;confluence.frontend.delay.comment.button&quot;:true,&quot;confluence.frontend.delay.page.comments.render&quot;:&quot;delay-render&quot;,&quot;confluence.frontend.enable.external.collab&quot;:false,&quot;confluence.frontend.eop.recommendations.rollout&quot;:&quot;on&quot;,&quot;confluence.frontend.focused.inline.comment.performance&quot;:&quot;variation&quot;,&quot;confluence.frontend.live-search&quot;:true,&quot;confluence.frontend.presentation.mode&quot;:true,&quot;confluence.ssr.fabric.macros&quot;:null,&quot;confluence.ssr.page-tree&quot;:null,&quot;confluence.ssr.page-tree.best.effort&quot;:null,&quot;confluence.ssr.read-time&quot;:null,&quot;confluence.ssr.page-statuses&quot;:null,&quot;confluence.ssr.home.feed.best-effort&quot;:null,&quot;confluence.ssr.shortcuts&quot;:null,&quot;confluence.ssr.shortcuts.link-filter&quot;:null,&quot;confluence.ssr.smartlinks&quot;:null,&quot;confluence.ssr.page-share-and-perms-button&quot;:null,&quot;confluence.frontend.page-share-and-permissions&quot;:false,&quot;confluence.frontend.economy-growth.discover-apps-in-sidebar.experiment&quot;:false,&quot;confluence.frontend.top.level.body.content.query&quot;:false,&quot;confluence.ssr.integrating.public.links.to.nsd&quot;:null,&quot;confluence.frontend.integrating.public.links.to.nsd&quot;:false,&quot;confluence.frontend.fabric.editor.macro.adf.frontend.render&quot;:false,&quot;confluence.frontend.bandana.client.short.socket.timeout&quot;:&quot;50.0&quot;},&quot;hostname&quot;:&quot;thinktimetechnology.atlassian.net&quot;,&quot;confluence:cloudId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;confluence:environment&quot;:&quot;PRODUCTION&quot;,&quot;confluence:shard&quot;:&quot;confluence-prod-ap-8-3.prod.atl-paas.net&quot;,&quot;confluence:ssr&quot;:&quot;false&quot;,&quot;confluence:uniqueIdentifier&quot;:&quot;undefined&quot;,&quot;confluence:initial&quot;:false,&quot;confluence:criticalAssets&quot;:{&quot;cachedRate&quot;:0.5952380952380952,&quot;count&quot;:168,&quot;size&quot;:6214831,&quot;cachedSize&quot;:12473,&quot;nonCachedSize&quot;:6202358,&quot;sizeBasedCachedRate&quot;:0.002006973319145766},&quot;metric:fmp&quot;:706,&quot;metric:tti&quot;:706,&quot;metric:fmp:histogramBuckets&quot;:&quot;500_1000_1500_2000_2500_3000&quot;,&quot;metric:tti:histogramBuckets&quot;:&quot;1000_1500_2000_2500_3000_4000&quot;,&quot;pageVisible:state&quot;:&quot;visible&quot;,&quot;pageVisible:value&quot;:true,&quot;event:initial&quot;:false,&quot;timings:bundleEval&quot;:{&quot;PeopleDirectory(0)&quot;:{&quot;startTime&quot;:167,&quot;duration&quot;:392}}}},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;performance measured&quot;,&quot;messageId&quot;:&quot;ajs-22748a42-00c6-47d1-ad26-f631ef939f34&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:10.355Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:08.777Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;confluence-frontend&quot;,&quot;actionSubject&quot;:&quot;forceUpdateSPA&quot;,&quot;action&quot;:&quot;checked&quot;,&quot;attributes&quot;:{&quot;navigationStart&quot;:1664171905322,&quot;buildDate&quot;:1663854142232,&quot;forceUpdateTimestamp&quot;:1600714486414},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;forceUpdateSPA checked&quot;,&quot;messageId&quot;:&quot;ajs-a690bb39-8b9c-44d7-97ab-a1f5e530eba2&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:10.355Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:09.313Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskSuccess&quot;,&quot;attributes&quot;:{&quot;uuid&quot;:&quot;PEOPLE_DIRECTORY-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171947981&quot;,&quot;isInitial&quot;:false,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:1325,&quot;startTime&quot;:42882.700000000186,&quot;duration&quot;:1102,&quot;activeDuration&quot;:1102,&quot;adjustedDuration&quot;:1102,&quot;task&quot;:&quot;extension_point_home_header&quot;,&quot;taskId&quot;:&quot;53127812-40bd-41c0-aae6-5e6c20f54575&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskSuccess&quot;,&quot;messageId&quot;:&quot;ajs-eaa9530d-dbec-48ee-8e74-39f801cb3662&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:10.355Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:09.317Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskSuccess&quot;,&quot;attributes&quot;:{&quot;uuid&quot;:&quot;PEOPLE_DIRECTORY-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171947981&quot;,&quot;isInitial&quot;:false,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:1336,&quot;startTime&quot;:42882.90000000037,&quot;duration&quot;:1113,&quot;activeDuration&quot;:1113,&quot;adjustedDuration&quot;:1113,&quot;task&quot;:&quot;extension_point_home_footer&quot;,&quot;taskId&quot;:&quot;06681039-837f-4f1b-b982-b6aeb26a1254&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskSuccess&quot;,&quot;messageId&quot;:&quot;ajs-1aac843a-a18d-4710-b99e-2a792640c70a&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:10.355Z&quot;}],&quot;sentAt&quot;:&quot;2022-09-26T05:59:10.355Z&quot;,&quot;metadata&quot;:{&quot;eventCount&quot;:10,&quot;resilienceMechanism&quot;:&quot;indexeddb&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/gasv3/api/v1/batch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_Profile-599" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;context&quot;:{&quot;contextType&quot;:&quot;atlassianDirectory&quot;,&quot;principalId&quot;:&quot;${acc}&quot;,&quot;siteId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;sessionId&quot;:&quot;67d7b692-157d-4afc-bf35-94ee850e3a60&quot;},&quot;containerTypes&quot;:[&quot;confluenceSpace&quot;,&quot;jiraProject&quot;],&quot;maxNumberOfResults&quot;:4,&quot;userId&quot;:&quot;${acc}&quot;,&quot;expanded&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/collaboration/v1/collaborationgraph/user/container</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="04_Profile-600" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument" enabled="true">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;ReadMediaToken&quot;,&quot;variables&quot;:{&quot;id&quot;:&quot;63294f8014c6b4b2210a37c1&quot;,&quot;type&quot;:&quot;user&quot;,&quot;headerImageId&quot;:&quot;&quot;},&quot;query&quot;:&quot;query ReadMediaToken($id: String!, $type: UserAndTeamEnum!) {\n  MediaToken: ReadMediaToken(id: $id, type: $type) {\n    token\n    baseUrl\n    headerImageId\n    __typename\n  }\n}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/directory/graphql?q=ReadMediaToken</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="GraphQLHTTPSampler.operationName">ReadMediaToken</stringProp>
            <stringProp name="GraphQLHTTPSampler.query">query ReadMediaToken($id: String!, $type: UserAndTeamEnum!) {
  MediaToken: ReadMediaToken(id: $id, type: $type) {
    token
    baseUrl
    headerImageId
    __typename
  }
}
</stringProp>
            <stringProp name="GraphQLHTTPSampler.variables">{&quot;id&quot;:&quot;63294f8014c6b4b2210a37c1&quot;,&quot;type&quot;:&quot;user&quot;,&quot;headerImageId&quot;:&quot;&quot;}</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_Profile-601" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="userEmail" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userEmail</stringProp>
                  <stringProp name="Argument.value">${user}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/teamsslack/api/user/deeplink</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_Profile-605" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">home-static.us-east-1.prod.public.atl-paas.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/confluence-page-icon.svg</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_Profile-602" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;batch&quot;:[{&quot;context&quot;:{&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:09.637Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;people&quot;,&quot;subproduct&quot;:&quot;confluence-directory&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;containerType&quot;:null,&quot;containerId&quot;:null,&quot;source&quot;:&quot;clientMetrics&quot;,&quot;objectType&quot;:null,&quot;objectId&quot;:null,&quot;actionSubject&quot;:&quot;profile-page.view&quot;,&quot;action&quot;:&quot;mounted&quot;,&quot;actionSubjectId&quot;:null,&quot;attributes&quot;:null,&quot;tags&quot;:[],&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;ad26d811-6e54-477e-b3a3-072c71850b2a&quot;},&quot;event&quot;:&quot;profile-page.view mounted&quot;,&quot;messageId&quot;:&quot;ajs-ca33dc70-7b96-407d-b737-3d0dd98bd51e&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:11.424Z&quot;},{&quot;context&quot;:{&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:09.638Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;people&quot;,&quot;subproduct&quot;:&quot;confluence-directory&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;containerType&quot;:null,&quot;containerId&quot;:null,&quot;source&quot;:&quot;clientMetrics&quot;,&quot;objectType&quot;:null,&quot;objectId&quot;:null,&quot;actionSubject&quot;:&quot;profile-page.view&quot;,&quot;action&quot;:&quot;mounted&quot;,&quot;actionSubjectId&quot;:null,&quot;attributes&quot;:null,&quot;tags&quot;:[],&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;ad26d811-6e54-477e-b3a3-072c71850b2a&quot;},&quot;event&quot;:&quot;profile-page.view mounted&quot;,&quot;messageId&quot;:&quot;ajs-203a08f3-c231-4657-93ab-0b0377359735&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:11.424Z&quot;},{&quot;context&quot;:{&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:09.819Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;people&quot;,&quot;subproduct&quot;:&quot;confluence-directory&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;containerType&quot;:null,&quot;containerId&quot;:null,&quot;source&quot;:&quot;clientMetrics&quot;,&quot;objectType&quot;:null,&quot;objectId&quot;:null,&quot;actionSubject&quot;:&quot;userProfile_render&quot;,&quot;action&quot;:&quot;taskStart&quot;,&quot;actionSubjectId&quot;:null,&quot;attributes&quot;:{&quot;latencySlo&quot;:1000,&quot;isStandalone&quot;:false},&quot;tags&quot;:[],&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;ad26d811-6e54-477e-b3a3-072c71850b2a&quot;},&quot;event&quot;:&quot;userProfile_render taskStart&quot;,&quot;messageId&quot;:&quot;ajs-1dfefea7-dd6c-414a-a9de-dc6f04b35d4b&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:11.424Z&quot;},{&quot;context&quot;:{&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:09.819Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;people&quot;,&quot;subproduct&quot;:&quot;confluence-directory&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;containerType&quot;:null,&quot;containerId&quot;:null,&quot;source&quot;:&quot;clientMetrics&quot;,&quot;objectType&quot;:null,&quot;objectId&quot;:null,&quot;actionSubject&quot;:&quot;userProfile_renderSlow&quot;,&quot;action&quot;:&quot;taskStart&quot;,&quot;actionSubjectId&quot;:null,&quot;attributes&quot;:{&quot;latencySlo&quot;:4000,&quot;isStandalone&quot;:false},&quot;tags&quot;:[],&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;ad26d811-6e54-477e-b3a3-072c71850b2a&quot;},&quot;event&quot;:&quot;userProfile_renderSlow taskStart&quot;,&quot;messageId&quot;:&quot;ajs-a7df3abc-13ee-4978-b73a-0ebcfeb94abe&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:11.424Z&quot;},{&quot;context&quot;:{&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:09.853Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;people&quot;,&quot;subproduct&quot;:&quot;confluence-directory&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;containerType&quot;:null,&quot;containerId&quot;:null,&quot;source&quot;:&quot;clientMetrics&quot;,&quot;objectType&quot;:null,&quot;objectId&quot;:null,&quot;actionSubject&quot;:&quot;userProfile_userAbout&quot;,&quot;action&quot;:&quot;taskStart&quot;,&quot;actionSubjectId&quot;:null,&quot;attributes&quot;:{&quot;userId&quot;:&quot;${acc}&quot;,&quot;currentUserId&quot;:&quot;${acc}&quot;,&quot;startTime&quot;:1664171949852,&quot;isStandalone&quot;:false},&quot;tags&quot;:[],&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;ad26d811-6e54-477e-b3a3-072c71850b2a&quot;},&quot;event&quot;:&quot;userProfile_userAbout taskStart&quot;,&quot;messageId&quot;:&quot;ajs-bdf759be-427c-4315-8f05-161d245d68f7&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:11.424Z&quot;},{&quot;context&quot;:{&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:09.856Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;people&quot;,&quot;subproduct&quot;:&quot;confluence-directory&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;containerType&quot;:null,&quot;containerId&quot;:null,&quot;source&quot;:&quot;clientMetrics&quot;,&quot;objectType&quot;:null,&quot;objectId&quot;:null,&quot;actionSubject&quot;:&quot;userProfile_usersTeams&quot;,&quot;action&quot;:&quot;taskStart&quot;,&quot;actionSubjectId&quot;:null,&quot;attributes&quot;:{&quot;userId&quot;:&quot;${acc}&quot;,&quot;startTime&quot;:1664171949847,&quot;isStandalone&quot;:false},&quot;tags&quot;:[],&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;ad26d811-6e54-477e-b3a3-072c71850b2a&quot;},&quot;event&quot;:&quot;userProfile_usersTeams taskStart&quot;,&quot;messageId&quot;:&quot;ajs-19898f37-59ea-44ae-96a0-b942df5c53c9&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:11.424Z&quot;},{&quot;context&quot;:{&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:09.868Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;people&quot;,&quot;subproduct&quot;:&quot;confluence-directory&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;containerType&quot;:null,&quot;containerId&quot;:null,&quot;source&quot;:&quot;clientMetrics&quot;,&quot;objectType&quot;:null,&quot;objectId&quot;:null,&quot;actionSubject&quot;:&quot;userProfile_workedOn&quot;,&quot;action&quot;:&quot;taskStart&quot;,&quot;actionSubjectId&quot;:null,&quot;attributes&quot;:{&quot;isStandalone&quot;:false},&quot;tags&quot;:[],&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;ad26d811-6e54-477e-b3a3-072c71850b2a&quot;},&quot;event&quot;:&quot;userProfile_workedOn taskStart&quot;,&quot;messageId&quot;:&quot;ajs-374527a0-0fdc-49d1-a97c-4dd9c6f1f542&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:11.424Z&quot;}],&quot;sentAt&quot;:&quot;2022-09-26T05:59:11.424Z&quot;,&quot;metadata&quot;:{&quot;resilienceMechanism&quot;:&quot;indexeddb&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/gasv3/api/v1/batch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_Profile-604" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;batch&quot;:[{&quot;context&quot;:{&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:09.873Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;people&quot;,&quot;subproduct&quot;:&quot;confluence-directory&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;containerType&quot;:null,&quot;containerId&quot;:null,&quot;source&quot;:&quot;clientMetrics&quot;,&quot;objectType&quot;:null,&quot;objectId&quot;:null,&quot;actionSubject&quot;:&quot;userProfile_collaborators&quot;,&quot;action&quot;:&quot;taskStart&quot;,&quot;actionSubjectId&quot;:null,&quot;attributes&quot;:{&quot;isStandalone&quot;:false},&quot;tags&quot;:[],&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;ad26d811-6e54-477e-b3a3-072c71850b2a&quot;},&quot;event&quot;:&quot;userProfile_collaborators taskStart&quot;,&quot;messageId&quot;:&quot;ajs-f256915d-881b-492c-9974-548ca31d329b&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:11.432Z&quot;},{&quot;context&quot;:{&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:10.067Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;people&quot;,&quot;subproduct&quot;:&quot;confluence-directory&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;containerType&quot;:null,&quot;containerId&quot;:null,&quot;source&quot;:&quot;clientMetrics&quot;,&quot;objectType&quot;:null,&quot;objectId&quot;:null,&quot;actionSubject&quot;:&quot;userProfile_managersAndTeams&quot;,&quot;action&quot;:&quot;taskStart&quot;,&quot;actionSubjectId&quot;:null,&quot;attributes&quot;:{&quot;isStandalone&quot;:false,&quot;hasBrowseUsersPermission&quot;:true},&quot;tags&quot;:[],&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;ad26d811-6e54-477e-b3a3-072c71850b2a&quot;},&quot;event&quot;:&quot;userProfile_managersAndTeams taskStart&quot;,&quot;messageId&quot;:&quot;ajs-947da0f9-7c38-450e-99b2-959c56acc42e&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:11.432Z&quot;},{&quot;context&quot;:{&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:10.069Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;people&quot;,&quot;subproduct&quot;:&quot;confluence-directory&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;containerType&quot;:null,&quot;containerId&quot;:null,&quot;source&quot;:&quot;directoryApp&quot;,&quot;objectType&quot;:null,&quot;objectId&quot;:null,&quot;actionSubject&quot;:&quot;GetSettings&quot;,&quot;action&quot;:&quot;succeeded&quot;,&quot;actionSubjectId&quot;:null,&quot;attributes&quot;:null,&quot;tags&quot;:[],&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;ad26d811-6e54-477e-b3a3-072c71850b2a&quot;},&quot;event&quot;:&quot;GetSettings succeeded&quot;,&quot;messageId&quot;:&quot;ajs-7fd5efb6-1f86-476d-ab12-9351df3a229c&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:11.432Z&quot;},{&quot;context&quot;:{&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:10.610Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;people&quot;,&quot;subproduct&quot;:&quot;confluence-directory&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;containerType&quot;:null,&quot;containerId&quot;:null,&quot;source&quot;:&quot;clientMetrics&quot;,&quot;objectType&quot;:null,&quot;objectId&quot;:null,&quot;actionSubject&quot;:&quot;userProfile_container&quot;,&quot;action&quot;:&quot;taskStart&quot;,&quot;actionSubjectId&quot;:null,&quot;attributes&quot;:{&quot;isStandalone&quot;:false,&quot;hasBrowseUsersPermission&quot;:true},&quot;tags&quot;:[],&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;ad26d811-6e54-477e-b3a3-072c71850b2a&quot;},&quot;event&quot;:&quot;userProfile_container taskStart&quot;,&quot;messageId&quot;:&quot;ajs-5bfc97df-aa99-470a-8438-1db0e21e2bd6&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:11.432Z&quot;},{&quot;context&quot;:{&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:10.621Z&quot;,&quot;type&quot;:&quot;page&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;people&quot;,&quot;subproduct&quot;:&quot;confluence-directory&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;title&quot;:&quot;&quot;,&quot;path&quot;:&quot;&quot;,&quot;url&quot;:&quot;&quot;,&quot;referrer&quot;:&quot;&quot;,&quot;search&quot;:&quot;&quot;,&quot;eventType&quot;:&quot;screen&quot;,&quot;attributes&quot;:{&quot;src&quot;:&quot;usermenu&quot;,&quot;ref&quot;:&quot;&quot;,&quot;isCurrentUser&quot;:true},&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;ad26d811-6e54-477e-b3a3-072c71850b2a&quot;},&quot;name&quot;:&quot;userProfileScreen&quot;,&quot;messageId&quot;:&quot;ajs-0aad5880-d4c0-4806-a953-f54668bfdbc8&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:11.432Z&quot;},{&quot;context&quot;:{&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:11.068Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;people&quot;,&quot;subproduct&quot;:&quot;confluence-directory&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;containerType&quot;:null,&quot;containerId&quot;:null,&quot;source&quot;:&quot;clientMetrics&quot;,&quot;objectType&quot;:null,&quot;objectId&quot;:null,&quot;actionSubject&quot;:&quot;userProfile_userAbout&quot;,&quot;action&quot;:&quot;taskSuccess&quot;,&quot;actionSubjectId&quot;:null,&quot;attributes&quot;:{&quot;userId&quot;:&quot;${acc}&quot;,&quot;currentUserId&quot;:&quot;${acc}&quot;,&quot;startTime&quot;:1664171949852,&quot;isStandalone&quot;:false,&quot;hasBrowseUsersPermission&quot;:true},&quot;tags&quot;:[],&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;ad26d811-6e54-477e-b3a3-072c71850b2a&quot;},&quot;event&quot;:&quot;userProfile_userAbout taskSuccess&quot;,&quot;messageId&quot;:&quot;ajs-93255f3d-f932-4d47-8eb2-87a7d9e64a29&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:11.432Z&quot;},{&quot;context&quot;:{&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:11.069Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;people&quot;,&quot;subproduct&quot;:&quot;confluence-directory&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;containerType&quot;:null,&quot;containerId&quot;:null,&quot;source&quot;:&quot;userProfileScreen&quot;,&quot;objectType&quot;:null,&quot;objectId&quot;:null,&quot;actionSubject&quot;:&quot;userProfileScreenAboutPanel&quot;,&quot;action&quot;:&quot;viewed&quot;,&quot;actionSubjectId&quot;:null,&quot;attributes&quot;:{&quot;nonEmptyFields&quot;:&quot;[]&quot;},&quot;tags&quot;:[],&quot;eventType&quot;:&quot;track&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;ad26d811-6e54-477e-b3a3-072c71850b2a&quot;},&quot;event&quot;:&quot;userProfileScreenAboutPanel viewed&quot;,&quot;messageId&quot;:&quot;ajs-0ccc9f41-a291-4211-9881-3c73bf16ca0d&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:11.432Z&quot;}],&quot;sentAt&quot;:&quot;2022-09-26T05:59:11.432Z&quot;,&quot;metadata&quot;:{&quot;resilienceMechanism&quot;:&quot;indexeddb&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/gasv3/api/v1/batch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_Profile-606" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;batch&quot;:[{&quot;context&quot;:{&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:11.227Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;people&quot;,&quot;subproduct&quot;:&quot;confluence-directory&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;containerType&quot;:null,&quot;containerId&quot;:null,&quot;source&quot;:&quot;clientMetrics&quot;,&quot;objectType&quot;:null,&quot;objectId&quot;:null,&quot;actionSubject&quot;:&quot;userProfile_workedOn&quot;,&quot;action&quot;:&quot;taskSuccess&quot;,&quot;actionSubjectId&quot;:null,&quot;attributes&quot;:{&quot;isStandalone&quot;:false,&quot;hasBrowseUsersPermission&quot;:true},&quot;tags&quot;:[],&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;ad26d811-6e54-477e-b3a3-072c71850b2a&quot;},&quot;event&quot;:&quot;userProfile_workedOn taskSuccess&quot;,&quot;messageId&quot;:&quot;ajs-955af3f4-e928-4349-8fdf-0bbfdf59d4fa&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:13.153Z&quot;},{&quot;context&quot;:{&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:11.228Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;people&quot;,&quot;subproduct&quot;:&quot;confluence-directory&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;containerType&quot;:null,&quot;containerId&quot;:null,&quot;source&quot;:&quot;userProfileScreen&quot;,&quot;objectType&quot;:null,&quot;objectId&quot;:null,&quot;actionSubject&quot;:&quot;collaboration-graph&quot;,&quot;action&quot;:&quot;requested&quot;,&quot;actionSubjectId&quot;:null,&quot;attributes&quot;:{&quot;resultLength&quot;:0,&quot;sessionId&quot;:&quot;0c997d33-b071-43ce-aac5-f708c4a7dd03&quot;,&quot;resultIds&quot;:[],&quot;endpoint&quot;:&quot;userToUser&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;elapsedTimeMs&quot;:1159.2000000001863},&quot;tags&quot;:[],&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;ad26d811-6e54-477e-b3a3-072c71850b2a&quot;},&quot;event&quot;:&quot;collaboration-graph requested&quot;,&quot;messageId&quot;:&quot;ajs-ea4f25db-f989-4fe1-b45f-3daaa235eeb4&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:13.153Z&quot;},{&quot;context&quot;:{&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:11.253Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;people&quot;,&quot;subproduct&quot;:&quot;confluence-directory&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;containerType&quot;:null,&quot;containerId&quot;:null,&quot;source&quot;:&quot;clientMetrics&quot;,&quot;objectType&quot;:null,&quot;objectId&quot;:null,&quot;actionSubject&quot;:&quot;userProfile_usersTeams&quot;,&quot;action&quot;:&quot;taskSuccess&quot;,&quot;actionSubjectId&quot;:null,&quot;attributes&quot;:{&quot;userId&quot;:&quot;${acc}&quot;,&quot;startTime&quot;:1664171949847,&quot;isStandalone&quot;:false,&quot;hasBrowseUsersPermission&quot;:true},&quot;tags&quot;:[],&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;ad26d811-6e54-477e-b3a3-072c71850b2a&quot;},&quot;event&quot;:&quot;userProfile_usersTeams taskSuccess&quot;,&quot;messageId&quot;:&quot;ajs-edff51b0-59b7-48fa-ac11-69339bc9f450&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:13.153Z&quot;},{&quot;context&quot;:{&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:11.278Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;people&quot;,&quot;subproduct&quot;:&quot;confluence-directory&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;containerType&quot;:null,&quot;containerId&quot;:null,&quot;source&quot;:&quot;userProfileScreen&quot;,&quot;objectType&quot;:null,&quot;objectId&quot;:null,&quot;actionSubject&quot;:&quot;ReportingLinesEmptyState&quot;,&quot;action&quot;:&quot;viewed&quot;,&quot;actionSubjectId&quot;:null,&quot;attributes&quot;:{&quot;isAdmin&quot;:false,&quot;product&quot;:&quot;Confluence&quot;,&quot;workspaceUuid&quot;:null},&quot;tags&quot;:[&quot;watermelon&quot;],&quot;eventType&quot;:&quot;ui&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;ad26d811-6e54-477e-b3a3-072c71850b2a&quot;},&quot;event&quot;:&quot;ReportingLinesEmptyState viewed&quot;,&quot;messageId&quot;:&quot;ajs-dd6b9115-dd97-4c8b-b8be-8613eb1453ff&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:13.153Z&quot;},{&quot;context&quot;:{&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:11.279Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;people&quot;,&quot;subproduct&quot;:&quot;confluence-directory&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;containerType&quot;:null,&quot;containerId&quot;:null,&quot;source&quot;:&quot;clientMetrics&quot;,&quot;objectType&quot;:null,&quot;objectId&quot;:null,&quot;actionSubject&quot;:&quot;userProfile_managersAndTeams&quot;,&quot;action&quot;:&quot;taskSuccess&quot;,&quot;actionSubjectId&quot;:null,&quot;attributes&quot;:{&quot;isStandalone&quot;:false,&quot;hasBrowseUsersPermission&quot;:true},&quot;tags&quot;:[],&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;ad26d811-6e54-477e-b3a3-072c71850b2a&quot;},&quot;event&quot;:&quot;userProfile_managersAndTeams taskSuccess&quot;,&quot;messageId&quot;:&quot;ajs-e17b240e-fa08-4bf9-a535-5bf526260e99&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:13.153Z&quot;},{&quot;context&quot;:{&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:11.278Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;people&quot;,&quot;subproduct&quot;:&quot;confluence-directory&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;containerType&quot;:null,&quot;containerId&quot;:null,&quot;source&quot;:&quot;clientMetrics&quot;,&quot;objectType&quot;:null,&quot;objectId&quot;:null,&quot;actionSubject&quot;:&quot;userProfile_collaborators&quot;,&quot;action&quot;:&quot;taskSuccess&quot;,&quot;actionSubjectId&quot;:null,&quot;attributes&quot;:{&quot;isStandalone&quot;:false,&quot;hasBrowseUsersPermission&quot;:true},&quot;tags&quot;:[],&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;ad26d811-6e54-477e-b3a3-072c71850b2a&quot;},&quot;event&quot;:&quot;userProfile_collaborators taskSuccess&quot;,&quot;messageId&quot;:&quot;ajs-6fea2762-f470-40ea-b0e5-431bbc7f8309&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:13.153Z&quot;},{&quot;context&quot;:{&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:11.648Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;people&quot;,&quot;subproduct&quot;:&quot;confluence-directory&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;containerType&quot;:null,&quot;containerId&quot;:null,&quot;source&quot;:&quot;clientMetrics&quot;,&quot;objectType&quot;:null,&quot;objectId&quot;:null,&quot;actionSubject&quot;:&quot;userProfile_render&quot;,&quot;action&quot;:&quot;taskSuccess&quot;,&quot;actionSubjectId&quot;:null,&quot;attributes&quot;:{&quot;sloSatisfied&quot;:false,&quot;taskDuration&quot;:1830,&quot;latencySlo&quot;:1000,&quot;isStandalone&quot;:false,&quot;hasBrowseUsersPermission&quot;:true},&quot;tags&quot;:[],&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;ad26d811-6e54-477e-b3a3-072c71850b2a&quot;},&quot;event&quot;:&quot;userProfile_render taskSuccess&quot;,&quot;messageId&quot;:&quot;ajs-f3727972-ca7f-4e8f-b63c-7e341ea4a872&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:13.153Z&quot;}],&quot;sentAt&quot;:&quot;2022-09-26T05:59:13.153Z&quot;,&quot;metadata&quot;:{&quot;eventCount&quot;:4,&quot;resilienceMechanism&quot;:&quot;indexeddb&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/gasv3/api/v1/batch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_Profile-607" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;batch&quot;:[{&quot;context&quot;:{&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:11.648Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;people&quot;,&quot;subproduct&quot;:&quot;confluence-directory&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;containerType&quot;:null,&quot;containerId&quot;:null,&quot;source&quot;:&quot;clientMetrics&quot;,&quot;objectType&quot;:null,&quot;objectId&quot;:null,&quot;actionSubject&quot;:&quot;userProfile_renderSlow&quot;,&quot;action&quot;:&quot;taskSuccess&quot;,&quot;actionSubjectId&quot;:null,&quot;attributes&quot;:{&quot;sloSatisfied&quot;:true,&quot;taskDuration&quot;:1829,&quot;latencySlo&quot;:4000,&quot;isStandalone&quot;:false,&quot;hasBrowseUsersPermission&quot;:true},&quot;tags&quot;:[],&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;ad26d811-6e54-477e-b3a3-072c71850b2a&quot;},&quot;event&quot;:&quot;userProfile_renderSlow taskSuccess&quot;,&quot;messageId&quot;:&quot;ajs-7c3ee9da-3a5b-4f68-a25d-7406b8009080&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:13.160Z&quot;},{&quot;context&quot;:{&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:11.648Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;people&quot;,&quot;subproduct&quot;:&quot;confluence-directory&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;containerType&quot;:null,&quot;containerId&quot;:null,&quot;source&quot;:&quot;clientMetrics&quot;,&quot;objectType&quot;:null,&quot;objectId&quot;:null,&quot;actionSubject&quot;:&quot;userProfile_container&quot;,&quot;action&quot;:&quot;taskSuccess&quot;,&quot;actionSubjectId&quot;:null,&quot;attributes&quot;:{&quot;isStandalone&quot;:false,&quot;hasBrowseUsersPermission&quot;:true},&quot;tags&quot;:[],&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;ad26d811-6e54-477e-b3a3-072c71850b2a&quot;},&quot;event&quot;:&quot;userProfile_container taskSuccess&quot;,&quot;messageId&quot;:&quot;ajs-c4a9ffe5-ab8d-46ff-b7eb-fe216aa8d548&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:13.160Z&quot;},{&quot;context&quot;:{&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:11.649Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;people&quot;,&quot;subproduct&quot;:&quot;confluence-directory&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;containerType&quot;:null,&quot;containerId&quot;:null,&quot;source&quot;:&quot;userProfileScreen&quot;,&quot;objectType&quot;:null,&quot;objectId&quot;:null,&quot;actionSubject&quot;:&quot;collaboration-graph&quot;,&quot;action&quot;:&quot;requested&quot;,&quot;actionSubjectId&quot;:null,&quot;attributes&quot;:{&quot;resultLength&quot;:1,&quot;sessionId&quot;:&quot;67d7b692-157d-4afc-bf35-94ee850e3a60&quot;,&quot;resultIds&quot;:[&quot;5767396&quot;],&quot;endpoint&quot;:&quot;userToContainer&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;elapsedTimeMs&quot;:1028.6000000005588},&quot;tags&quot;:[],&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;ad26d811-6e54-477e-b3a3-072c71850b2a&quot;},&quot;event&quot;:&quot;collaboration-graph requested&quot;,&quot;messageId&quot;:&quot;ajs-6d3cbeaa-c14f-404e-9f00-a4b90f3b5d82&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:13.160Z&quot;}],&quot;sentAt&quot;:&quot;2022-09-26T05:59:13.160Z&quot;,&quot;metadata&quot;:{&quot;eventCount&quot;:4,&quot;resilienceMechanism&quot;:&quot;indexeddb&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/gasv3/api/v1/batch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_Profile-603" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">confluence-v1.prod.atl-paas.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/master/P3Ag6zG3oE.svg</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_Profile-608" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/session/heartbeat</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="05_Logout" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_Profile-610" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;type&quot;:&quot;metric&quot;,&quot;meta&quot;:{&quot;globalTags&quot;:[&quot;page:PEOPLE_DIRECTORY&quot;,&quot;cloudId:f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;shard:confluence-prod-ap-8-3.prod.atl-paas.net&quot;,&quot;product:confluence&quot;,&quot;version:CLASSIC-master-12091&quot;,&quot;track:prod&quot;]},&quot;data&quot;:[{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:navigation/app-nav-global-navigation&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskStart&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:PEOPLE_DIRECTORY-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171947981&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:false&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:180.30000000074506&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:59:08.161Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:onboarding-editor/recent-draft-spotlight&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskAbort&quot;,&quot;isActiveTab:true&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:59:08.174Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:onboarding-editor/recent-draft-spotlight&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskStart&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:PEOPLE_DIRECTORY-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171947981&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:false&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:193&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:59:08.174Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:navigation/app-nav-global-navigation&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskSuccess&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:PEOPLE_DIRECTORY-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171947981&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:false&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:220&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:59:08.201Z&quot;},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;experience-tracker:navigation/app-nav-global-navigation.performance&quot;,&quot;value&quot;:40,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskSuccess&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:PEOPLE_DIRECTORY-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171947981&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:false&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:220&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:59:08.201Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:extension_point_home_header&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskStart&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:PEOPLE_DIRECTORY-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171947981&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:false&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:223.30000000074506&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:59:08.204Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:extension_point_home_footer&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskStart&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:PEOPLE_DIRECTORY-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171947981&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:false&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:223.40000000037253&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:59:08.204Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:onboarding-quickstart&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskStart&quot;,&quot;isActiveTab:true&quot;,&quot;quickstartType:nthUserQuickstartV2&quot;,&quot;uuid:PEOPLE_DIRECTORY-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171947981&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:false&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:307.40000000037253&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:59:08.288Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:onboarding-quickstart&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskSuccess&quot;,&quot;isActiveTab:true&quot;,&quot;quickstartType:nthUserQuickstartV2&quot;,&quot;uuid:PEOPLE_DIRECTORY-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171947981&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:false&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:307.6000000005588&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:59:08.288Z&quot;},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;experience-tracker:onboarding-quickstart.performance&quot;,&quot;value&quot;:0,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskSuccess&quot;,&quot;isActiveTab:true&quot;,&quot;quickstartType:nthUserQuickstartV2&quot;,&quot;uuid:PEOPLE_DIRECTORY-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171947981&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:false&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:307.6000000005588&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:59:08.288Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:extension_point_home_header&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskSuccess&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:PEOPLE_DIRECTORY-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171947981&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:false&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:1325&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:59:09.306Z&quot;},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;experience-tracker:extension_point_home_header.performance&quot;,&quot;value&quot;:1102,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskSuccess&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:PEOPLE_DIRECTORY-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171947981&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:false&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:1325&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:59:09.306Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:extension_point_home_footer&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskSuccess&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:PEOPLE_DIRECTORY-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171947981&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:false&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:1336&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:59:09.317Z&quot;},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;experience-tracker:extension_point_home_footer.performance&quot;,&quot;value&quot;:1113,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskSuccess&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:PEOPLE_DIRECTORY-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171947981&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:false&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:1336&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:59:09.317Z&quot;}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/telemetry</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05_Logout-612" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;batch&quot;:[{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:19.572Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;globalNavigation&quot;,&quot;actionSubject&quot;:&quot;navigationItem&quot;,&quot;action&quot;:&quot;clicked&quot;,&quot;actionSubjectId&quot;:&quot;profile&quot;,&quot;attributes&quot;:{&quot;selectedItemPageContext&quot;:&quot;PEOPLE_DIRECTORY&quot;,&quot;navigationLayer&quot;:&quot;global&quot;,&quot;navVersion&quot;:&quot;3&quot;,&quot;navdexPointType&quot;:&quot;navigationSessionTouch&quot;,&quot;navigationSessionId&quot;:&quot;fc7f8d76-acc7-4d26-a397-f0d7357e3ff2&quot;},&quot;eventType&quot;:&quot;ui&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;navigationItem clicked&quot;,&quot;messageId&quot;:&quot;ajs-ee8612a0-f49e-4205-b681-0f79cb8685e0&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:20.114Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:19.572Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;unknown&quot;,&quot;actionSubject&quot;:&quot;button&quot;,&quot;action&quot;:&quot;clicked&quot;,&quot;attributes&quot;:{&quot;listenerVersion&quot;:&quot;8.3.0&quot;,&quot;packageHierarchy&quot;:&quot;@atlaskit/button@16.3.5&quot;,&quot;packageName&quot;:&quot;@atlaskit/button&quot;,&quot;packageVersion&quot;:&quot;16.3.5&quot;,&quot;componentName&quot;:&quot;button&quot;},&quot;tags&quot;:[&quot;atlaskit&quot;],&quot;eventType&quot;:&quot;ui&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;button clicked&quot;,&quot;messageId&quot;:&quot;ajs-46f1b38b-8e43-4228-9440-41c1a82aefbd&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:20.114Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:19.573Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskStart&quot;,&quot;attributes&quot;:{&quot;uuid&quot;:&quot;PEOPLE_DIRECTORY-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171947981&quot;,&quot;isInitial&quot;:false,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:11585.5,&quot;startTime&quot;:54245,&quot;timeout&quot;:30000,&quot;task&quot;:&quot;navigation/app-nav-profile-dropdown&quot;,&quot;taskId&quot;:&quot;bdb56d93-0ac5-445c-9c1f-6191f6d34804&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskStart&quot;,&quot;messageId&quot;:&quot;ajs-ef99e476-4a8d-4a44-a4d2-4d152a5276d5&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:20.114Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:19.574Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;taskSuccess&quot;,&quot;attributes&quot;:{&quot;uuid&quot;:&quot;PEOPLE_DIRECTORY-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171947981&quot;,&quot;isInitial&quot;:false,&quot;isSSR&quot;:false,&quot;routingDuration&quot;:11588.200000000186,&quot;startTime&quot;:54245,&quot;duration&quot;:3,&quot;activeDuration&quot;:3,&quot;adjustedDuration&quot;:3,&quot;task&quot;:&quot;navigation/app-nav-profile-dropdown&quot;,&quot;taskId&quot;:&quot;bdb56d93-0ac5-445c-9c1f-6191f6d34804&quot;,&quot;browserInfo&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;ui taskSuccess&quot;,&quot;messageId&quot;:&quot;ajs-e139e2b9-2b6c-468d-b72c-d10fa4576fb6&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:20.114Z&quot;},{&quot;context&quot;:{&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:19.828Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;people&quot;,&quot;subproduct&quot;:&quot;confluence-directory&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;source&quot;:&quot;userProfileScreen&quot;,&quot;actionSubject&quot;:&quot;page&quot;,&quot;action&quot;:&quot;dwelled&quot;,&quot;attributes&quot;:{&quot;dwellTime&quot;:5034,&quot;finalDwellEvent&quot;:false},&quot;eventType&quot;:&quot;track&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;ad26d811-6e54-477e-b3a3-072c71850b2a&quot;},&quot;event&quot;:&quot;page dwelled&quot;,&quot;messageId&quot;:&quot;ajs-264d4700-077a-46a7-a503-a9746a031c30&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:20.114Z&quot;}],&quot;sentAt&quot;:&quot;2022-09-26T05:59:20.114Z&quot;,&quot;metadata&quot;:{&quot;eventCount&quot;:5,&quot;resilienceMechanism&quot;:&quot;indexeddb&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/gasv3/api/v1/batch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05_Logout-613" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/session/heartbeat</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05_Logout-614" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/wiki/logout.action</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05_Logout-615" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="application" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">application</stringProp>
                  <stringProp name="Argument.value">confluence</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="dest-url" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dest-url</stringProp>
                  <stringProp name="Argument.value">/wiki/</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/logout</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05_Logout-616" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;batch&quot;:[{&quot;context&quot;:{&quot;locale&quot;:&quot;en_US&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.6.1&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:20.431Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:&quot;${acc}&quot;,&quot;anonymousId&quot;:&quot;eede0541-bdac-4ee9-ba1c-3deb6493c494&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;confluence&quot;,&quot;version&quot;:&quot;CLASSIC-master-12091&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;userIdType&quot;:&quot;atlassianAccount&quot;,&quot;containerType&quot;:&quot;space&quot;,&quot;containerId&quot;:&quot;33186&quot;,&quot;source&quot;:&quot;space&quot;,&quot;actionSubject&quot;:&quot;space&quot;,&quot;action&quot;:&quot;dwelled&quot;,&quot;actionSubjectId&quot;:&quot;33186&quot;,&quot;attributes&quot;:{&quot;dwellTime&quot;:5611,&quot;searchReferrer&quot;:null,&quot;finalDwellEvent&quot;:true,&quot;pageType&quot;:&quot;page&quot;,&quot;spaceType&quot;:&quot;global&quot;,&quot;isUserViewingOwnPersonalSpace&quot;:false},&quot;eventType&quot;:&quot;track&quot;,&quot;tabId&quot;:&quot;fd577822-50f3-4e29-94ee-ee2753a8acab&quot;,&quot;sessionId&quot;:&quot;1664171862909&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;e1b56620-3d84-42c0-a274-1cef61baafd2&quot;},&quot;event&quot;:&quot;space dwelled&quot;,&quot;messageId&quot;:&quot;ajs-f31b8516-37da-4e93-be0f-9dca529fa3ef&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:20.948Z&quot;}],&quot;sentAt&quot;:&quot;2022-09-26T05:59:20.948Z&quot;,&quot;metadata&quot;:{&quot;eventCount&quot;:1,&quot;resilienceMechanism&quot;:&quot;indexeddb&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/gasv3/api/v1/batch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05_Logout-617" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="continue" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">continue</stringProp>
                  <stringProp name="Argument.value">${scheme}://thinktimetechnology.atlassian.net/wiki/</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">id.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/logout</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05_Logout-618" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;type&quot;:&quot;metric&quot;,&quot;meta&quot;:{&quot;globalTags&quot;:[&quot;page:PEOPLE_DIRECTORY&quot;,&quot;cloudId:f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;shard:confluence-prod-ap-8-3.prod.atl-paas.net&quot;,&quot;product:confluence&quot;,&quot;version:CLASSIC-master-12091&quot;,&quot;track:prod&quot;]},&quot;data&quot;:[{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:navigation/app-nav-profile-dropdown&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskStart&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:PEOPLE_DIRECTORY-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171947981&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:false&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:11585.5&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:59:19.566Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:navigation/app-nav-profile-dropdown&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskSuccess&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:PEOPLE_DIRECTORY-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171947981&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:false&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:11588.200000000186&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:59:19.569Z&quot;},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;experience-tracker:navigation/app-nav-profile-dropdown.performance&quot;,&quot;value&quot;:3,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskSuccess&quot;,&quot;isActiveTab:true&quot;,&quot;uuid:PEOPLE_DIRECTORY-page-${acc}-f21b70d0-8bad-458e-9a03-d1d9544e0e8c-1664171947981&quot;,&quot;contentId:undefined&quot;,&quot;isInitial:false&quot;,&quot;isSSR:false&quot;,&quot;routingDuration:11588.200000000186&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:59:19.569Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:onboarding-editor/recent-draft-spotlight&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskAbort&quot;,&quot;isActiveTab:true&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:59:21.648Z&quot;},{&quot;type&quot;:&quot;increment&quot;,&quot;name&quot;:&quot;experience-tracker:view-all-macro&quot;,&quot;value&quot;:1,&quot;sampleRate&quot;:1,&quot;tags&quot;:[&quot;action:taskAbort&quot;,&quot;isActiveTab:true&quot;,&quot;mode:renderer&quot;],&quot;timestamp&quot;:&quot;2022-09-26T05:59:21.648Z&quot;}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/telemetry</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://thinktimetechnology.atlassian.net</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05_Logout-620" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;type&quot;:&quot;metric&quot;,&quot;meta&quot;:{&quot;version&quot;:&quot;5.0.366&quot;,&quot;env&quot;:&quot;prod&quot;,&quot;os&quot;:&quot;windows&quot;,&quot;platform&quot;:&quot;desktop&quot;,&quot;browser&quot;:&quot;chrome&quot;},&quot;metalId&quot;:&quot;106040e7-7aa1-40d4-af50-1464ab63b642&quot;,&quot;data&quot;:[{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.resource_timing&quot;,&quot;tags&quot;:[&quot;page:logout&quot;,&quot;type:script&quot;],&quot;value&quot;:2.2000000001862645,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.resource_timing&quot;,&quot;tags&quot;:[&quot;page:logout&quot;,&quot;type:link&quot;],&quot;value&quot;:1.400000000372529,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.resource_timing&quot;,&quot;tags&quot;:[&quot;page:logout&quot;,&quot;type:script&quot;],&quot;value&quot;:1.300000000745058,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.resource_timing&quot;,&quot;tags&quot;:[&quot;page:logout&quot;,&quot;type:script&quot;],&quot;value&quot;:4.900000000372529,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.resource_timing&quot;,&quot;tags&quot;:[&quot;page:logout&quot;,&quot;type:script&quot;],&quot;value&quot;:3.5,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.time_to_first_byte&quot;,&quot;tags&quot;:[&quot;page:logout&quot;],&quot;value&quot;:1166.5,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.first_paint&quot;,&quot;tags&quot;:[&quot;page:logout&quot;],&quot;value&quot;:1837.300000000745,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.first_contentful_paint&quot;,&quot;tags&quot;:[&quot;page:logout&quot;],&quot;value&quot;:1837.4000000003725,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.first_contentful_paint&quot;,&quot;tags&quot;:[&quot;page:logout&quot;,&quot;gsd_histogram:2000&quot;],&quot;value&quot;:1837.4000000003725,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.resource_timing&quot;,&quot;tags&quot;:[&quot;page:logout&quot;,&quot;type:script&quot;],&quot;value&quot;:1.2000000001862645,&quot;sampleRate&quot;:1}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/metal/ingest</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05_Logout-622" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;type&quot;:&quot;metric&quot;,&quot;meta&quot;:{&quot;version&quot;:&quot;5.0.366&quot;,&quot;env&quot;:&quot;prod&quot;,&quot;os&quot;:&quot;windows&quot;,&quot;platform&quot;:&quot;desktop&quot;,&quot;browser&quot;:&quot;chrome&quot;},&quot;metalId&quot;:&quot;106040e7-7aa1-40d4-af50-1464ab63b642&quot;,&quot;data&quot;:[{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.resource_timing&quot;,&quot;tags&quot;:[&quot;page:logout&quot;,&quot;type:css&quot;],&quot;value&quot;:1.5,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.resource_timing&quot;,&quot;tags&quot;:[&quot;page:logout&quot;,&quot;type:css&quot;],&quot;value&quot;:1.099999999627471,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.resource_timing&quot;,&quot;tags&quot;:[&quot;page:logout&quot;,&quot;type:script&quot;],&quot;value&quot;:1.400000000372529,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.resource_timing&quot;,&quot;tags&quot;:[&quot;page:logout&quot;,&quot;type:img&quot;],&quot;value&quot;:1383,&quot;sampleRate&quot;:1}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/metal/ingest</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05_Logout-624" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;type&quot;:&quot;metric&quot;,&quot;meta&quot;:{&quot;version&quot;:&quot;5.0.366&quot;,&quot;env&quot;:&quot;prod&quot;,&quot;os&quot;:&quot;windows&quot;,&quot;platform&quot;:&quot;desktop&quot;,&quot;browser&quot;:&quot;chrome&quot;},&quot;metalId&quot;:&quot;106040e7-7aa1-40d4-af50-1464ab63b642&quot;,&quot;data&quot;:[{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.request_timing&quot;,&quot;tags&quot;:[&quot;page:logout&quot;,&quot;type:other&quot;],&quot;value&quot;:2.2999999998137355,&quot;sampleRate&quot;:1}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/metal/ingest</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05_Logout-625" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;batch&quot;:[{&quot;context&quot;:{&quot;locale&quot;:&quot;en&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.7.2&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:21.825Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:null,&quot;anonymousId&quot;:&quot;84b5d269-5029-4e4d-badf-5bc93a8e4258&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;identity&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;source&quot;:&quot;unknown&quot;,&quot;actionSubject&quot;:&quot;sli&quot;,&quot;action&quot;:&quot;loadPage&quot;,&quot;attributes&quot;:{&quot;firstProductAccessed&quot;:&quot;confluence&quot;,&quot;originLibrary&quot;:&quot;origin-tracing.js@6.0.8&quot;,&quot;isMobileApp&quot;:false},&quot;tags&quot;:[&quot;identity&quot;],&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;989c756d-a706-4422-9a07-11543c184f67&quot;,&quot;sessionId&quot;:&quot;1664171873630&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;13752cd7-7ff9-4c5e-8931-ebe189f92749&quot;},&quot;event&quot;:&quot;sli loadPage&quot;,&quot;messageId&quot;:&quot;ajs-b6217fe7-d656-4893-940a-ff66054f3bf3&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:24.173Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en-IN&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.7.2&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:22.251Z&quot;,&quot;type&quot;:&quot;page&quot;,&quot;userId&quot;:null,&quot;anonymousId&quot;:&quot;84b5d269-5029-4e4d-badf-5bc93a8e4258&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;identity&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;title&quot;:&quot;&quot;,&quot;path&quot;:&quot;&quot;,&quot;url&quot;:&quot;&quot;,&quot;referrer&quot;:&quot;&quot;,&quot;search&quot;:&quot;&quot;,&quot;eventType&quot;:&quot;screen&quot;,&quot;attributes&quot;:{&quot;firstProductAccessed&quot;:&quot;confluence&quot;,&quot;originLibrary&quot;:&quot;origin-tracing.js@6.0.8&quot;,&quot;isMobileApp&quot;:false,&quot;isAuthenticatedUser&quot;:true,&quot;ffsId&quot;:&quot;&quot;},&quot;tabId&quot;:&quot;989c756d-a706-4422-9a07-11543c184f67&quot;,&quot;sessionId&quot;:&quot;1664171873630&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;b1c97a6c-1fcf-4412-ada9-fb0be08d8994&quot;},&quot;name&quot;:&quot;logoutPage&quot;,&quot;messageId&quot;:&quot;ajs-4a06dde1-b664-4b86-b862-08e0420b1b28&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:24.173Z&quot;}],&quot;sentAt&quot;:&quot;2022-09-26T05:59:24.173Z&quot;,&quot;metadata&quot;:{&quot;eventCount&quot;:2,&quot;resilienceMechanism&quot;:&quot;indexeddb&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">id.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/gasv3/api/v1/batch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05_Logout-626" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="csrfToken" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">csrfToken</stringProp>
                  <stringProp name="Argument.value">${csrf}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">id.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/logout?continue=${scheme}%3A%2F%2Fthinktimetechnology.atlassian.net%2Fwiki%2F</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05_Logout-634" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="cst" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cst</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="anonymousId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">anonymousId</stringProp>
                  <stringProp name="Argument.value">84b5d269-5029-4e4d-badf-5bc93a8e4258</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="continue" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">continue</stringProp>
                  <stringProp name="Argument.value">${scheme}://auth.atlassian.com/v2/logout?returnTo=${scheme}%3A//id.atlassian.com/redirect?continue%3Dhttps%253A//thinktimetechnology.atlassian.net/wiki/&amp;client_id=tDP5by46cc3gEck7d2vbHZsqsfrDK6t9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">id.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/SetCST</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05_Logout-635" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="cst" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cst</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="anonymousId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">anonymousId</stringProp>
                  <stringProp name="Argument.value">84b5d269-5029-4e4d-badf-5bc93a8e4258</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="continue" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">continue</stringProp>
                  <stringProp name="Argument.value">${scheme}://auth.atlassian.com/v2/logout?returnTo=${scheme}%3A//id.atlassian.com/redirect?continue%3Dhttps%253A//thinktimetechnology.atlassian.net/wiki/&amp;client_id=tDP5by46cc3gEck7d2vbHZsqsfrDK6t9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/SetCST</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05_Logout-636" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="cst" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cst</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="anonymousId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">anonymousId</stringProp>
                  <stringProp name="Argument.value">84b5d269-5029-4e4d-badf-5bc93a8e4258</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="continue" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">continue</stringProp>
                  <stringProp name="Argument.value">${scheme}://auth.atlassian.com/v2/logout?returnTo=${scheme}%3A//id.atlassian.com/redirect?continue%3Dhttps%253A//thinktimetechnology.atlassian.net/wiki/&amp;client_id=tDP5by46cc3gEck7d2vbHZsqsfrDK6t9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api-private.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/SetCST</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05_Logout-637" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="cst" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cst</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="anonymousId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">anonymousId</stringProp>
                  <stringProp name="Argument.value">84b5d269-5029-4e4d-badf-5bc93a8e4258</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="continue" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">continue</stringProp>
                  <stringProp name="Argument.value">${scheme}://auth.atlassian.com/v2/logout?returnTo=${scheme}%3A//id.atlassian.com/redirect?continue%3Dhttps%253A//thinktimetechnology.atlassian.net/wiki/&amp;client_id=tDP5by46cc3gEck7d2vbHZsqsfrDK6t9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">start.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/SetCST</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05_Logout-638" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="returnTo" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">returnTo</stringProp>
                  <stringProp name="Argument.value">${scheme}://id.atlassian.com/redirect?continue=${scheme}%3A//thinktimetechnology.atlassian.net/wiki/</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="client_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client_id</stringProp>
                  <stringProp name="Argument.value">tDP5by46cc3gEck7d2vbHZsqsfrDK6t9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">auth.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/v2/logout</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05_Logout-639" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="continue" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">continue</stringProp>
                  <stringProp name="Argument.value">${scheme}://thinktimetechnology.atlassian.net/wiki/</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">id.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/redirect</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05_Logout-640" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/wiki/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05_Logout-641" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="application" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">application</stringProp>
                  <stringProp name="Argument.value">confluence</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="dest-url" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dest-url</stringProp>
                  <stringProp name="Argument.value">/wiki/</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">thinktimetechnology.atlassian.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/login</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05_Logout-642" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="continue" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">continue</stringProp>
                  <stringProp name="Argument.value">${scheme}://id.atlassian.com/join/user-access?resource=ari%3Acloud%3Aconfluence%3A%3Asite%2Ff21b70d0-8bad-458e-9a03-d1d9544e0e8c&amp;continue=${scheme}%3A%2F%2Fthinktimetechnology.atlassian.net%2Fwiki%2F</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="application" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">application</stringProp>
                  <stringProp name="Argument.value">confluence</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">id.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/login</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05_Logout-644" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;type&quot;:&quot;metric&quot;,&quot;meta&quot;:{&quot;version&quot;:&quot;5.0.366&quot;,&quot;env&quot;:&quot;prod&quot;,&quot;os&quot;:&quot;windows&quot;,&quot;platform&quot;:&quot;desktop&quot;,&quot;browser&quot;:&quot;chrome&quot;},&quot;metalId&quot;:&quot;106040e7-7aa1-40d4-af50-1464ab63b642&quot;,&quot;data&quot;:[{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.resource_timing&quot;,&quot;tags&quot;:[&quot;page:login&quot;,&quot;type:script&quot;],&quot;value&quot;:0,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.resource_timing&quot;,&quot;tags&quot;:[&quot;page:login&quot;,&quot;type:link&quot;],&quot;value&quot;:7.3999999994412065,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.resource_timing&quot;,&quot;tags&quot;:[&quot;page:login&quot;,&quot;type:script&quot;],&quot;value&quot;:0,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.resource_timing&quot;,&quot;tags&quot;:[&quot;page:login&quot;,&quot;type:script&quot;],&quot;value&quot;:0,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.resource_timing&quot;,&quot;tags&quot;:[&quot;page:login&quot;,&quot;type:script&quot;],&quot;value&quot;:0,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.time_to_first_byte&quot;,&quot;tags&quot;:[&quot;page:login&quot;],&quot;value&quot;:7797.600000000559,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.resource_timing&quot;,&quot;tags&quot;:[&quot;page:login&quot;,&quot;type:script&quot;],&quot;value&quot;:1.400000000372529,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.resource_timing&quot;,&quot;tags&quot;:[&quot;page:login&quot;,&quot;type:script&quot;],&quot;value&quot;:2,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.resource_timing&quot;,&quot;tags&quot;:[&quot;page:login&quot;,&quot;type:script&quot;],&quot;value&quot;:1.2000000001862645,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.resource_timing&quot;,&quot;tags&quot;:[&quot;page:login&quot;,&quot;type:script&quot;],&quot;value&quot;:3.7000000001862645,&quot;sampleRate&quot;:1}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/metal/ingest</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05_Logout-643" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;message&quot;:&quot;i18n_fetch_language_error&quot;,&quot;level&quot;:&quot;error&quot;,&quot;event_id&quot;:&quot;4f298929f24b41f8941988cb4df1c7ef&quot;,&quot;platform&quot;:&quot;javascript&quot;,&quot;sdk&quot;:{&quot;name&quot;:&quot;sentry.javascript.browser&quot;,&quot;packages&quot;:[{&quot;name&quot;:&quot;npm:@sentry/browser&quot;,&quot;version&quot;:&quot;5.18.0&quot;}],&quot;version&quot;:&quot;5.18.0&quot;,&quot;integrations&quot;:[&quot;InboundFilters&quot;,&quot;FunctionToString&quot;,&quot;TryCatch&quot;,&quot;Breadcrumbs&quot;,&quot;GlobalHandlers&quot;,&quot;LinkedErrors&quot;,&quot;UserAgent&quot;]},&quot;timestamp&quot;:1664171975.4891,&quot;environment&quot;:&quot;prod&quot;,&quot;release&quot;:&quot;5.0.366&quot;,&quot;extra&quot;:{&quot;isEmbedded&quot;:false,&quot;isMobileOidc&quot;:false,&quot;aid_signup.microsoft.auth.enabled&quot;:true,&quot;aid_signup.apple.auth.enabled&quot;:true,&quot;aid_signup.recaptcha_enterprise.enabled&quot;:true,&quot;aid_signup.disallow.bitbucket.username.login&quot;:true,&quot;sign-in-with-slack.enabled&quot;:true,&quot;aid-frontend.google.login.outage.advisory.enabled&quot;:false,&quot;aid-frontend.microsoft.login.outage.advisory.enabled&quot;:false,&quot;aid-frontend.apple.login.outage.advisory.enabled&quot;:false,&quot;aid-frontend.slack.login.outage.advisory.enabled&quot;:false,&quot;aid-frontend.enable-subbranding&quot;:false,&quot;aid-frontend.google.one.tap.enabled&quot;:true,&quot;aid-frontend.growth.login-page-optimisation&quot;:&quot;background-variation&quot;,&quot;aid-frontend.growth.login-page-optimisation-v2&quot;:&quot;not-enrolled&quot;,&quot;aid-signup.defer-auth0-rules-for-apple.enabled&quot;:false,&quot;aid-signup.defer-auth0-rules-for-microsoft.enabled&quot;:false,&quot;aid-signup.defer-auth0-rules-for-slack.enabled&quot;:false,&quot;localeId&quot;:&quot;en&quot;,&quot;code&quot;:&quot;MODULE_NOT_FOUND&quot;},&quot;user&quot;:{&quot;id&quot;:&quot;84b5d269-5029-4e4d-badf-5bc93a8e4258&quot;},&quot;breadcrumbs&quot;:[{&quot;timestamp&quot;:1664171975.4776,&quot;category&quot;:&quot;operational&quot;,&quot;message&quot;:&quot;loadPage operational event occured at sli undefined on page unknown&quot;,&quot;data&quot;:{&quot;source&quot;:&quot;unknown&quot;,&quot;actionSubject&quot;:&quot;sli&quot;,&quot;action&quot;:&quot;loadPage&quot;,&quot;actionSubjectId&quot;:&quot;[undefined]&quot;,&quot;firstProductAccessed&quot;:&quot;confluence&quot;,&quot;originLibrary&quot;:&quot;origin-tracing.js@6.0.8&quot;,&quot;isMobileApp&quot;:false,&quot;ffsId&quot;:&quot;43ab9eef-8ea7-44c5-bf8e-9c5a7b45c5f4&quot;},&quot;level&quot;:&quot;info&quot;}],&quot;request&quot;:{&quot;url&quot;:&quot;${scheme}://id.atlassian.com/login?continue=${scheme}%3A%2F%2Fid.atlassian.com%2Fjoin%2Fuser-access%3Fresource%3Dari%253Acloud%253Aconfluence%253A%253Asite%252Ff21b70d0-8bad-458e-9a03-d1d9544e0e8c%26continue%3Dhttps%253A%252F%252Fthinktimetechnology.atlassian.net%252Fwiki%252F&amp;application=confluence&quot;,&quot;headers&quot;:{&quot;User-Agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/sentry-cloud/api/275199/store/?sentry_key=71e54c28be0d49f0bcd732ab30f35faa&amp;sentry_version=7</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05_Logout-648" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">aid-frontend.prod.atl-paas.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/atlassian-id/front-end/5.0.366/static/media/PageBreadcrumbs.f3d0f4f2.svg</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05_Logout-646" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">aid-frontend.prod.atl-paas.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/atlassian-id/front-end/5.0.366/static/media/SecondaryNav.be43d7f2.svg</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05_Logout-650" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;type&quot;:&quot;metric&quot;,&quot;meta&quot;:{&quot;version&quot;:&quot;5.0.366&quot;,&quot;env&quot;:&quot;prod&quot;,&quot;os&quot;:&quot;windows&quot;,&quot;platform&quot;:&quot;desktop&quot;,&quot;browser&quot;:&quot;chrome&quot;},&quot;metalId&quot;:&quot;106040e7-7aa1-40d4-af50-1464ab63b642&quot;,&quot;data&quot;:[{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.resource_timing&quot;,&quot;tags&quot;:[&quot;page:login&quot;,&quot;type:script&quot;],&quot;value&quot;:1.900000000372529,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.first_paint&quot;,&quot;tags&quot;:[&quot;page:login&quot;],&quot;value&quot;:8104.799999999814,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.first_contentful_paint&quot;,&quot;tags&quot;:[&quot;page:login&quot;],&quot;value&quot;:8104.799999999814,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.first_contentful_paint&quot;,&quot;tags&quot;:[&quot;page:login&quot;,&quot;gsd_histogram:2000&quot;],&quot;value&quot;:8104.799999999814,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.first_meaningful_paint&quot;,&quot;tags&quot;:[&quot;page:login&quot;],&quot;value&quot;:8104.799999999814,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.first_meaningful_paint&quot;,&quot;tags&quot;:[&quot;page:login&quot;,&quot;gsd_histogram:2000&quot;],&quot;value&quot;:8104.799999999814,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.resource_timing&quot;,&quot;tags&quot;:[&quot;page:login&quot;,&quot;type:img&quot;],&quot;value&quot;:1.6000000005587935,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.resource_timing&quot;,&quot;tags&quot;:[&quot;page:login&quot;,&quot;type:img&quot;],&quot;value&quot;:1.099999999627471,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.resource_timing&quot;,&quot;tags&quot;:[&quot;page:login&quot;,&quot;type:img&quot;],&quot;value&quot;:1.099999999627471,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.resource_timing&quot;,&quot;tags&quot;:[&quot;page:login&quot;,&quot;type:img&quot;],&quot;value&quot;:2.5,&quot;sampleRate&quot;:1}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/metal/ingest</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05_Logout-649" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">aid-frontend.prod.atl-paas.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/atlassian-id/front-end/5.0.366/static/media/PageContent.2657008b.svg</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05_Logout-645" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">aid-frontend.prod.atl-paas.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/atlassian-id/front-end/5.0.366/static/media/Search.fcb9272b.svg</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05_Logout-647" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">aid-frontend.prod.atl-paas.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/atlassian-id/front-end/5.0.366/static/media/PageActions.9a67e68a.svg</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05_Logout-655" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;batch&quot;:[{&quot;context&quot;:{&quot;locale&quot;:&quot;en-IN&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.7.2&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:35.671Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:null,&quot;anonymousId&quot;:&quot;84b5d269-5029-4e4d-badf-5bc93a8e4258&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;identity&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;none&quot;,&quot;source&quot;:&quot;loginScreen&quot;,&quot;actionSubject&quot;:&quot;feature&quot;,&quot;action&quot;:&quot;exposed&quot;,&quot;attributes&quot;:{&quot;firstProductAccessed&quot;:&quot;confluence&quot;,&quot;originLibrary&quot;:&quot;origin-tracing.js@6.0.8&quot;,&quot;isMobileApp&quot;:false,&quot;flagKey&quot;:&quot;aid_signup.apple.auth.enabled&quot;,&quot;reason&quot;:&quot;RULE_MATCH&quot;,&quot;ruleId&quot;:&quot;93E21B0C-9CB7-468E-B341-C378CCE0B285&quot;,&quot;value&quot;:true,&quot;ffsId&quot;:&quot;43ab9eef-8ea7-44c5-bf8e-9c5a7b45c5f4&quot;},&quot;tags&quot;:[&quot;identity&quot;],&quot;eventType&quot;:&quot;track&quot;,&quot;tabId&quot;:&quot;989c756d-a706-4422-9a07-11543c184f67&quot;,&quot;sessionId&quot;:&quot;1664171873630&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;9b6f9437-9c9c-4b13-b249-95ecd1598607&quot;},&quot;event&quot;:&quot;feature exposed&quot;,&quot;messageId&quot;:&quot;ajs-1753dd0b-fe33-4570-8af5-5d2ce74ae923&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:36.322Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en-IN&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.7.2&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:35.670Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:null,&quot;anonymousId&quot;:&quot;84b5d269-5029-4e4d-badf-5bc93a8e4258&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;identity&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;none&quot;,&quot;source&quot;:&quot;loginScreen&quot;,&quot;actionSubject&quot;:&quot;feature&quot;,&quot;action&quot;:&quot;exposed&quot;,&quot;attributes&quot;:{&quot;firstProductAccessed&quot;:&quot;confluence&quot;,&quot;originLibrary&quot;:&quot;origin-tracing.js@6.0.8&quot;,&quot;isMobileApp&quot;:false,&quot;flagKey&quot;:&quot;aid_signup.microsoft.auth.enabled&quot;,&quot;reason&quot;:&quot;RULE_MATCH&quot;,&quot;ruleId&quot;:&quot;0E2C138D-053A-450C-914A-5E5C9D1539B9&quot;,&quot;value&quot;:true,&quot;ffsId&quot;:&quot;43ab9eef-8ea7-44c5-bf8e-9c5a7b45c5f4&quot;},&quot;tags&quot;:[&quot;identity&quot;],&quot;eventType&quot;:&quot;track&quot;,&quot;tabId&quot;:&quot;989c756d-a706-4422-9a07-11543c184f67&quot;,&quot;sessionId&quot;:&quot;1664171873630&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;9b6f9437-9c9c-4b13-b249-95ecd1598607&quot;},&quot;event&quot;:&quot;feature exposed&quot;,&quot;messageId&quot;:&quot;ajs-4636c138-c856-438a-9603-468f855fa203&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:36.322Z&quot;}],&quot;sentAt&quot;:&quot;2022-09-26T05:59:36.322Z&quot;,&quot;metadata&quot;:{&quot;eventCount&quot;:8,&quot;resilienceMechanism&quot;:&quot;indexeddb&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">id.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/gasv3/api/v1/batch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05_Logout-654" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;batch&quot;:[{&quot;context&quot;:{&quot;locale&quot;:&quot;en-IN&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.7.2&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:24.341Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:null,&quot;anonymousId&quot;:&quot;84b5d269-5029-4e4d-badf-5bc93a8e4258&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;identity&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;cloudId&quot;,&quot;tenantId&quot;:&quot;f21b70d0-8bad-458e-9a03-d1d9544e0e8c&quot;,&quot;source&quot;:&quot;logoutPage&quot;,&quot;actionSubject&quot;:&quot;form&quot;,&quot;action&quot;:&quot;submitted&quot;,&quot;actionSubjectId&quot;:&quot;logout&quot;,&quot;attributes&quot;:{&quot;firstProductAccessed&quot;:&quot;confluence&quot;,&quot;originLibrary&quot;:&quot;origin-tracing.js@6.0.8&quot;,&quot;isMobileApp&quot;:false,&quot;ffsId&quot;:&quot;&quot;},&quot;tags&quot;:[&quot;identity&quot;],&quot;eventType&quot;:&quot;ui&quot;,&quot;tabId&quot;:&quot;989c756d-a706-4422-9a07-11543c184f67&quot;,&quot;sessionId&quot;:&quot;1664171873630&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;b1c97a6c-1fcf-4412-ada9-fb0be08d8994&quot;},&quot;event&quot;:&quot;form submitted&quot;,&quot;messageId&quot;:&quot;ajs-4e1a9288-f5a5-4b37-bd85-28229dfb4d1e&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:36.308Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.7.2&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:35.477Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:null,&quot;anonymousId&quot;:&quot;84b5d269-5029-4e4d-badf-5bc93a8e4258&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;identity&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;none&quot;,&quot;source&quot;:&quot;unknown&quot;,&quot;actionSubject&quot;:&quot;sli&quot;,&quot;action&quot;:&quot;loadPage&quot;,&quot;attributes&quot;:{&quot;firstProductAccessed&quot;:&quot;confluence&quot;,&quot;originLibrary&quot;:&quot;origin-tracing.js@6.0.8&quot;,&quot;isMobileApp&quot;:false,&quot;ffsId&quot;:&quot;43ab9eef-8ea7-44c5-bf8e-9c5a7b45c5f4&quot;},&quot;tags&quot;:[&quot;identity&quot;],&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;989c756d-a706-4422-9a07-11543c184f67&quot;,&quot;sessionId&quot;:&quot;1664171873630&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;7c01b54b-0dc2-4c75-8d5a-d885914c6d3b&quot;},&quot;event&quot;:&quot;sli loadPage&quot;,&quot;messageId&quot;:&quot;ajs-9bd96891-5811-4151-9a99-2eac7d0d2305&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:36.308Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en-IN&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.7.2&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:35.592Z&quot;,&quot;type&quot;:&quot;page&quot;,&quot;userId&quot;:null,&quot;anonymousId&quot;:&quot;84b5d269-5029-4e4d-badf-5bc93a8e4258&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;identity&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;none&quot;,&quot;title&quot;:&quot;&quot;,&quot;path&quot;:&quot;&quot;,&quot;url&quot;:&quot;&quot;,&quot;referrer&quot;:&quot;&quot;,&quot;search&quot;:&quot;&quot;,&quot;eventType&quot;:&quot;screen&quot;,&quot;attributes&quot;:{&quot;firstProductAccessed&quot;:&quot;confluence&quot;,&quot;originLibrary&quot;:&quot;origin-tracing.js@6.0.8&quot;,&quot;isMobileApp&quot;:false,&quot;isMicrosoftButtonEnabled&quot;:true,&quot;isAppleButtonEnabled&quot;:true,&quot;isSlackButtonEnabled&quot;:true,&quot;referer&quot;:&quot;${scheme}://id.atlassian.com/&quot;,&quot;loginPageExperimentCohort&quot;:&quot;background-variation&quot;,&quot;loginPageExperimentCohortV2&quot;:&quot;not-enrolled&quot;,&quot;noAccess&quot;:false,&quot;loginExperimentResolvedCohort&quot;:&quot;background-variation&quot;,&quot;loginExperimentResolvedCohortV2&quot;:&quot;background-variation&quot;,&quot;ffsId&quot;:&quot;43ab9eef-8ea7-44c5-bf8e-9c5a7b45c5f4&quot;},&quot;tabId&quot;:&quot;989c756d-a706-4422-9a07-11543c184f67&quot;,&quot;sessionId&quot;:&quot;1664171873630&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;9b6f9437-9c9c-4b13-b249-95ecd1598607&quot;},&quot;name&quot;:&quot;loginScreen&quot;,&quot;messageId&quot;:&quot;ajs-fa491359-763f-4708-8873-b941111a63b0&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:36.308Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en-IN&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.7.2&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:35.641Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:null,&quot;anonymousId&quot;:&quot;84b5d269-5029-4e4d-badf-5bc93a8e4258&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;identity&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;none&quot;,&quot;source&quot;:&quot;ui&quot;,&quot;actionSubject&quot;:&quot;ui&quot;,&quot;action&quot;:&quot;readyForUser&quot;,&quot;attributes&quot;:{&quot;properties&quot;:{&quot;firstPaint&quot;:null,&quot;firstContentfulPaint&quot;:null},&quot;task&quot;:&quot;viewLoginPage&quot;,&quot;type&quot;:&quot;initialLoad&quot;,&quot;threshold&quot;:1000,&quot;apdex&quot;:0,&quot;startTime&quot;:1664171967559.1,&quot;stopTime&quot;:1664171975641.2002,&quot;duration&quot;:8082.10009765625,&quot;isActiveTab&quot;:true},&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;989c756d-a706-4422-9a07-11543c184f67&quot;,&quot;sessionId&quot;:&quot;1664171873630&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;9b6f9437-9c9c-4b13-b249-95ecd1598607&quot;},&quot;event&quot;:&quot;ui readyForUser&quot;,&quot;messageId&quot;:&quot;ajs-be36f510-0160-4114-9aa6-b474e51fa11f&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:36.308Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en-IN&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.7.2&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:35.643Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:null,&quot;anonymousId&quot;:&quot;84b5d269-5029-4e4d-badf-5bc93a8e4258&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;identity&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;none&quot;,&quot;source&quot;:&quot;loginScreen&quot;,&quot;actionSubject&quot;:&quot;sli&quot;,&quot;action&quot;:&quot;loadLoginPageSuccessful&quot;,&quot;attributes&quot;:{&quot;firstProductAccessed&quot;:&quot;confluence&quot;,&quot;originLibrary&quot;:&quot;origin-tracing.js@6.0.8&quot;,&quot;isMobileApp&quot;:false,&quot;ffsId&quot;:&quot;43ab9eef-8ea7-44c5-bf8e-9c5a7b45c5f4&quot;},&quot;tags&quot;:[&quot;identity&quot;],&quot;eventType&quot;:&quot;operational&quot;,&quot;tabId&quot;:&quot;989c756d-a706-4422-9a07-11543c184f67&quot;,&quot;sessionId&quot;:&quot;1664171873630&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;9b6f9437-9c9c-4b13-b249-95ecd1598607&quot;},&quot;event&quot;:&quot;sli loadLoginPageSuccessful&quot;,&quot;messageId&quot;:&quot;ajs-edaa5008-27a9-4ed2-99e1-c41634362c67&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:36.308Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en-IN&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.7.2&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:35.644Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:null,&quot;anonymousId&quot;:&quot;84b5d269-5029-4e4d-badf-5bc93a8e4258&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;identity&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;none&quot;,&quot;source&quot;:&quot;loginScreen&quot;,&quot;actionSubject&quot;:&quot;feature&quot;,&quot;action&quot;:&quot;exposed&quot;,&quot;attributes&quot;:{&quot;firstProductAccessed&quot;:&quot;confluence&quot;,&quot;originLibrary&quot;:&quot;origin-tracing.js@6.0.8&quot;,&quot;isMobileApp&quot;:false,&quot;flagKey&quot;:&quot;aid-frontend.growth.login-page-optimisation&quot;,&quot;reason&quot;:&quot;RULE_MATCH&quot;,&quot;ruleId&quot;:&quot;aid-frontend.growth.login-page-optimisation&quot;,&quot;value&quot;:&quot;background-variation&quot;,&quot;loginExperimentIsEnrolled&quot;:true,&quot;loginExperimentEnrollmentReason&quot;:{&quot;hasMobileScreenSize&quot;:false,&quot;hasContentTitle&quot;:false,&quot;product&quot;:&quot;confluence&quot;},&quot;loginExperimentResolvedCohort&quot;:&quot;background-variation&quot;,&quot;ffsId&quot;:&quot;43ab9eef-8ea7-44c5-bf8e-9c5a7b45c5f4&quot;},&quot;tags&quot;:[&quot;identity&quot;],&quot;eventType&quot;:&quot;track&quot;,&quot;tabId&quot;:&quot;989c756d-a706-4422-9a07-11543c184f67&quot;,&quot;sessionId&quot;:&quot;1664171873630&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;9b6f9437-9c9c-4b13-b249-95ecd1598607&quot;},&quot;event&quot;:&quot;feature exposed&quot;,&quot;messageId&quot;:&quot;ajs-b68a0a0b-ce04-4bd2-be57-905167a74320&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:36.308Z&quot;},{&quot;context&quot;:{&quot;locale&quot;:&quot;en-IN&quot;,&quot;screen&quot;:{&quot;width&quot;:1366,&quot;height&quot;:768,&quot;density&quot;:1},&quot;library&quot;:{&quot;name&quot;:&quot;analytics.js&quot;,&quot;version&quot;:&quot;4.7.2&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36&quot;},&quot;timestamp&quot;:&quot;2022-09-26T05:59:35.671Z&quot;,&quot;type&quot;:&quot;track&quot;,&quot;userId&quot;:null,&quot;anonymousId&quot;:&quot;84b5d269-5029-4e4d-badf-5bc93a8e4258&quot;,&quot;properties&quot;:{&quot;env&quot;:&quot;prod&quot;,&quot;product&quot;:&quot;identity&quot;,&quot;origin&quot;:&quot;web&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;tenantIdType&quot;:&quot;none&quot;,&quot;source&quot;:&quot;loginScreen&quot;,&quot;actionSubject&quot;:&quot;feature&quot;,&quot;action&quot;:&quot;exposed&quot;,&quot;attributes&quot;:{&quot;firstProductAccessed&quot;:&quot;confluence&quot;,&quot;originLibrary&quot;:&quot;origin-tracing.js@6.0.8&quot;,&quot;isMobileApp&quot;:false,&quot;flagKey&quot;:&quot;sign-in-with-slack.enabled&quot;,&quot;reason&quot;:&quot;RULE_MATCH&quot;,&quot;ruleId&quot;:&quot;65BE87D7-EE80-41EC-BBBB-68677B700347&quot;,&quot;value&quot;:true,&quot;ffsId&quot;:&quot;43ab9eef-8ea7-44c5-bf8e-9c5a7b45c5f4&quot;},&quot;tags&quot;:[&quot;identity&quot;],&quot;eventType&quot;:&quot;track&quot;,&quot;tabId&quot;:&quot;989c756d-a706-4422-9a07-11543c184f67&quot;,&quot;sessionId&quot;:&quot;1664171873630&quot;,&quot;taskSessions&quot;:{},&quot;pageLoadId&quot;:&quot;9b6f9437-9c9c-4b13-b249-95ecd1598607&quot;},&quot;event&quot;:&quot;feature exposed&quot;,&quot;messageId&quot;:&quot;ajs-406b98bd-0bee-49ae-8659-7c9f834fec79&quot;,&quot;sentAt&quot;:&quot;2022-09-26T05:59:36.308Z&quot;}],&quot;sentAt&quot;:&quot;2022-09-26T05:59:36.308Z&quot;,&quot;metadata&quot;:{&quot;eventCount&quot;:8,&quot;resilienceMechanism&quot;:&quot;indexeddb&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">id.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/gateway/api/gasv3/api/v1/batch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05_Logout-653" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;type&quot;:&quot;metric&quot;,&quot;meta&quot;:{&quot;version&quot;:&quot;5.0.366&quot;,&quot;env&quot;:&quot;prod&quot;,&quot;os&quot;:&quot;windows&quot;,&quot;platform&quot;:&quot;desktop&quot;,&quot;browser&quot;:&quot;chrome&quot;},&quot;metalId&quot;:&quot;106040e7-7aa1-40d4-af50-1464ab63b642&quot;,&quot;data&quot;:[{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.resource_timing&quot;,&quot;tags&quot;:[&quot;page:login&quot;,&quot;type:script&quot;],&quot;value&quot;:1.400000000372529,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.resource_timing&quot;,&quot;tags&quot;:[&quot;page:login&quot;,&quot;type:link&quot;],&quot;value&quot;:1.400000000372529,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.request_timing&quot;,&quot;tags&quot;:[&quot;page:login&quot;,&quot;type:fetch&quot;],&quot;value&quot;:424.5,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.request_timing&quot;,&quot;tags&quot;:[&quot;page:login&quot;,&quot;type:xmlhttprequest&quot;],&quot;value&quot;:303.5,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.resource_timing&quot;,&quot;tags&quot;:[&quot;page:login&quot;,&quot;type:img&quot;],&quot;value&quot;:486.29999999981374,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.resource_timing&quot;,&quot;tags&quot;:[&quot;page:login&quot;,&quot;type:img&quot;],&quot;value&quot;:483.20000000018626,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.resource_timing&quot;,&quot;tags&quot;:[&quot;page:login&quot;,&quot;type:img&quot;],&quot;value&quot;:520.4000000003725,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.resource_timing&quot;,&quot;tags&quot;:[&quot;page:login&quot;,&quot;type:img&quot;],&quot;value&quot;:532.5,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.resource_timing&quot;,&quot;tags&quot;:[&quot;page:login&quot;,&quot;type:img&quot;],&quot;value&quot;:532.5,&quot;sampleRate&quot;:1},{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.request_timing&quot;,&quot;tags&quot;:[&quot;page:login&quot;,&quot;type:other&quot;],&quot;value&quot;:1.599999999627471,&quot;sampleRate&quot;:1}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/metal/ingest</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05_Logout-656" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;type&quot;:&quot;metric&quot;,&quot;meta&quot;:{&quot;version&quot;:&quot;5.0.366&quot;,&quot;env&quot;:&quot;prod&quot;,&quot;os&quot;:&quot;windows&quot;,&quot;platform&quot;:&quot;desktop&quot;,&quot;browser&quot;:&quot;chrome&quot;},&quot;metalId&quot;:&quot;106040e7-7aa1-40d4-af50-1464ab63b642&quot;,&quot;data&quot;:[{&quot;type&quot;:&quot;timing&quot;,&quot;name&quot;:&quot;fe.perf.resource_timing&quot;,&quot;tags&quot;:[&quot;page:login&quot;,&quot;type:img&quot;],&quot;value&quot;:1007.7000000001863,&quot;sampleRate&quot;:1}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.atlassian.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/metal/ingest</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-IN,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://id.atlassian.com</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>true</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ProxyControl guiclass="ProxyControlGui" testclass="ProxyControl" testname="HTTP(S) Test Script Recorder" enabled="false">
        <stringProp name="ProxyControlGui.port">8888</stringProp>
        <collectionProp name="ProxyControlGui.exclude_list">
          <stringProp name="805311387">windowsupdate\.microsoft\.com.*</stringProp>
          <stringProp name="1179605444">(?i).*\.(bmp|css|js|gif|ico|jpe?g|png|swf|eot|otf|ttf|mp4|woff|woff2)</stringProp>
          <stringProp name="110431874">.*msg\.yahoo\.com.*</stringProp>
          <stringProp name="-88591710">www\.download\.windowsupdate\.com.*</stringProp>
          <stringProp name="1323576868">toolbarqueries\.google\..*</stringProp>
          <stringProp name="1739087931">http?://self-repair\.mozilla\.org.*</stringProp>
          <stringProp name="1206954446">tiles.*\.mozilla\.com.*</stringProp>
          <stringProp name="-1424663473">.*detectportal\.firefox\.com.*</stringProp>
          <stringProp name="1779943373">us\.update\.toolbar\.yahoo\.com.*</stringProp>
          <stringProp name="-190610036">.*\.google\.com.*/safebrowsing/.*</stringProp>
          <stringProp name="-1899150273">api\.bing\.com.*</stringProp>
          <stringProp name="-958112859">toolbar\.google\.com.*</stringProp>
          <stringProp name="-192420923">.*yimg\.com.*</stringProp>
          <stringProp name="-576820688">toolbar\.msn\.com.*</stringProp>
          <stringProp name="305776760">(?i).*\.(bmp|css|js|gif|ico|jpe?g|png|swf|eot|otf|ttf|mp4|woff|woff2)[\?;].*</stringProp>
          <stringProp name="-1435252351">toolbar\.avg\.com/.*</stringProp>
          <stringProp name="2118375536">www\.google-analytics\.com.*</stringProp>
          <stringProp name="-1279148329">pgq\.yahoo\.com.*</stringProp>
          <stringProp name="1815174768">safebrowsing.*\.google\.com.*</stringProp>
          <stringProp name="-1314416226">sqm\.microsoft\.com.*</stringProp>
          <stringProp name="587935979">g\.msn.*</stringProp>
          <stringProp name="1629558731">clients.*\.google.*</stringProp>
          <stringProp name="11072252">.*toolbar\.yahoo\.com.*</stringProp>
          <stringProp name="1726898318">geo\.yahoo\.com.*</stringProp>
        </collectionProp>
        <collectionProp name="ProxyControlGui.include_list"/>
        <boolProp name="ProxyControlGui.capture_http_headers">true</boolProp>
        <intProp name="ProxyControlGui.grouping_mode">4</intProp>
        <boolProp name="ProxyControlGui.add_assertion">false</boolProp>
        <stringProp name="ProxyControlGui.sampler_type_name"></stringProp>
        <boolProp name="ProxyControlGui.sampler_redirect_automatically">false</boolProp>
        <boolProp name="ProxyControlGui.sampler_follow_redirects">true</boolProp>
        <boolProp name="ProxyControlGui.use_keepalive">true</boolProp>
        <boolProp name="ProxyControlGui.sampler_download_images">false</boolProp>
        <boolProp name="ProxyControlGui.regex_match">true</boolProp>
        <stringProp name="ProxyControlGui.content_type_include"></stringProp>
        <stringProp name="ProxyControlGui.content_type_exclude"></stringProp>
        <boolProp name="ProxyControlGui.notify_child_sl_filtered">false</boolProp>
        <stringProp name="ProxyControlGui.proxy_prefix_http_sampler_name">05_Logout</stringProp>
        <intProp name="ProxyControlGui.proxy_http_sampler_naming_mode">1</intProp>
        <stringProp name="ProxyControlGui.proxy_pause_http_sampler"></stringProp>
        <boolProp name="ProxyControlGui.detect_graphql_request">true</boolProp>
        <stringProp name="ProxyControlGui.default_encoding">UTF-8</stringProp>
      </ProxyControl>
      <hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>true</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>true</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">C:\JMeter\apache-jmeter-5.5\apache-jmeter-5.5\bin\Granted.xml</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
